"DatabaseLogID";"PostTime";"DatabaseUser";"Event";"Schema";"Object";"TSQL";"XmlEvent"
1;14/10/2005 01:58:27;"dbo";"CREATE_TABLE";"dbo";"ErrorLog";"CREATE TABLE [dbo].[ErrorLog](
    [ErrorLogID] [int] IDENTITY (1, 1) NOT NULL,
    [ErrorTime] [datetime] NOT NULL CONSTRAINT [DF_ErrorLog_ErrorTime] DEFAULT (GETDATE()),
    [UserName] [sysname] NOT NULL, 
    [ErrorNumber] [int] NOT NULL, 
    [ErrorSeverity] [int] NULL, 
    [ErrorState] [int] NULL, 
    [ErrorProcedure] [nvarchar](126) NULL, 
    [ErrorLine] [int] NULL, 
    [ErrorMessage] [nvarchar](4000) NOT NULL
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:27.523</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>ErrorLog</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [dbo].[ErrorLog](&#x0D;
    [ErrorLogID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [ErrorTime] [datetime] NOT NULL CONSTRAINT [DF_ErrorLog_ErrorTime] DEFAULT (GETDATE()),&#x0D;
    [UserName] [sysname] NOT NULL, &#x0D;
    [ErrorNumber] [int] NOT NULL, &#x0D;
    [ErrorSeverity] [int] NULL, &#x0D;
    [ErrorState] [int] NULL, &#x0D;
    [ErrorProcedure] [nvarchar](126) NULL, &#x0D;
    [ErrorLine] [int] NULL, &#x0D;
    [ErrorMessage] [nvarchar](4000) NOT NULL&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
2;14/10/2005 01:58:27;"dbo";"ALTER_TABLE";"dbo";"ErrorLog";"ALTER TABLE [dbo].[ErrorLog] WITH CHECK ADD 
    CONSTRAINT [PK_ErrorLog_ErrorLogID] PRIMARY KEY CLUSTERED 
    (
        [ErrorLogID]
    )  ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:58:27.633</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>ErrorLog</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [dbo].[ErrorLog] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ErrorLog_ErrorLogID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ErrorLogID]&#x0D;
    )  ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
3;14/10/2005 01:58:27;"dbo";"CREATE_PROCEDURE";"dbo";"uspPrintError";"
-- uspPrintError prints error information about the error that caused 
-- execution to jump to the CATCH block of a TRY...CATCH construct. 
-- Should be executed from within the scope of a CATCH block otherwise 
-- it will return without printing any error information.
CREATE PROCEDURE [dbo].[uspPrintError] 
AS
BEGIN
    SET NOCOUNT ON;

    -- Print error information. 
    PRINT 'Error ' + CONVERT(varchar(50), ERROR_NUMBER()) +
          ', Severity ' + CONVERT(varchar(5), ERROR_SEVERITY()) +
          ', State ' + CONVERT(varchar(5), ERROR_STATE()) + 
          ', Procedure ' + ISNULL(ERROR_PROCEDURE(), '-') + 
          ', Line ' + CONVERT(varchar(5), ERROR_LINE());
    PRINT ERROR_MESSAGE();
END;
";"<EVENT_INSTANCE><EventType>CREATE_PROCEDURE</EventType><PostTime>2005-10-14T01:58:27.740</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>uspPrintError</ObjectName><ObjectType>PROCEDURE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
-- uspPrintError prints error information about the error that caused &#x0D;
-- execution to jump to the CATCH block of a TRY...CATCH construct. &#x0D;
-- Should be executed from within the scope of a CATCH block otherwise &#x0D;
-- it will return without printing any error information.&#x0D;
CREATE PROCEDURE [dbo].[uspPrintError] &#x0D;
AS&#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    -- Print error information. &#x0D;
    PRINT 'Error ' + CONVERT(varchar(50), ERROR_NUMBER()) +&#x0D;
          ', Severity ' + CONVERT(varchar(5), ERROR_SEVERITY()) +&#x0D;
          ', State ' + CONVERT(varchar(5), ERROR_STATE()) + &#x0D;
          ', Procedure ' + ISNULL(ERROR_PROCEDURE(), '-') + &#x0D;
          ', Line ' + CONVERT(varchar(5), ERROR_LINE());&#x0D;
    PRINT ERROR_MESSAGE();&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
4;14/10/2005 01:58:27;"dbo";"CREATE_PROCEDURE";"dbo";"uspLogError";"
-- uspLogError logs error information in the ErrorLog table about the 
-- error that caused execution to jump to the CATCH block of a 
-- TRY...CATCH construct. This should be executed from within the scope 
-- of a CATCH block otherwise it will return without inserting error 
-- information. 
CREATE PROCEDURE [dbo].[uspLogError] 
    @ErrorLogID [int] = 0 OUTPUT -- contains the ErrorLogID of the row inserted
AS                               -- by uspLogError in the ErrorLog table
BEGIN
    SET NOCOUNT ON;

    -- Output parameter value of 0 indicates that error 
    -- information was not logged
    SET @ErrorLogID = 0;

    BEGIN TRY
        -- Return if there is no error information to log
        IF ERROR_NUMBER() IS NULL
            RETURN;

        -- Return if inside an uncommittable transaction.
        -- Data insertion/modification is not allowed when 
        -- a transaction is in an uncommittable state.
        IF XACT_STATE() = -1
        BEGIN
            PRINT 'Cannot log error since the current transaction is in an uncommittable state. ' 
                + 'Rollback the transaction before executing uspLogError in order to successfully log error information.';
            RETURN;
        END

        INSERT [dbo].[ErrorLog] 
            (
            [UserName], 
            [ErrorNumber], 
            [ErrorSeverity], 
            [ErrorState], 
            [ErrorProcedure], 
            [ErrorLine], 
            [ErrorMessage]
            ) 
        VALUES 
            (
            CONVERT(sysname, CURRENT_USER), 
            ERROR_NUMBER(),
            ERROR_SEVERITY(),
            ERROR_STATE(),
            ERROR_PROCEDURE(),
            ERROR_LINE(),
            ERROR_MESSAGE()
            );

        -- Pass back the ErrorLogID of the row inserted
        SET @ErrorLogID = @@IDENTITY;
    END TRY
    BEGIN CATCH
        PRINT 'An error occurred in stored procedure uspLogError: ';
        EXECUTE [dbo].[uspPrintError];
        RETURN -1;
    END CATCH
END;
";"<EVENT_INSTANCE><EventType>CREATE_PROCEDURE</EventType><PostTime>2005-10-14T01:58:27.850</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>uspLogError</ObjectName><ObjectType>PROCEDURE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
-- uspLogError logs error information in the ErrorLog table about the &#x0D;
-- error that caused execution to jump to the CATCH block of a &#x0D;
-- TRY...CATCH construct. This should be executed from within the scope &#x0D;
-- of a CATCH block otherwise it will return without inserting error &#x0D;
-- information. &#x0D;
CREATE PROCEDURE [dbo].[uspLogError] &#x0D;
    @ErrorLogID [int] = 0 OUTPUT -- contains the ErrorLogID of the row inserted&#x0D;
AS                               -- by uspLogError in the ErrorLog table&#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    -- Output parameter value of 0 indicates that error &#x0D;
    -- information was not logged&#x0D;
    SET @ErrorLogID = 0;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        -- Return if there is no error information to log&#x0D;
        IF ERROR_NUMBER() IS NULL&#x0D;
            RETURN;&#x0D;
&#x0D;
        -- Return if inside an uncommittable transaction.&#x0D;
        -- Data insertion/modification is not allowed when &#x0D;
        -- a transaction is in an uncommittable state.&#x0D;
        IF XACT_STATE() = -1&#x0D;
        BEGIN&#x0D;
            PRINT 'Cannot log error since the current transaction is in an uncommittable state. ' &#x0D;
                + 'Rollback the transaction before executing uspLogError in order to successfully log error information.';&#x0D;
            RETURN;&#x0D;
        END&#x0D;
&#x0D;
        INSERT [dbo].[ErrorLog] &#x0D;
            (&#x0D;
            [UserName], &#x0D;
            [ErrorNumber], &#x0D;
            [ErrorSeverity], &#x0D;
            [ErrorState], &#x0D;
            [ErrorProcedure], &#x0D;
            [ErrorLine], &#x0D;
            [ErrorMessage]&#x0D;
            ) &#x0D;
        VALUES &#x0D;
            (&#x0D;
            CONVERT(sysname, CURRENT_USER), &#x0D;
            ERROR_NUMBER(),&#x0D;
            ERROR_SEVERITY(),&#x0D;
            ERROR_STATE(),&#x0D;
            ERROR_PROCEDURE(),&#x0D;
            ERROR_LINE(),&#x0D;
            ERROR_MESSAGE()&#x0D;
            );&#x0D;
&#x0D;
        -- Pass back the ErrorLogID of the row inserted&#x0D;
        SET @ErrorLogID = @@IDENTITY;&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        PRINT 'An error occurred in stored procedure uspLogError: ';&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
        RETURN -1;&#x0D;
    END CATCH&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
5;14/10/2005 01:58:28;"dbo";"CREATE_TYPE";"dbo";"AccountNumber";"CREATE TYPE [AccountNumber] FROM nvarchar(15) NULL;
";"<EVENT_INSTANCE><EventType>CREATE_TYPE</EventType><PostTime>2005-10-14T01:58:28.070</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>AccountNumber</ObjectName><ObjectType>TYPE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TYPE [AccountNumber] FROM nvarchar(15) NULL;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
6;14/10/2005 01:58:28;"dbo";"CREATE_TYPE";"dbo";"Flag";"CREATE TYPE [Flag] FROM bit NOT NULL;
";"<EVENT_INSTANCE><EventType>CREATE_TYPE</EventType><PostTime>2005-10-14T01:58:28.070</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>Flag</ObjectName><ObjectType>TYPE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TYPE [Flag] FROM bit NOT NULL;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
7;14/10/2005 01:58:28;"dbo";"CREATE_TYPE";"dbo";"NameStyle";"CREATE TYPE [NameStyle] FROM bit NOT NULL;
";"<EVENT_INSTANCE><EventType>CREATE_TYPE</EventType><PostTime>2005-10-14T01:58:28.070</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>NameStyle</ObjectName><ObjectType>TYPE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TYPE [NameStyle] FROM bit NOT NULL;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
8;14/10/2005 01:58:28;"dbo";"CREATE_TYPE";"dbo";"Name";"CREATE TYPE [Name] FROM nvarchar(50) NULL;
";"<EVENT_INSTANCE><EventType>CREATE_TYPE</EventType><PostTime>2005-10-14T01:58:28.070</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>Name</ObjectName><ObjectType>TYPE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TYPE [Name] FROM nvarchar(50) NULL;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
9;14/10/2005 01:58:28;"dbo";"CREATE_TYPE";"dbo";"OrderNumber";"CREATE TYPE [OrderNumber] FROM nvarchar(25) NULL;
";"<EVENT_INSTANCE><EventType>CREATE_TYPE</EventType><PostTime>2005-10-14T01:58:28.070</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>OrderNumber</ObjectName><ObjectType>TYPE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TYPE [OrderNumber] FROM nvarchar(25) NULL;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
10;14/10/2005 01:58:28;"dbo";"CREATE_TYPE";"dbo";"Phone";"CREATE TYPE [Phone] FROM nvarchar(25) NULL;
";"<EVENT_INSTANCE><EventType>CREATE_TYPE</EventType><PostTime>2005-10-14T01:58:28.070</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>Phone</ObjectName><ObjectType>TYPE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TYPE [Phone] FROM nvarchar(25) NULL;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
11;14/10/2005 01:58:28;"dbo";"CREATE_FUNCTION";"dbo";"ufnLeadingZeros";"
CREATE FUNCTION [dbo].[ufnLeadingZeros](
    @Value int
) 
RETURNS varchar(8) 
WITH SCHEMABINDING 
AS 
BEGIN
    DECLARE @ReturnValue varchar(8);

    SET @ReturnValue = CONVERT(varchar(8), @Value);
    SET @ReturnValue = REPLICATE('0', 8 - DATALENGTH(@ReturnValue)) + @ReturnValue;

    RETURN (@ReturnValue);
END;
";"<EVENT_INSTANCE><EventType>CREATE_FUNCTION</EventType><PostTime>2005-10-14T01:58:28.287</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>ufnLeadingZeros</ObjectName><ObjectType>FUNCTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE FUNCTION [dbo].[ufnLeadingZeros](&#x0D;
    @Value int&#x0D;
) &#x0D;
RETURNS varchar(8) &#x0D;
WITH SCHEMABINDING &#x0D;
AS &#x0D;
BEGIN&#x0D;
    DECLARE @ReturnValue varchar(8);&#x0D;
&#x0D;
    SET @ReturnValue = CONVERT(varchar(8), @Value);&#x0D;
    SET @ReturnValue = REPLICATE('0', 8 - DATALENGTH(@ReturnValue)) + @ReturnValue;&#x0D;
&#x0D;
    RETURN (@ReturnValue);&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
12;14/10/2005 01:58:28;"dbo";"CREATE_SCHEMA";"HumanResources";null;"
CREATE SCHEMA [HumanResources] AUTHORIZATION [dbo];
";"<EVENT_INSTANCE><EventType>CREATE_SCHEMA</EventType><PostTime>2005-10-14T01:58:28.507</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><OwnerName>dbo</OwnerName><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE SCHEMA [HumanResources] AUTHORIZATION [dbo];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
13;14/10/2005 01:58:28;"dbo";"CREATE_SCHEMA";"Person";null;"
CREATE SCHEMA [Person] AUTHORIZATION [dbo];
";"<EVENT_INSTANCE><EventType>CREATE_SCHEMA</EventType><PostTime>2005-10-14T01:58:28.617</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><OwnerName>dbo</OwnerName><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE SCHEMA [Person] AUTHORIZATION [dbo];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
14;14/10/2005 01:58:28;"dbo";"CREATE_SCHEMA";"Production";null;"
CREATE SCHEMA [Production] AUTHORIZATION [dbo];
";"<EVENT_INSTANCE><EventType>CREATE_SCHEMA</EventType><PostTime>2005-10-14T01:58:28.727</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><OwnerName>dbo</OwnerName><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE SCHEMA [Production] AUTHORIZATION [dbo];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
15;14/10/2005 01:58:28;"dbo";"CREATE_SCHEMA";"Purchasing";null;"
CREATE SCHEMA [Purchasing] AUTHORIZATION [dbo];
";"<EVENT_INSTANCE><EventType>CREATE_SCHEMA</EventType><PostTime>2005-10-14T01:58:28.837</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><OwnerName>dbo</OwnerName><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE SCHEMA [Purchasing] AUTHORIZATION [dbo];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
16;14/10/2005 01:58:28;"dbo";"CREATE_SCHEMA";"Sales";null;"
CREATE SCHEMA [Sales] AUTHORIZATION [dbo];
";"<EVENT_INSTANCE><EventType>CREATE_SCHEMA</EventType><PostTime>2005-10-14T01:58:28.943</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><OwnerName>dbo</OwnerName><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE SCHEMA [Sales] AUTHORIZATION [dbo];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
17;14/10/2005 01:58:29;"dbo";"CREATE_XML_SCHEMA_COLLECTION";"Person";"AdditionalContactInfoSchemaCollection";"CREATE XML SCHEMA COLLECTION [Person].[AdditionalContactInfoSchemaCollection] AS 
'<?xml version=""1.0"" encoding=""UTF-8""?>
<xsd:schema targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo"" 
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo"" 
    elementFormDefault=""qualified""
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" >
    <!-- the following imports are not needed. They simply provide readability -->

    <xsd:import 
        namespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactRecord"" />

    <xsd:import 
        namespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes"" />

    <xsd:element name=""AdditionalContactInfo"" >
        <xsd:complexType mixed=""true"" >
            <xsd:sequence>
                <xsd:any processContents=""strict"" 
                    namespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactRecord 
                        http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""
                        minOccurs=""0"" maxOccurs=""unbounded"" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>';
";"<EVENT_INSTANCE><EventType>CREATE_XML_SCHEMA_COLLECTION</EventType><PostTime>2005-10-14T01:58:29.287</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>AdditionalContactInfoSchemaCollection</ObjectName><ObjectType>XML SCHEMA COLLECTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE XML SCHEMA COLLECTION [Person].[AdditionalContactInfoSchemaCollection] AS &#x0D;
'&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#x0D;
&lt;xsd:schema targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo"" &#x0D;
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo"" &#x0D;
    elementFormDefault=""qualified""&#x0D;
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" &gt;&#x0D;
    &lt;!-- the following imports are not needed. They simply provide readability --&gt;&#x0D;
&#x0D;
    &lt;xsd:import &#x0D;
        namespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactRecord"" /&gt;&#x0D;
&#x0D;
    &lt;xsd:import &#x0D;
        namespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes"" /&gt;&#x0D;
&#x0D;
    &lt;xsd:element name=""AdditionalContactInfo"" &gt;&#x0D;
        &lt;xsd:complexType mixed=""true"" &gt;&#x0D;
            &lt;xsd:sequence&gt;&#x0D;
                &lt;xsd:any processContents=""strict"" &#x0D;
                    namespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactRecord &#x0D;
                        http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""&#x0D;
                        minOccurs=""0"" maxOccurs=""unbounded"" /&gt;&#x0D;
            &lt;/xsd:sequence&gt;&#x0D;
        &lt;/xsd:complexType&gt;&#x0D;
    &lt;/xsd:element&gt;&#x0D;
&lt;/xsd:schema&gt;';&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
18;14/10/2005 01:58:29;"dbo";"ALTER_XML_SCHEMA_COLLECTION";"Person";"AdditionalContactInfoSchemaCollection";"ALTER XML SCHEMA COLLECTION [Person].[AdditionalContactInfoSchemaCollection] ADD 
'<?xml version=""1.0"" encoding=""UTF-8""?>
<xsd:schema targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactRecord""
    elementFormDefault=""qualified""
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactRecord""
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" >

    <xsd:element name=""ContactRecord"" >
        <xsd:complexType mixed=""true"" >
            <xsd:choice minOccurs=""0"" maxOccurs=""unbounded"" >
                <xsd:any processContents=""strict""  
                    namespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes"" />
            </xsd:choice>
            <xsd:attribute name=""date"" type=""xsd:date"" />
        </xsd:complexType>
    </xsd:element>
</xsd:schema>';
";"<EVENT_INSTANCE><EventType>ALTER_XML_SCHEMA_COLLECTION</EventType><PostTime>2005-10-14T01:58:29.383</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>AdditionalContactInfoSchemaCollection</ObjectName><ObjectType>XML SCHEMA COLLECTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER XML SCHEMA COLLECTION [Person].[AdditionalContactInfoSchemaCollection] ADD &#x0D;
'&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#x0D;
&lt;xsd:schema targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactRecord""&#x0D;
    elementFormDefault=""qualified""&#x0D;
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactRecord""&#x0D;
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" &gt;&#x0D;
&#x0D;
    &lt;xsd:element name=""ContactRecord"" &gt;&#x0D;
        &lt;xsd:complexType mixed=""true"" &gt;&#x0D;
            &lt;xsd:choice minOccurs=""0"" maxOccurs=""unbounded"" &gt;&#x0D;
                &lt;xsd:any processContents=""strict""  &#x0D;
                    namespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes"" /&gt;&#x0D;
            &lt;/xsd:choice&gt;&#x0D;
            &lt;xsd:attribute name=""date"" type=""xsd:date"" /&gt;&#x0D;
        &lt;/xsd:complexType&gt;&#x0D;
    &lt;/xsd:element&gt;&#x0D;
&lt;/xsd:schema&gt;';&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
19;14/10/2005 01:58:29;"dbo";"ALTER_XML_SCHEMA_COLLECTION";"Person";"AdditionalContactInfoSchemaCollection";"ALTER XML SCHEMA COLLECTION [Person].[AdditionalContactInfoSchemaCollection] ADD 
'<?xml version=""1.0"" encoding=""UTF-8""?>
<xsd:schema targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes"" 
    elementFormDefault=""qualified""
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" >

    <xsd:complexType name=""specialInstructionsType"" mixed=""true"">
        <xsd:sequence>
            <xsd:any processContents=""strict"" 
                namespace = ""##targetNamespace""
                minOccurs=""0"" maxOccurs=""unbounded"" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=""phoneNumberType"">
        <xsd:sequence>
            <xsd:element name=""number"" >
                <xsd:simpleType>
                    <xsd:restriction base=""xsd:string"">
                        <xsd:pattern value=""[0-9\(\)\-]*""/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
            <xsd:element name=""SpecialInstructions"" minOccurs=""0"" type=""specialInstructionsType"" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=""eMailType"">
        <xsd:sequence>
            <xsd:element name=""eMailAddress"" type=""xsd:string"" />
            <xsd:element name=""SpecialInstructions"" minOccurs=""0"" type=""specialInstructionsType"" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=""addressType"">
        <xsd:sequence>
            <xsd:element name=""Street"" type=""xsd:string"" minOccurs=""1"" maxOccurs=""2"" />
            <xsd:element name=""City"" type=""xsd:string"" minOccurs=""1"" maxOccurs=""1"" />
            <xsd:element name=""StateProvince"" type=""xsd:string"" minOccurs=""1"" maxOccurs=""1"" />
            <xsd:element name=""PostalCode"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" />
            <xsd:element name=""CountryRegion"" type=""xsd:string"" minOccurs=""1"" maxOccurs=""1"" />
            <xsd:element name=""SpecialInstructions"" type=""specialInstructionsType"" minOccurs=""0""/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:element name=""telephoneNumber""            type=""phoneNumberType"" />
    <xsd:element name=""mobile""                     type=""phoneNumberType"" />
    <xsd:element name=""pager""                      type=""phoneNumberType"" />
    <xsd:element name=""facsimileTelephoneNumber""   type=""phoneNumberType"" />
    <xsd:element name=""telexNumber""                type=""phoneNumberType"" />
    <xsd:element name=""internationaliSDNNumber""    type=""phoneNumberType"" />
    <xsd:element name=""eMail""                      type=""eMailType"" />
    <xsd:element name=""homePostalAddress""          type=""addressType"" />
    <xsd:element name=""physicalDeliveryOfficeName"" type=""addressType"" />
    <xsd:element name=""registeredAddress""          type=""addressType"" /> 
</xsd:schema>';
";"<EVENT_INSTANCE><EventType>ALTER_XML_SCHEMA_COLLECTION</EventType><PostTime>2005-10-14T01:58:29.507</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>AdditionalContactInfoSchemaCollection</ObjectName><ObjectType>XML SCHEMA COLLECTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER XML SCHEMA COLLECTION [Person].[AdditionalContactInfoSchemaCollection] ADD &#x0D;
'&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#x0D;
&lt;xsd:schema targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""&#x0D;
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes"" &#x0D;
    elementFormDefault=""qualified""&#x0D;
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" &gt;&#x0D;
&#x0D;
    &lt;xsd:complexType name=""specialInstructionsType"" mixed=""true""&gt;&#x0D;
        &lt;xsd:sequence&gt;&#x0D;
            &lt;xsd:any processContents=""strict"" &#x0D;
                namespace = ""##targetNamespace""&#x0D;
                minOccurs=""0"" maxOccurs=""unbounded"" /&gt;&#x0D;
        &lt;/xsd:sequence&gt;&#x0D;
    &lt;/xsd:complexType&gt;&#x0D;
&#x0D;
    &lt;xsd:complexType name=""phoneNumberType""&gt;&#x0D;
        &lt;xsd:sequence&gt;&#x0D;
            &lt;xsd:element name=""number"" &gt;&#x0D;
                &lt;xsd:simpleType&gt;&#x0D;
                    &lt;xsd:restriction base=""xsd:string""&gt;&#x0D;
                        &lt;xsd:pattern value=""[0-9\(\)\-]*""/&gt;&#x0D;
                    &lt;/xsd:restriction&gt;&#x0D;
                &lt;/xsd:simpleType&gt;&#x0D;
            &lt;/xsd:element&gt;&#x0D;
            &lt;xsd:element name=""SpecialInstructions"" minOccurs=""0"" type=""specialInstructionsType"" /&gt;&#x0D;
        &lt;/xsd:sequence&gt;&#x0D;
    &lt;/xsd:complexType&gt;&#x0D;
&#x0D;
    &lt;xsd:complexType name=""eMailType""&gt;&#x0D;
        &lt;xsd:sequence&gt;&#x0D;
            &lt;xsd:element name=""eMailAddress"" type=""xsd:string"" /&gt;&#x0D;
            &lt;xsd:element name=""SpecialInstructions"" minOccurs=""0"" type=""specialInstructionsType"" /&gt;&#x0D;
        &lt;/xsd:sequence&gt;&#x0D;
    &lt;/xsd:complexType&gt;&#x0D;
&#x0D;
    &lt;xsd:complexType name=""addressType""&gt;&#x0D;
        &lt;xsd:sequence&gt;&#x0D;
            &lt;xsd:element name=""Street"" type=""xsd:string"" minOccurs=""1"" maxOccurs=""2"" /&gt;&#x0D;
            &lt;xsd:element name=""City"" type=""xsd:string"" minOccurs=""1"" maxOccurs=""1"" /&gt;&#x0D;
            &lt;xsd:element name=""StateProvince"" type=""xsd:string"" minOccurs=""1"" maxOccurs=""1"" /&gt;&#x0D;
            &lt;xsd:element name=""PostalCode"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
            &lt;xsd:element name=""CountryRegion"" type=""xsd:string"" minOccurs=""1"" maxOccurs=""1"" /&gt;&#x0D;
            &lt;xsd:element name=""SpecialInstructions"" type=""specialInstructionsType"" minOccurs=""0""/&gt;&#x0D;
        &lt;/xsd:sequence&gt;&#x0D;
    &lt;/xsd:complexType&gt;&#x0D;
&#x0D;
    &lt;xsd:element name=""telephoneNumber""            type=""phoneNumberType"" /&gt;&#x0D;
    &lt;xsd:element name=""mobile""                     type=""phoneNumberType"" /&gt;&#x0D;
    &lt;xsd:element name=""pager""                      type=""phoneNumberType"" /&gt;&#x0D;
    &lt;xsd:element name=""facsimileTelephoneNumber""   type=""phoneNumberType"" /&gt;&#x0D;
    &lt;xsd:element name=""telexNumber""                type=""phoneNumberType"" /&gt;&#x0D;
    &lt;xsd:element name=""internationaliSDNNumber""    type=""phoneNumberType"" /&gt;&#x0D;
    &lt;xsd:element name=""eMail""                      type=""eMailType"" /&gt;&#x0D;
    &lt;xsd:element name=""homePostalAddress""          type=""addressType"" /&gt;&#x0D;
    &lt;xsd:element name=""physicalDeliveryOfficeName"" type=""addressType"" /&gt;&#x0D;
    &lt;xsd:element name=""registeredAddress""          type=""addressType"" /&gt; &#x0D;
&lt;/xsd:schema&gt;';&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
20;14/10/2005 01:58:29;"dbo";"CREATE_XML_SCHEMA_COLLECTION";"Sales";"IndividualSurveySchemaCollection";"CREATE XML SCHEMA COLLECTION [Sales].[IndividualSurveySchemaCollection] AS 
'<?xml version=""1.0"" encoding=""UTF-8""?>
<xsd:schema targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey"" 
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""
    elementFormDefault=""qualified""
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" >

    <xsd:simpleType name=""SalaryType"">
        <xsd:restriction base=""xsd:string"">
            <xsd:enumeration value=""0-25000"" />
            <xsd:enumeration value=""25001-50000"" />
            <xsd:enumeration value=""50001-75000"" />
            <xsd:enumeration value=""75001-100000"" />
            <xsd:enumeration value=""greater than 100000"" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name=""MileRangeType"">
        <xsd:restriction base=""xsd:string"">
            <xsd:enumeration value=""0-1 Miles"" />
            <xsd:enumeration value=""1-2 Miles"" />
            <xsd:enumeration value=""2-5 Miles"" />
            <xsd:enumeration value=""5-10 Miles"" />
            <xsd:enumeration value=""10+ Miles"" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:element name=""IndividualSurvey"">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name=""TotalPurchaseYTD"" type=""xsd:decimal"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""DateFirstPurchase"" type=""xsd:date"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""BirthDate"" type=""xsd:date"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""MaritalStatus"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""YearlyIncome"" type=""SalaryType"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""Gender"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""TotalChildren"" type=""xsd:int"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""NumberChildrenAtHome"" type=""xsd:int"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""Education"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""Occupation"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""HomeOwnerFlag"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""NumberCarsOwned"" type=""xsd:int"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""Hobby"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""unbounded"" />
                <xsd:element name=""CommuteDistance"" type=""MileRangeType"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""Comments"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>';
";"<EVENT_INSTANCE><EventType>CREATE_XML_SCHEMA_COLLECTION</EventType><PostTime>2005-10-14T01:58:29.710</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>IndividualSurveySchemaCollection</ObjectName><ObjectType>XML SCHEMA COLLECTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE XML SCHEMA COLLECTION [Sales].[IndividualSurveySchemaCollection] AS &#x0D;
'&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#x0D;
&lt;xsd:schema targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey"" &#x0D;
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""&#x0D;
    elementFormDefault=""qualified""&#x0D;
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" &gt;&#x0D;
&#x0D;
    &lt;xsd:simpleType name=""SalaryType""&gt;&#x0D;
        &lt;xsd:restriction base=""xsd:string""&gt;&#x0D;
            &lt;xsd:enumeration value=""0-25000"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""25001-50000"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""50001-75000"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""75001-100000"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""greater than 100000"" /&gt;&#x0D;
        &lt;/xsd:restriction&gt;&#x0D;
    &lt;/xsd:simpleType&gt;&#x0D;
&#x0D;
    &lt;xsd:simpleType name=""MileRangeType""&gt;&#x0D;
        &lt;xsd:restriction base=""xsd:string""&gt;&#x0D;
            &lt;xsd:enumeration value=""0-1 Miles"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""1-2 Miles"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""2-5 Miles"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""5-10 Miles"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""10+ Miles"" /&gt;&#x0D;
        &lt;/xsd:restriction&gt;&#x0D;
    &lt;/xsd:simpleType&gt;&#x0D;
&#x0D;
    &lt;xsd:element name=""IndividualSurvey""&gt;&#x0D;
        &lt;xsd:complexType&gt;&#x0D;
            &lt;xsd:sequence&gt;&#x0D;
                &lt;xsd:element name=""TotalPurchaseYTD"" type=""xsd:decimal"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""DateFirstPurchase"" type=""xsd:date"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""BirthDate"" type=""xsd:date"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""MaritalStatus"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""YearlyIncome"" type=""SalaryType"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""Gender"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""TotalChildren"" type=""xsd:int"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""NumberChildrenAtHome"" type=""xsd:int"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""Education"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""Occupation"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""HomeOwnerFlag"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""NumberCarsOwned"" type=""xsd:int"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""Hobby"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""unbounded"" /&gt;&#x0D;
                &lt;xsd:element name=""CommuteDistance"" type=""MileRangeType"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""Comments"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
            &lt;/xsd:sequence&gt;&#x0D;
        &lt;/xsd:complexType&gt;&#x0D;
    &lt;/xsd:element&gt;&#x0D;
&lt;/xsd:schema&gt;';&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
21;14/10/2005 01:58:29;"dbo";"CREATE_XML_SCHEMA_COLLECTION";"HumanResources";"HRResumeSchemaCollection";"CREATE XML SCHEMA COLLECTION [HumanResources].[HRResumeSchemaCollection] AS 
'<?xml version=""1.0"" encoding=""UTF-8""?>
<xsd:schema targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume"" 
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume"" 
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" 
    elementFormDefault=""qualified"" >

    <xsd:element name=""Resume"" type=""ResumeType""/>
    <xsd:element name=""Address"" type=""AddressType""/>
    <xsd:element name=""Education"" type=""EducationType""/>
    <xsd:element name=""Employment"" type=""EmploymentType""/>
    <xsd:element name=""Location"" type=""LocationType""/>
    <xsd:element name=""Name"" type=""NameType""/>
    <xsd:element name=""Telephone"" type=""TelephoneType""/>

    <xsd:complexType name=""ResumeType"">
        <xsd:sequence>
            <xsd:element ref=""Name""/>
            <xsd:element name=""Skills"" type=""xsd:string"" minOccurs=""0""/>
            <xsd:element ref=""Employment"" maxOccurs=""unbounded""/>
            <xsd:element ref=""Education"" maxOccurs=""unbounded""/>
            <xsd:element ref=""Address"" maxOccurs=""unbounded""/>
            <xsd:element ref=""Telephone"" minOccurs=""0""/>
            <xsd:element name=""EMail"" type=""xsd:string"" minOccurs=""0""/>
            <xsd:element name=""WebSite"" type=""xsd:string"" minOccurs=""0""/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=""AddressType"">
        <xsd:sequence>
            <xsd:element name=""Addr.Type"" type=""xsd:string"">
                <xsd:annotation>
                    <xsd:documentation>Home|Work|Permanent</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name=""Addr.OrgName"" type=""xsd:string"" minOccurs=""0""/>
            <xsd:element name=""Addr.Street"" type=""xsd:string"" maxOccurs=""unbounded""/>
            <xsd:element name=""Addr.Location"">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element ref=""Location""/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name=""Addr.PostalCode"" type=""xsd:string""/>
            <xsd:element name=""Addr.Telephone"" minOccurs=""0"">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element ref=""Telephone"" maxOccurs=""unbounded""/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=""EducationType"">
        <xsd:sequence>
            <xsd:element name=""Edu.Level"" type=""xsd:string"">
                <xsd:annotation>
                    <xsd:documentation>High School|Associate|Bachelor|Master|Doctorate</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name=""Edu.StartDate"" type=""xsd:date""/>
            <xsd:element name=""Edu.EndDate"" type=""xsd:date""/>
            <xsd:element name=""Edu.Degree"" type=""xsd:string"" minOccurs=""0""/>
            <xsd:element name=""Edu.Major"" type=""xsd:string"" minOccurs=""0""/>
            <xsd:element name=""Edu.Minor"" type=""xsd:string"" minOccurs=""0""/>
            <xsd:element name=""Edu.GPA"" type=""xsd:string"" minOccurs=""0""/>
            <xsd:element name=""Edu.GPAAlternate"" type=""xsd:decimal"" minOccurs=""0"">
                <xsd:annotation>
                    <xsd:documentation>In case the institution does not follow a GPA system</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name=""Edu.GPAScale"" type=""xsd:decimal"" minOccurs=""0""/>
            <xsd:element name=""Edu.School"" type=""xsd:string"" minOccurs=""0""/>
            <xsd:element name=""Edu.Location"" minOccurs=""0"">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element ref=""Location""/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=""EmploymentType"">
        <xsd:sequence>
            <xsd:element name=""Emp.StartDate"" type=""xsd:date"" minOccurs=""0""/>
            <xsd:element name=""Emp.EndDate"" type=""xsd:date"" minOccurs=""0""/>
            <xsd:element name=""Emp.OrgName"" type=""xsd:string""/>
            <xsd:element name=""Emp.JobTitle"" type=""xsd:string""/>
            <xsd:element name=""Emp.Responsibility"" type=""xsd:string""/>
            <xsd:element name=""Emp.FunctionCategory"" type=""xsd:string"" minOccurs=""0""/>
            <xsd:element name=""Emp.IndustryCategory"" type=""xsd:string"" minOccurs=""0""/>
            <xsd:element name=""Emp.Location"" minOccurs=""0"">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element ref=""Location""/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=""LocationType"">
        <xsd:sequence>
            <xsd:element name=""Loc.CountryRegion"" type=""xsd:string"">
                <xsd:annotation>
                    <xsd:documentation>ISO 3166 Country Code</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name=""Loc.State"" type=""xsd:string"" minOccurs=""0""/>
            <xsd:element name=""Loc.City"" type=""xsd:string"" minOccurs=""0""/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=""NameType"">
        <xsd:sequence>
            <xsd:element name=""Name.Prefix"" type=""xsd:string"" minOccurs=""0""/>
            <xsd:element name=""Name.First"" type=""xsd:string""/>
            <xsd:element name=""Name.Middle"" type=""xsd:string"" minOccurs=""0""/>
            <xsd:element name=""Name.Last"" type=""xsd:string""/>
            <xsd:element name=""Name.Suffix"" type=""xsd:string"" minOccurs=""0""/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name=""TelephoneType"">
        <xsd:sequence>
            <xsd:element name=""Tel.Type"" minOccurs=""0"">
                <xsd:annotation>
                    <xsd:documentation>Voice|Fax|Pager</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name=""Tel.IntlCode"" type=""xsd:int"" minOccurs=""0""/>
            <xsd:element name=""Tel.AreaCode"" type=""xsd:int"" minOccurs=""0""/>
            <xsd:element name=""Tel.Number"" type=""xsd:string""/>
            <xsd:element name=""Tel.Extension"" type=""xsd:int"" minOccurs=""0""/>
        </xsd:sequence>
    </xsd:complexType>
</xsd:schema>';
";"<EVENT_INSTANCE><EventType>CREATE_XML_SCHEMA_COLLECTION</EventType><PostTime>2005-10-14T01:58:29.960</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>HRResumeSchemaCollection</ObjectName><ObjectType>XML SCHEMA COLLECTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE XML SCHEMA COLLECTION [HumanResources].[HRResumeSchemaCollection] AS &#x0D;
'&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#x0D;
&lt;xsd:schema targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume"" &#x0D;
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume"" &#x0D;
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" &#x0D;
    elementFormDefault=""qualified"" &gt;&#x0D;
&#x0D;
    &lt;xsd:element name=""Resume"" type=""ResumeType""/&gt;&#x0D;
    &lt;xsd:element name=""Address"" type=""AddressType""/&gt;&#x0D;
    &lt;xsd:element name=""Education"" type=""EducationType""/&gt;&#x0D;
    &lt;xsd:element name=""Employment"" type=""EmploymentType""/&gt;&#x0D;
    &lt;xsd:element name=""Location"" type=""LocationType""/&gt;&#x0D;
    &lt;xsd:element name=""Name"" type=""NameType""/&gt;&#x0D;
    &lt;xsd:element name=""Telephone"" type=""TelephoneType""/&gt;&#x0D;
&#x0D;
    &lt;xsd:complexType name=""ResumeType""&gt;&#x0D;
        &lt;xsd:sequence&gt;&#x0D;
            &lt;xsd:element ref=""Name""/&gt;&#x0D;
            &lt;xsd:element name=""Skills"" type=""xsd:string"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element ref=""Employment"" maxOccurs=""unbounded""/&gt;&#x0D;
            &lt;xsd:element ref=""Education"" maxOccurs=""unbounded""/&gt;&#x0D;
            &lt;xsd:element ref=""Address"" maxOccurs=""unbounded""/&gt;&#x0D;
            &lt;xsd:element ref=""Telephone"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""EMail"" type=""xsd:string"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""WebSite"" type=""xsd:string"" minOccurs=""0""/&gt;&#x0D;
        &lt;/xsd:sequence&gt;&#x0D;
    &lt;/xsd:complexType&gt;&#x0D;
&#x0D;
    &lt;xsd:complexType name=""AddressType""&gt;&#x0D;
        &lt;xsd:sequence&gt;&#x0D;
            &lt;xsd:element name=""Addr.Type"" type=""xsd:string""&gt;&#x0D;
                &lt;xsd:annotation&gt;&#x0D;
                    &lt;xsd:documentation&gt;Home|Work|Permanent&lt;/xsd:documentation&gt;&#x0D;
                &lt;/xsd:annotation&gt;&#x0D;
            &lt;/xsd:element&gt;&#x0D;
            &lt;xsd:element name=""Addr.OrgName"" type=""xsd:string"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""Addr.Street"" type=""xsd:string"" maxOccurs=""unbounded""/&gt;&#x0D;
            &lt;xsd:element name=""Addr.Location""&gt;&#x0D;
                &lt;xsd:complexType&gt;&#x0D;
                    &lt;xsd:sequence&gt;&#x0D;
                        &lt;xsd:element ref=""Location""/&gt;&#x0D;
                    &lt;/xsd:sequence&gt;&#x0D;
                &lt;/xsd:complexType&gt;&#x0D;
            &lt;/xsd:element&gt;&#x0D;
            &lt;xsd:element name=""Addr.PostalCode"" type=""xsd:string""/&gt;&#x0D;
            &lt;xsd:element name=""Addr.Telephone"" minOccurs=""0""&gt;&#x0D;
                &lt;xsd:complexType&gt;&#x0D;
                    &lt;xsd:sequence&gt;&#x0D;
                        &lt;xsd:element ref=""Telephone"" maxOccurs=""unbounded""/&gt;&#x0D;
                    &lt;/xsd:sequence&gt;&#x0D;
                &lt;/xsd:complexType&gt;&#x0D;
            &lt;/xsd:element&gt;&#x0D;
        &lt;/xsd:sequence&gt;&#x0D;
    &lt;/xsd:complexType&gt;&#x0D;
&#x0D;
    &lt;xsd:complexType name=""EducationType""&gt;&#x0D;
        &lt;xsd:sequence&gt;&#x0D;
            &lt;xsd:element name=""Edu.Level"" type=""xsd:string""&gt;&#x0D;
                &lt;xsd:annotation&gt;&#x0D;
                    &lt;xsd:documentation&gt;High School|Associate|Bachelor|Master|Doctorate&lt;/xsd:documentation&gt;&#x0D;
                &lt;/xsd:annotation&gt;&#x0D;
            &lt;/xsd:element&gt;&#x0D;
            &lt;xsd:element name=""Edu.StartDate"" type=""xsd:date""/&gt;&#x0D;
            &lt;xsd:element name=""Edu.EndDate"" type=""xsd:date""/&gt;&#x0D;
            &lt;xsd:element name=""Edu.Degree"" type=""xsd:string"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""Edu.Major"" type=""xsd:string"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""Edu.Minor"" type=""xsd:string"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""Edu.GPA"" type=""xsd:string"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""Edu.GPAAlternate"" type=""xsd:decimal"" minOccurs=""0""&gt;&#x0D;
                &lt;xsd:annotation&gt;&#x0D;
                    &lt;xsd:documentation&gt;In case the institution does not follow a GPA system&lt;/xsd:documentation&gt;&#x0D;
                &lt;/xsd:annotation&gt;&#x0D;
            &lt;/xsd:element&gt;&#x0D;
            &lt;xsd:element name=""Edu.GPAScale"" type=""xsd:decimal"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""Edu.School"" type=""xsd:string"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""Edu.Location"" minOccurs=""0""&gt;&#x0D;
                &lt;xsd:complexType&gt;&#x0D;
                    &lt;xsd:sequence&gt;&#x0D;
                        &lt;xsd:element ref=""Location""/&gt;&#x0D;
                    &lt;/xsd:sequence&gt;&#x0D;
                &lt;/xsd:complexType&gt;&#x0D;
            &lt;/xsd:element&gt;&#x0D;
        &lt;/xsd:sequence&gt;&#x0D;
    &lt;/xsd:complexType&gt;&#x0D;
&#x0D;
    &lt;xsd:complexType name=""EmploymentType""&gt;&#x0D;
        &lt;xsd:sequence&gt;&#x0D;
            &lt;xsd:element name=""Emp.StartDate"" type=""xsd:date"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""Emp.EndDate"" type=""xsd:date"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""Emp.OrgName"" type=""xsd:string""/&gt;&#x0D;
            &lt;xsd:element name=""Emp.JobTitle"" type=""xsd:string""/&gt;&#x0D;
            &lt;xsd:element name=""Emp.Responsibility"" type=""xsd:string""/&gt;&#x0D;
            &lt;xsd:element name=""Emp.FunctionCategory"" type=""xsd:string"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""Emp.IndustryCategory"" type=""xsd:string"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""Emp.Location"" minOccurs=""0""&gt;&#x0D;
                &lt;xsd:complexType&gt;&#x0D;
                    &lt;xsd:sequence&gt;&#x0D;
                        &lt;xsd:element ref=""Location""/&gt;&#x0D;
                    &lt;/xsd:sequence&gt;&#x0D;
                &lt;/xsd:complexType&gt;&#x0D;
            &lt;/xsd:element&gt;&#x0D;
        &lt;/xsd:sequence&gt;&#x0D;
    &lt;/xsd:complexType&gt;&#x0D;
&#x0D;
    &lt;xsd:complexType name=""LocationType""&gt;&#x0D;
        &lt;xsd:sequence&gt;&#x0D;
            &lt;xsd:element name=""Loc.CountryRegion"" type=""xsd:string""&gt;&#x0D;
                &lt;xsd:annotation&gt;&#x0D;
                    &lt;xsd:documentation&gt;ISO 3166 Country Code&lt;/xsd:documentation&gt;&#x0D;
                &lt;/xsd:annotation&gt;&#x0D;
            &lt;/xsd:element&gt;&#x0D;
            &lt;xsd:element name=""Loc.State"" type=""xsd:string"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""Loc.City"" type=""xsd:string"" minOccurs=""0""/&gt;&#x0D;
        &lt;/xsd:sequence&gt;&#x0D;
    &lt;/xsd:complexType&gt;&#x0D;
&#x0D;
    &lt;xsd:complexType name=""NameType""&gt;&#x0D;
        &lt;xsd:sequence&gt;&#x0D;
            &lt;xsd:element name=""Name.Prefix"" type=""xsd:string"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""Name.First"" type=""xsd:string""/&gt;&#x0D;
            &lt;xsd:element name=""Name.Middle"" type=""xsd:string"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""Name.Last"" type=""xsd:string""/&gt;&#x0D;
            &lt;xsd:element name=""Name.Suffix"" type=""xsd:string"" minOccurs=""0""/&gt;&#x0D;
        &lt;/xsd:sequence&gt;&#x0D;
    &lt;/xsd:complexType&gt;&#x0D;
&#x0D;
    &lt;xsd:complexType name=""TelephoneType""&gt;&#x0D;
        &lt;xsd:sequence&gt;&#x0D;
            &lt;xsd:element name=""Tel.Type"" minOccurs=""0""&gt;&#x0D;
                &lt;xsd:annotation&gt;&#x0D;
                    &lt;xsd:documentation&gt;Voice|Fax|Pager&lt;/xsd:documentation&gt;&#x0D;
                &lt;/xsd:annotation&gt;&#x0D;
            &lt;/xsd:element&gt;&#x0D;
            &lt;xsd:element name=""Tel.IntlCode"" type=""xsd:int"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""Tel.AreaCode"" type=""xsd:int"" minOccurs=""0""/&gt;&#x0D;
            &lt;xsd:element name=""Tel.Number"" type=""xsd:string""/&gt;&#x0D;
            &lt;xsd:element name=""Tel.Extension"" type=""xsd:int"" minOccurs=""0""/&gt;&#x0D;
        &lt;/xsd:sequence&gt;&#x0D;
    &lt;/xsd:complexType&gt;&#x0D;
&lt;/xsd:schema&gt;';&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
22;14/10/2005 01:58:30;"dbo";"CREATE_XML_SCHEMA_COLLECTION";"Production";"ProductDescriptionSchemaCollection";"CREATE XML SCHEMA COLLECTION [Production].[ProductDescriptionSchemaCollection] AS 
'<xsd:schema targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain""
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain"" 
    elementFormDefault=""qualified"" 
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" >
  
    <xsd:element name=""Warranty""  >
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name=""WarrantyPeriod"" type=""xsd:string""  />
                <xsd:element name=""Description"" type=""xsd:string""  />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name=""Maintenance""  >
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name=""NoOfYears"" type=""xsd:string""  />
                <xsd:element name=""Description"" type=""xsd:string""  />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>';

";"<EVENT_INSTANCE><EventType>CREATE_XML_SCHEMA_COLLECTION</EventType><PostTime>2005-10-14T01:58:30.147</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductDescriptionSchemaCollection</ObjectName><ObjectType>XML SCHEMA COLLECTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE XML SCHEMA COLLECTION [Production].[ProductDescriptionSchemaCollection] AS &#x0D;
'&lt;xsd:schema targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain""&#x0D;
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain"" &#x0D;
    elementFormDefault=""qualified"" &#x0D;
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" &gt;&#x0D;
  &#x0D;
    &lt;xsd:element name=""Warranty""  &gt;&#x0D;
        &lt;xsd:complexType&gt;&#x0D;
            &lt;xsd:sequence&gt;&#x0D;
                &lt;xsd:element name=""WarrantyPeriod"" type=""xsd:string""  /&gt;&#x0D;
                &lt;xsd:element name=""Description"" type=""xsd:string""  /&gt;&#x0D;
            &lt;/xsd:sequence&gt;&#x0D;
        &lt;/xsd:complexType&gt;&#x0D;
    &lt;/xsd:element&gt;&#x0D;
&#x0D;
    &lt;xsd:element name=""Maintenance""  &gt;&#x0D;
        &lt;xsd:complexType&gt;&#x0D;
            &lt;xsd:sequence&gt;&#x0D;
                &lt;xsd:element name=""NoOfYears"" type=""xsd:string""  /&gt;&#x0D;
                &lt;xsd:element name=""Description"" type=""xsd:string""  /&gt;&#x0D;
            &lt;/xsd:sequence&gt;&#x0D;
        &lt;/xsd:complexType&gt;&#x0D;
    &lt;/xsd:element&gt;&#x0D;
&lt;/xsd:schema&gt;';&#x0D;
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
23;14/10/2005 01:58:30;"dbo";"ALTER_XML_SCHEMA_COLLECTION";"Production";"ProductDescriptionSchemaCollection";"ALTER XML SCHEMA COLLECTION [Production].[ProductDescriptionSchemaCollection] ADD 
'<?xml version=""1.0"" encoding=""UTF-8""?>
<xs:schema targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription"" 
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription"" 
    elementFormDefault=""qualified"" 
    xmlns:mstns=""http://tempuri.org/XMLSchema.xsd"" 
    xmlns:xs=""http://www.w3.org/2001/XMLSchema""
    xmlns:wm=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain"" >

    <xs:import 
        namespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain"" />

    <xs:element name=""ProductDescription"" type=""ProductDescription"" />
        <xs:complexType name=""ProductDescription"">
            <xs:annotation>
                <xs:documentation>Product description has a summary blurb, if its manufactured elsewhere it 
                includes a link to the manufacturers site for this component.
                Then it has optional zero or more sequences of features, pictures, categories
                and technical specifications.
                </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                <xs:element name=""Summary"" type=""Summary"" minOccurs=""0"" />
                <xs:element name=""Manufacturer"" type=""Manufacturer"" minOccurs=""0"" />
                <xs:element name=""Features"" type=""Features"" minOccurs=""0"" maxOccurs=""unbounded"" />
                <xs:element name=""Picture"" type=""Picture"" minOccurs=""0"" maxOccurs=""unbounded"" />
                <xs:element name=""Category"" type=""Category"" minOccurs=""0"" maxOccurs=""unbounded"" />
                <xs:element name=""Specifications"" type=""Specifications"" minOccurs=""0"" maxOccurs=""unbounded"" />
            </xs:sequence>
            <xs:attribute name=""ProductModelID"" type=""xs:string"" />
            <xs:attribute name=""ProductModelName"" type=""xs:string"" />
        </xs:complexType>
  
        <xs:complexType name=""Summary"" mixed=""true"" >
            <xs:sequence>
                <xs:any processContents=""skip"" namespace=""http://www.w3.org/1999/xhtml"" minOccurs=""0"" maxOccurs=""unbounded"" />
            </xs:sequence>
        </xs:complexType>
        
        <xs:complexType name=""Manufacturer"">
            <xs:sequence>
                <xs:element name=""Name"" type=""xs:string"" minOccurs=""0"" />
                <xs:element name=""CopyrightURL"" type=""xs:string"" minOccurs=""0"" />
                <xs:element name=""Copyright"" type=""xs:string"" minOccurs=""0"" />
                <xs:element name=""ProductURL"" type=""xs:string"" minOccurs=""0"" />
            </xs:sequence>
        </xs:complexType>
  
        <xs:complexType name=""Picture"">
            <xs:annotation>
                <xs:documentation>Pictures of the component, some standard sizes are ""Large"" for zoom in, ""Small"" for a normal web page and ""Thumbnail"" for product listing pages.</xs:documentation>
            </xs:annotation>
            <xs:sequence>
                <xs:element name=""Name"" type=""xs:string"" minOccurs=""0"" />
                <xs:element name=""Angle"" type=""xs:string"" minOccurs=""0"" />
                <xs:element name=""Size"" type=""xs:string"" minOccurs=""0"" />
                <xs:element name=""ProductPhotoID"" type=""xs:integer"" minOccurs=""0"" />
            </xs:sequence>
        </xs:complexType>

        <xs:annotation>
            <xs:documentation>Features of the component that are more ""sales"" oriented.</xs:documentation>
        </xs:annotation>

        <xs:complexType name=""Features"" mixed=""true""  >
            <xs:sequence>
                <xs:element ref=""wm:Warranty""  />
                <xs:element ref=""wm:Maintenance""  />
                <xs:any processContents=""skip""  namespace=""##other"" minOccurs=""0"" maxOccurs=""unbounded"" />
            </xs:sequence>
        </xs:complexType>

        <xs:complexType name=""Specifications"" mixed=""true"">
            <xs:annotation>
                <xs:documentation>A single technical aspect of the component.</xs:documentation>
            </xs:annotation>
            <xs:sequence>
                <xs:any processContents=""skip"" minOccurs=""0"" maxOccurs=""unbounded"" />
            </xs:sequence>
        </xs:complexType>

        <xs:complexType name=""Category"">
            <xs:annotation>
                <xs:documentation>A single categorization element that designates a classification taxonomy and a code within that classification type.  Optional description for default display if needed.</xs:documentation>
            </xs:annotation>
            <xs:sequence>
                <xs:element ref=""Taxonomy"" />
                <xs:element ref=""Code"" />
                <xs:element ref=""Description"" minOccurs=""0"" />
            </xs:sequence>
        </xs:complexType>

    <xs:element name=""Taxonomy"" type=""xs:string"" />
    <xs:element name=""Code"" type=""xs:string"" />
    <xs:element name=""Description"" type=""xs:string"" />
</xs:schema>';
";"<EVENT_INSTANCE><EventType>ALTER_XML_SCHEMA_COLLECTION</EventType><PostTime>2005-10-14T01:58:30.163</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductDescriptionSchemaCollection</ObjectName><ObjectType>XML SCHEMA COLLECTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER XML SCHEMA COLLECTION [Production].[ProductDescriptionSchemaCollection] ADD &#x0D;
'&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#x0D;
&lt;xs:schema targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription"" &#x0D;
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription"" &#x0D;
    elementFormDefault=""qualified"" &#x0D;
    xmlns:mstns=""http://tempuri.org/XMLSchema.xsd"" &#x0D;
    xmlns:xs=""http://www.w3.org/2001/XMLSchema""&#x0D;
    xmlns:wm=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain"" &gt;&#x0D;
&#x0D;
    &lt;xs:import &#x0D;
        namespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain"" /&gt;&#x0D;
&#x0D;
    &lt;xs:element name=""ProductDescription"" type=""ProductDescription"" /&gt;&#x0D;
        &lt;xs:complexType name=""ProductDescription""&gt;&#x0D;
            &lt;xs:annotation&gt;&#x0D;
                &lt;xs:documentation&gt;Product description has a summary blurb, if its manufactured elsewhere it &#x0D;
                includes a link to the manufacturers site for this component.&#x0D;
                Then it has optional zero or more sequences of features, pictures, categories&#x0D;
                and technical specifications.&#x0D;
                &lt;/xs:documentation&gt;&#x0D;
            &lt;/xs:annotation&gt;&#x0D;
            &lt;xs:sequence&gt;&#x0D;
                &lt;xs:element name=""Summary"" type=""Summary"" minOccurs=""0"" /&gt;&#x0D;
                &lt;xs:element name=""Manufacturer"" type=""Manufacturer"" minOccurs=""0"" /&gt;&#x0D;
                &lt;xs:element name=""Features"" type=""Features"" minOccurs=""0"" maxOccurs=""unbounded"" /&gt;&#x0D;
                &lt;xs:element name=""Picture"" type=""Picture"" minOccurs=""0"" maxOccurs=""unbounded"" /&gt;&#x0D;
                &lt;xs:element name=""Category"" type=""Category"" minOccurs=""0"" maxOccurs=""unbounded"" /&gt;&#x0D;
                &lt;xs:element name=""Specifications"" type=""Specifications"" minOccurs=""0"" maxOccurs=""unbounded"" /&gt;&#x0D;
            &lt;/xs:sequence&gt;&#x0D;
            &lt;xs:attribute name=""ProductModelID"" type=""xs:string"" /&gt;&#x0D;
            &lt;xs:attribute name=""ProductModelName"" type=""xs:string"" /&gt;&#x0D;
        &lt;/xs:complexType&gt;&#x0D;
  &#x0D;
        &lt;xs:complexType name=""Summary"" mixed=""true"" &gt;&#x0D;
            &lt;xs:sequence&gt;&#x0D;
                &lt;xs:any processContents=""skip"" namespace=""http://www.w3.org/1999/xhtml"" minOccurs=""0"" maxOccurs=""unbounded"" /&gt;&#x0D;
            &lt;/xs:sequence&gt;&#x0D;
        &lt;/xs:complexType&gt;&#x0D;
        &#x0D;
        &lt;xs:complexType name=""Manufacturer""&gt;&#x0D;
            &lt;xs:sequence&gt;&#x0D;
                &lt;xs:element name=""Name"" type=""xs:string"" minOccurs=""0"" /&gt;&#x0D;
                &lt;xs:element name=""CopyrightURL"" type=""xs:string"" minOccurs=""0"" /&gt;&#x0D;
                &lt;xs:element name=""Copyright"" type=""xs:string"" minOccurs=""0"" /&gt;&#x0D;
                &lt;xs:element name=""ProductURL"" type=""xs:string"" minOccurs=""0"" /&gt;&#x0D;
            &lt;/xs:sequence&gt;&#x0D;
        &lt;/xs:complexType&gt;&#x0D;
  &#x0D;
        &lt;xs:complexType name=""Picture""&gt;&#x0D;
            &lt;xs:annotation&gt;&#x0D;
                &lt;xs:documentation&gt;Pictures of the component, some standard sizes are ""Large"" for zoom in, ""Small"" for a normal web page and ""Thumbnail"" for product listing pages.&lt;/xs:documentation&gt;&#x0D;
            &lt;/xs:annotation&gt;&#x0D;
            &lt;xs:sequence&gt;&#x0D;
                &lt;xs:element name=""Name"" type=""xs:string"" minOccurs=""0"" /&gt;&#x0D;
                &lt;xs:element name=""Angle"" type=""xs:string"" minOccurs=""0"" /&gt;&#x0D;
                &lt;xs:element name=""Size"" type=""xs:string"" minOccurs=""0"" /&gt;&#x0D;
                &lt;xs:element name=""ProductPhotoID"" type=""xs:integer"" minOccurs=""0"" /&gt;&#x0D;
            &lt;/xs:sequence&gt;&#x0D;
        &lt;/xs:complexType&gt;&#x0D;
&#x0D;
        &lt;xs:annotation&gt;&#x0D;
            &lt;xs:documentation&gt;Features of the component that are more ""sales"" oriented.&lt;/xs:documentation&gt;&#x0D;
        &lt;/xs:annotation&gt;&#x0D;
&#x0D;
        &lt;xs:complexType name=""Features"" mixed=""true""  &gt;&#x0D;
            &lt;xs:sequence&gt;&#x0D;
                &lt;xs:element ref=""wm:Warranty""  /&gt;&#x0D;
                &lt;xs:element ref=""wm:Maintenance""  /&gt;&#x0D;
                &lt;xs:any processContents=""skip""  namespace=""##other"" minOccurs=""0"" maxOccurs=""unbounded"" /&gt;&#x0D;
            &lt;/xs:sequence&gt;&#x0D;
        &lt;/xs:complexType&gt;&#x0D;
&#x0D;
        &lt;xs:complexType name=""Specifications"" mixed=""true""&gt;&#x0D;
            &lt;xs:annotation&gt;&#x0D;
                &lt;xs:documentation&gt;A single technical aspect of the component.&lt;/xs:documentation&gt;&#x0D;
            &lt;/xs:annotation&gt;&#x0D;
            &lt;xs:sequence&gt;&#x0D;
                &lt;xs:any processContents=""skip"" minOccurs=""0"" maxOccurs=""unbounded"" /&gt;&#x0D;
            &lt;/xs:sequence&gt;&#x0D;
        &lt;/xs:complexType&gt;&#x0D;
&#x0D;
        &lt;xs:complexType name=""Category""&gt;&#x0D;
            &lt;xs:annotation&gt;&#x0D;
                &lt;xs:documentation&gt;A single categorization element that designates a classification taxonomy and a code within that classification type.  Optional description for default display if needed.&lt;/xs:documentation&gt;&#x0D;
            &lt;/xs:annotation&gt;&#x0D;
            &lt;xs:sequence&gt;&#x0D;
                &lt;xs:element ref=""Taxonomy"" /&gt;&#x0D;
                &lt;xs:element ref=""Code"" /&gt;&#x0D;
                &lt;xs:element ref=""Description"" minOccurs=""0"" /&gt;&#x0D;
            &lt;/xs:sequence&gt;&#x0D;
        &lt;/xs:complexType&gt;&#x0D;
&#x0D;
    &lt;xs:element name=""Taxonomy"" type=""xs:string"" /&gt;&#x0D;
    &lt;xs:element name=""Code"" type=""xs:string"" /&gt;&#x0D;
    &lt;xs:element name=""Description"" type=""xs:string"" /&gt;&#x0D;
&lt;/xs:schema&gt;';&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
24;14/10/2005 01:58:30;"dbo";"CREATE_XML_SCHEMA_COLLECTION";"Production";"ManuInstructionsSchemaCollection";"CREATE XML SCHEMA COLLECTION [Production].[ManuInstructionsSchemaCollection] AS 
'<?xml version=""1.0"" encoding=""UTF-8""?>
<xsd:schema targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions"" 
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions"" 
    elementFormDefault=""qualified"" attributeFormDefault=""unqualified""
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" >

    <xsd:annotation>
        <xsd:documentation>
            SetupHour   is the time it takes to set up the machine.
            MachineHour is the time the machine is busy manufcturing
            LaborHour   is the labor hours in the manu process
            LotSize     is the minimum quanity manufactured. For example,
                    no. of frames cut from the sheet metal
        </xsd:documentation>
    </xsd:annotation>

    <xsd:complexType name=""StepType"" mixed=""true"" >
        <xsd:choice  minOccurs=""0"" maxOccurs=""unbounded"" > 
            <xsd:element name=""tool"" type=""xsd:string"" />
            <xsd:element name=""material"" type=""xsd:string"" />
            <xsd:element name=""blueprint"" type=""xsd:string"" />
            <xsd:element name=""specs"" type=""xsd:string"" />
            <xsd:element name=""diag"" type=""xsd:string"" />
        </xsd:choice> 
    </xsd:complexType>

    <xsd:element  name=""root"">
        <xsd:complexType mixed=""true"">
            <xsd:sequence>
                <xsd:element name=""Location"" minOccurs=""1"" maxOccurs=""unbounded"">
                    <xsd:complexType mixed=""true"">
                        <xsd:sequence>
                            <xsd:element name=""step"" type=""StepType"" minOccurs=""1"" maxOccurs=""unbounded"" />
                        </xsd:sequence>
                        <xsd:attribute name=""LocationID"" type=""xsd:integer"" use=""required""/>
                        <xsd:attribute name=""SetupHours"" type=""xsd:decimal"" use=""optional""/>
                        <xsd:attribute name=""MachineHours"" type=""xsd:decimal"" use=""optional""/>
                        <xsd:attribute name=""LaborHours"" type=""xsd:decimal"" use=""optional""/>
                        <xsd:attribute name=""LotSize"" type=""xsd:decimal"" use=""optional""/>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>';
";"<EVENT_INSTANCE><EventType>CREATE_XML_SCHEMA_COLLECTION</EventType><PostTime>2005-10-14T01:58:30.367</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ManuInstructionsSchemaCollection</ObjectName><ObjectType>XML SCHEMA COLLECTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE XML SCHEMA COLLECTION [Production].[ManuInstructionsSchemaCollection] AS &#x0D;
'&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#x0D;
&lt;xsd:schema targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions"" &#x0D;
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions"" &#x0D;
    elementFormDefault=""qualified"" attributeFormDefault=""unqualified""&#x0D;
    xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" &gt;&#x0D;
&#x0D;
    &lt;xsd:annotation&gt;&#x0D;
        &lt;xsd:documentation&gt;&#x0D;
            SetupHour   is the time it takes to set up the machine.&#x0D;
            MachineHour is the time the machine is busy manufcturing&#x0D;
            LaborHour   is the labor hours in the manu process&#x0D;
            LotSize     is the minimum quanity manufactured. For example,&#x0D;
                    no. of frames cut from the sheet metal&#x0D;
        &lt;/xsd:documentation&gt;&#x0D;
    &lt;/xsd:annotation&gt;&#x0D;
&#x0D;
    &lt;xsd:complexType name=""StepType"" mixed=""true"" &gt;&#x0D;
        &lt;xsd:choice  minOccurs=""0"" maxOccurs=""unbounded"" &gt; &#x0D;
            &lt;xsd:element name=""tool"" type=""xsd:string"" /&gt;&#x0D;
            &lt;xsd:element name=""material"" type=""xsd:string"" /&gt;&#x0D;
            &lt;xsd:element name=""blueprint"" type=""xsd:string"" /&gt;&#x0D;
            &lt;xsd:element name=""specs"" type=""xsd:string"" /&gt;&#x0D;
            &lt;xsd:element name=""diag"" type=""xsd:string"" /&gt;&#x0D;
        &lt;/xsd:choice&gt; &#x0D;
    &lt;/xsd:complexType&gt;&#x0D;
&#x0D;
    &lt;xsd:element  name=""root""&gt;&#x0D;
        &lt;xsd:complexType mixed=""true""&gt;&#x0D;
            &lt;xsd:sequence&gt;&#x0D;
                &lt;xsd:element name=""Location"" minOccurs=""1"" maxOccurs=""unbounded""&gt;&#x0D;
                    &lt;xsd:complexType mixed=""true""&gt;&#x0D;
                        &lt;xsd:sequence&gt;&#x0D;
                            &lt;xsd:element name=""step"" type=""StepType"" minOccurs=""1"" maxOccurs=""unbounded"" /&gt;&#x0D;
                        &lt;/xsd:sequence&gt;&#x0D;
                        &lt;xsd:attribute name=""LocationID"" type=""xsd:integer"" use=""required""/&gt;&#x0D;
                        &lt;xsd:attribute name=""SetupHours"" type=""xsd:decimal"" use=""optional""/&gt;&#x0D;
                        &lt;xsd:attribute name=""MachineHours"" type=""xsd:decimal"" use=""optional""/&gt;&#x0D;
                        &lt;xsd:attribute name=""LaborHours"" type=""xsd:decimal"" use=""optional""/&gt;&#x0D;
                        &lt;xsd:attribute name=""LotSize"" type=""xsd:decimal"" use=""optional""/&gt;&#x0D;
                    &lt;/xsd:complexType&gt;&#x0D;
                &lt;/xsd:element&gt;&#x0D;
            &lt;/xsd:sequence&gt;&#x0D;
        &lt;/xsd:complexType&gt;&#x0D;
    &lt;/xsd:element&gt;&#x0D;
&lt;/xsd:schema&gt;';&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
25;14/10/2005 01:58:30;"dbo";"CREATE_XML_SCHEMA_COLLECTION";"Sales";"StoreSurveySchemaCollection";"CREATE XML SCHEMA COLLECTION [Sales].[StoreSurveySchemaCollection] AS 
'<?xml version=""1.0"" encoding=""UTF-8""?>
<xsd:schema xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
    targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey"" 
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey"" 
    elementFormDefault=""qualified"" attributeFormDefault=""unqualified"">

    <!-- BM=Bicycle manu BS=bicyle store OS=online store SGS=sporting goods store D=Discount Store -->
    <xsd:simpleType name=""BusinessType"">
        <xsd:restriction base=""xsd:string"">
            <xsd:enumeration value=""BM"" />
            <xsd:enumeration value=""BS"" />
            <xsd:enumeration value=""D"" />
            <xsd:enumeration value=""OS"" />
            <xsd:enumeration value=""SGS"" />
        </xsd:restriction>
    </xsd:simpleType>

    <!-- BMX=BMX Racing -->
    <xsd:simpleType name=""SpecialtyType"">
        <xsd:restriction base=""xsd:string"">
            <xsd:enumeration value=""Family"" />
            <xsd:enumeration value=""Kids"" />
            <xsd:enumeration value=""BMX"" />
            <xsd:enumeration value=""Touring"" />
            <xsd:enumeration value=""Road"" />
            <xsd:enumeration value=""Mountain"" />
            <xsd:enumeration value=""All"" />
        </xsd:restriction>
    </xsd:simpleType>

    <!-- AW=adventureworks only 2= AdvWorks+1 other brand other brand -->
    <xsd:simpleType name=""BrandType"">
        <xsd:restriction base=""xsd:string"">
            <xsd:enumeration value=""AW"" />
            <xsd:enumeration value=""2"" />
            <xsd:enumeration value=""3"" />
            <xsd:enumeration value=""4+"" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name=""InternetType"">
        <xsd:restriction base=""xsd:string"">
            <xsd:enumeration value=""56kb"" />
            <xsd:enumeration value=""ISDN"" />
            <xsd:enumeration value=""DSL"" />
            <xsd:enumeration value=""T1"" />
            <xsd:enumeration value=""T2"" />
            <xsd:enumeration value=""T3"" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:element name=""StoreSurvey"">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name=""ContactName"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""JobTitle"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""AnnualSales"" type=""xsd:decimal"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""AnnualRevenue"" type=""xsd:decimal"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""BankName"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""BusinessType"" type=""BusinessType"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""YearOpened"" type=""xsd:gYear"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""Specialty"" type=""SpecialtyType"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""SquareFeet"" type=""xsd:float"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""Brands"" type=""BrandType"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""Internet"" type=""InternetType"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""NumberEmployees"" type=""xsd:int"" minOccurs=""0"" maxOccurs=""1"" />
                <xsd:element name=""Comments"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>';
";"<EVENT_INSTANCE><EventType>CREATE_XML_SCHEMA_COLLECTION</EventType><PostTime>2005-10-14T01:58:30.587</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>StoreSurveySchemaCollection</ObjectName><ObjectType>XML SCHEMA COLLECTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE XML SCHEMA COLLECTION [Sales].[StoreSurveySchemaCollection] AS &#x0D;
'&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#x0D;
&lt;xsd:schema xmlns:xsd=""http://www.w3.org/2001/XMLSchema""&#x0D;
    targetNamespace=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey"" &#x0D;
    xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey"" &#x0D;
    elementFormDefault=""qualified"" attributeFormDefault=""unqualified""&gt;&#x0D;
&#x0D;
    &lt;!-- BM=Bicycle manu BS=bicyle store OS=online store SGS=sporting goods store D=Discount Store --&gt;&#x0D;
    &lt;xsd:simpleType name=""BusinessType""&gt;&#x0D;
        &lt;xsd:restriction base=""xsd:string""&gt;&#x0D;
            &lt;xsd:enumeration value=""BM"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""BS"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""D"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""OS"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""SGS"" /&gt;&#x0D;
        &lt;/xsd:restriction&gt;&#x0D;
    &lt;/xsd:simpleType&gt;&#x0D;
&#x0D;
    &lt;!-- BMX=BMX Racing --&gt;&#x0D;
    &lt;xsd:simpleType name=""SpecialtyType""&gt;&#x0D;
        &lt;xsd:restriction base=""xsd:string""&gt;&#x0D;
            &lt;xsd:enumeration value=""Family"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""Kids"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""BMX"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""Touring"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""Road"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""Mountain"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""All"" /&gt;&#x0D;
        &lt;/xsd:restriction&gt;&#x0D;
    &lt;/xsd:simpleType&gt;&#x0D;
&#x0D;
    &lt;!-- AW=adventureworks only 2= AdvWorks+1 other brand other brand --&gt;&#x0D;
    &lt;xsd:simpleType name=""BrandType""&gt;&#x0D;
        &lt;xsd:restriction base=""xsd:string""&gt;&#x0D;
            &lt;xsd:enumeration value=""AW"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""2"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""3"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""4+"" /&gt;&#x0D;
        &lt;/xsd:restriction&gt;&#x0D;
    &lt;/xsd:simpleType&gt;&#x0D;
&#x0D;
    &lt;xsd:simpleType name=""InternetType""&gt;&#x0D;
        &lt;xsd:restriction base=""xsd:string""&gt;&#x0D;
            &lt;xsd:enumeration value=""56kb"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""ISDN"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""DSL"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""T1"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""T2"" /&gt;&#x0D;
            &lt;xsd:enumeration value=""T3"" /&gt;&#x0D;
        &lt;/xsd:restriction&gt;&#x0D;
    &lt;/xsd:simpleType&gt;&#x0D;
&#x0D;
    &lt;xsd:element name=""StoreSurvey""&gt;&#x0D;
        &lt;xsd:complexType&gt;&#x0D;
            &lt;xsd:sequence&gt;&#x0D;
                &lt;xsd:element name=""ContactName"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""JobTitle"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""AnnualSales"" type=""xsd:decimal"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""AnnualRevenue"" type=""xsd:decimal"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""BankName"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""BusinessType"" type=""BusinessType"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""YearOpened"" type=""xsd:gYear"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""Specialty"" type=""SpecialtyType"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""SquareFeet"" type=""xsd:float"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""Brands"" type=""BrandType"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""Internet"" type=""InternetType"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""NumberEmployees"" type=""xsd:int"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
                &lt;xsd:element name=""Comments"" type=""xsd:string"" minOccurs=""0"" maxOccurs=""1"" /&gt;&#x0D;
            &lt;/xsd:sequence&gt;&#x0D;
        &lt;/xsd:complexType&gt;&#x0D;
    &lt;/xsd:element&gt;&#x0D;
&lt;/xsd:schema&gt;';&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
26;14/10/2005 01:58:30;"dbo";"CREATE_TABLE";"Person";"Address";"CREATE TABLE [Person].[Address](
    [AddressID] [int] IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [AddressLine1] [nvarchar](60) NOT NULL, 
    [AddressLine2] [nvarchar](60) NULL, 
    [City] [nvarchar](30) NOT NULL, 
    [StateProvinceID] [int] NOT NULL,
    [PostalCode] [nvarchar](15) NOT NULL, 
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_Address_rowguid] DEFAULT (NEWID()),
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Address_ModifiedDate] DEFAULT (GETDATE())
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:30.803</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>Address</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Person].[Address](&#x0D;
    [AddressID] [int] IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,&#x0D;
    [AddressLine1] [nvarchar](60) NOT NULL, &#x0D;
    [AddressLine2] [nvarchar](60) NULL, &#x0D;
    [City] [nvarchar](30) NOT NULL, &#x0D;
    [StateProvinceID] [int] NOT NULL,&#x0D;
    [PostalCode] [nvarchar](15) NOT NULL, &#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_Address_rowguid] DEFAULT (NEWID()),&#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Address_ModifiedDate] DEFAULT (GETDATE())&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
27;14/10/2005 01:58:30;"dbo";"CREATE_TABLE";"Person";"AddressType";"CREATE TABLE [Person].[AddressType](
    [AddressTypeID] [int] IDENTITY (1, 1) NOT NULL,
    [Name] [Name] NOT NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_AddressType_rowguid] DEFAULT (NEWID()),
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_AddressType_ModifiedDate] DEFAULT (GETDATE())
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:30.913</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>AddressType</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Person].[AddressType](&#x0D;
    [AddressTypeID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [Name] [Name] NOT NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_AddressType_rowguid] DEFAULT (NEWID()),&#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_AddressType_ModifiedDate] DEFAULT (GETDATE())&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
28;14/10/2005 01:58:31;"dbo";"CREATE_TABLE";"dbo";"AWBuildVersion";"CREATE TABLE [dbo].[AWBuildVersion](
    [SystemInformationID] [tinyint] IDENTITY (1, 1) NOT NULL,
    [Database Version] [nvarchar](25) NOT NULL, 
    [VersionDate] [datetime] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_AWBuildVersion_ModifiedDate] DEFAULT (GETDATE())
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:31.023</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>AWBuildVersion</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [dbo].[AWBuildVersion](&#x0D;
    [SystemInformationID] [tinyint] IDENTITY (1, 1) NOT NULL,&#x0D;
    [Database Version] [nvarchar](25) NOT NULL, &#x0D;
    [VersionDate] [datetime] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_AWBuildVersion_ModifiedDate] DEFAULT (GETDATE())&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
29;14/10/2005 01:58:31;"dbo";"CREATE_TABLE";"Production";"BillOfMaterials";"CREATE TABLE [Production].[BillOfMaterials](
    [BillOfMaterialsID] [int] IDENTITY (1, 1) NOT NULL,
    [ProductAssemblyID] [int] NULL,
    [ComponentID] [int] NOT NULL,
    [StartDate] [datetime] NOT NULL CONSTRAINT [DF_BillOfMaterials_StartDate] DEFAULT (GETDATE()),
    [EndDate] [datetime] NULL,
    [UnitMeasureCode] [nchar](3) NOT NULL, 
    [BOMLevel] [smallint] NOT NULL,
    [PerAssemblyQty] [decimal](8, 2) NOT NULL CONSTRAINT [DF_BillOfMaterials_PerAssemblyQty] DEFAULT (1.00),
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_BillOfMaterials_ModifiedDate] DEFAULT (GETDATE()),
    CONSTRAINT [CK_BillOfMaterials_EndDate] CHECK (([EndDate] > [StartDate]) OR ([EndDate] IS NULL)),
    CONSTRAINT [CK_BillOfMaterials_ProductAssemblyID] CHECK ([ProductAssemblyID] <> [ComponentID]),
    CONSTRAINT [CK_BillOfMaterials_BOMLevel] CHECK ((([ProductAssemblyID] IS NULL) 
        AND ([BOMLevel] = 0) AND ([PerAssemblyQty] = 1.00)) 
        OR (([ProductAssemblyID] IS NOT NULL) AND ([BOMLevel] >= 1))), 
    CONSTRAINT [CK_BillOfMaterials_PerAssemblyQty] CHECK ([PerAssemblyQty] >= 1.00) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:31.133</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>BillOfMaterials</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[BillOfMaterials](&#x0D;
    [BillOfMaterialsID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [ProductAssemblyID] [int] NULL,&#x0D;
    [ComponentID] [int] NOT NULL,&#x0D;
    [StartDate] [datetime] NOT NULL CONSTRAINT [DF_BillOfMaterials_StartDate] DEFAULT (GETDATE()),&#x0D;
    [EndDate] [datetime] NULL,&#x0D;
    [UnitMeasureCode] [nchar](3) NOT NULL, &#x0D;
    [BOMLevel] [smallint] NOT NULL,&#x0D;
    [PerAssemblyQty] [decimal](8, 2) NOT NULL CONSTRAINT [DF_BillOfMaterials_PerAssemblyQty] DEFAULT (1.00),&#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_BillOfMaterials_ModifiedDate] DEFAULT (GETDATE()),&#x0D;
    CONSTRAINT [CK_BillOfMaterials_EndDate] CHECK (([EndDate] &gt; [StartDate]) OR ([EndDate] IS NULL)),&#x0D;
    CONSTRAINT [CK_BillOfMaterials_ProductAssemblyID] CHECK ([ProductAssemblyID] &lt;&gt; [ComponentID]),&#x0D;
    CONSTRAINT [CK_BillOfMaterials_BOMLevel] CHECK ((([ProductAssemblyID] IS NULL) &#x0D;
        AND ([BOMLevel] = 0) AND ([PerAssemblyQty] = 1.00)) &#x0D;
        OR (([ProductAssemblyID] IS NOT NULL) AND ([BOMLevel] &gt;= 1))), &#x0D;
    CONSTRAINT [CK_BillOfMaterials_PerAssemblyQty] CHECK ([PerAssemblyQty] &gt;= 1.00) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
30;14/10/2005 01:58:31;"dbo";"CREATE_TABLE";"Person";"Contact";"CREATE TABLE [Person].[Contact](
    [ContactID] [int] IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [NameStyle] [NameStyle] NOT NULL CONSTRAINT [DF_Contact_NameStyle] DEFAULT (0),
    [Title] [nvarchar](8) NULL, 
    [FirstName] [Name] NOT NULL,
    [MiddleName] [Name] NULL,
    [LastName] [Name] NOT NULL,
    [Suffix] [nvarchar](10) NULL, 
    [EmailAddress] [nvarchar](50) NULL, 
    [EmailPromotion] [int] NOT NULL CONSTRAINT [DF_Contact_EmailPromotion] DEFAULT (0), 
    [Phone] [Phone] NULL, 
    [PasswordHash] [varchar](40) NOT NULL, 
    [PasswordSalt] [varchar](10) NOT NULL,
    [AdditionalContactInfo] [XML]([Person].[AdditionalContactInfoSchemaCollection]) NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_Contact_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Contact_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_Contact_EmailPromotion] CHECK ([EmailPromotion] BETWEEN 0 AND 2)
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:31.240</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>Contact</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Person].[Contact](&#x0D;
    [ContactID] [int] IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,&#x0D;
    [NameStyle] [NameStyle] NOT NULL CONSTRAINT [DF_Contact_NameStyle] DEFAULT (0),&#x0D;
    [Title] [nvarchar](8) NULL, &#x0D;
    [FirstName] [Name] NOT NULL,&#x0D;
    [MiddleName] [Name] NULL,&#x0D;
    [LastName] [Name] NOT NULL,&#x0D;
    [Suffix] [nvarchar](10) NULL, &#x0D;
    [EmailAddress] [nvarchar](50) NULL, &#x0D;
    [EmailPromotion] [int] NOT NULL CONSTRAINT [DF_Contact_EmailPromotion] DEFAULT (0), &#x0D;
    [Phone] [Phone] NULL, &#x0D;
    [PasswordHash] [varchar](40) NOT NULL, &#x0D;
    [PasswordSalt] [varchar](10) NOT NULL,&#x0D;
    [AdditionalContactInfo] [XML]([Person].[AdditionalContactInfoSchemaCollection]) NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_Contact_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Contact_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_Contact_EmailPromotion] CHECK ([EmailPromotion] BETWEEN 0 AND 2)&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
31;14/10/2005 01:58:31;"dbo";"CREATE_TABLE";"Sales";"ContactCreditCard";"CREATE TABLE [Sales].[ContactCreditCard](
    [ContactID] [int] NOT NULL,
    [CreditCardID] [int] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ContactCreditCard_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:31.350</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>ContactCreditCard</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[ContactCreditCard](&#x0D;
    [ContactID] [int] NOT NULL,&#x0D;
    [CreditCardID] [int] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ContactCreditCard_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
32;14/10/2005 01:58:31;"dbo";"CREATE_TABLE";"Person";"ContactType";"CREATE TABLE [Person].[ContactType](
    [ContactTypeID] [int] IDENTITY (1, 1) NOT NULL,
    [Name] [Name] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ContactType_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:31.460</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>ContactType</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Person].[ContactType](&#x0D;
    [ContactTypeID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [Name] [Name] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ContactType_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
33;14/10/2005 01:58:31;"dbo";"CREATE_TABLE";"Sales";"CountryRegionCurrency";"CREATE TABLE [Sales].[CountryRegionCurrency](
    [CountryRegionCode] [nvarchar](3) NOT NULL, 
    [CurrencyCode] [nchar](3) NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_CountryRegionCurrency_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:31.570</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>CountryRegionCurrency</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[CountryRegionCurrency](&#x0D;
    [CountryRegionCode] [nvarchar](3) NOT NULL, &#x0D;
    [CurrencyCode] [nchar](3) NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_CountryRegionCurrency_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
34;14/10/2005 01:58:31;"dbo";"CREATE_TABLE";"Person";"CountryRegion";"CREATE TABLE [Person].[CountryRegion](
    [CountryRegionCode] [nvarchar](3) NOT NULL, 
    [Name] [Name] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_CountryRegion_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:31.680</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>CountryRegion</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Person].[CountryRegion](&#x0D;
    [CountryRegionCode] [nvarchar](3) NOT NULL, &#x0D;
    [Name] [Name] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_CountryRegion_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
35;14/10/2005 01:58:31;"dbo";"CREATE_TABLE";"Sales";"CreditCard";"CREATE TABLE [Sales].[CreditCard](
    [CreditCardID] [int] IDENTITY (1, 1) NOT NULL,
    [CardType] [nvarchar](50) NOT NULL,
    [CardNumber] [nvarchar](25) NOT NULL,
    [ExpMonth] [tinyint] NOT NULL,
    [ExpYear] [smallint] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_CreditCard_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:31.787</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>CreditCard</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[CreditCard](&#x0D;
    [CreditCardID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [CardType] [nvarchar](50) NOT NULL,&#x0D;
    [CardNumber] [nvarchar](25) NOT NULL,&#x0D;
    [ExpMonth] [tinyint] NOT NULL,&#x0D;
    [ExpYear] [smallint] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_CreditCard_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
36;14/10/2005 01:58:31;"dbo";"CREATE_TABLE";"Production";"Culture";"CREATE TABLE [Production].[Culture](
    [CultureID] [nchar](6) NOT NULL,
    [Name] [Name] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Culture_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:31.897</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>Culture</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[Culture](&#x0D;
    [CultureID] [nchar](6) NOT NULL,&#x0D;
    [Name] [Name] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Culture_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
37;14/10/2005 01:58:32;"dbo";"CREATE_TABLE";"Sales";"Currency";"CREATE TABLE [Sales].[Currency](
    [CurrencyCode] [nchar](3) NOT NULL, 
    [Name] [Name] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Currency_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:32.007</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>Currency</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[Currency](&#x0D;
    [CurrencyCode] [nchar](3) NOT NULL, &#x0D;
    [Name] [Name] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Currency_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
38;14/10/2005 01:58:32;"dbo";"CREATE_TABLE";"Sales";"CurrencyRate";"CREATE TABLE [Sales].[CurrencyRate](
    [CurrencyRateID] [int] IDENTITY (1, 1) NOT NULL,
    [CurrencyRateDate] [datetime] NOT NULL,    
    [FromCurrencyCode] [nchar](3) NOT NULL, 
    [ToCurrencyCode] [nchar](3) NOT NULL, 
    [AverageRate] [money] NOT NULL,
    [EndOfDayRate] [money] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_CurrencyRate_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:32.117</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>CurrencyRate</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[CurrencyRate](&#x0D;
    [CurrencyRateID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [CurrencyRateDate] [datetime] NOT NULL,    &#x0D;
    [FromCurrencyCode] [nchar](3) NOT NULL, &#x0D;
    [ToCurrencyCode] [nchar](3) NOT NULL, &#x0D;
    [AverageRate] [money] NOT NULL,&#x0D;
    [EndOfDayRate] [money] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_CurrencyRate_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
39;14/10/2005 01:58:32;"dbo";"CREATE_TABLE";"Sales";"Customer";"CREATE TABLE [Sales].[Customer](
    [CustomerID] [int] IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [TerritoryID] [int] NULL,
    [AccountNumber] AS ISNULL('AW' + [dbo].[ufnLeadingZeros](CustomerID), ''),
    [CustomerType] [nchar](1) NOT NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_Customer_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Customer_ModifiedDate] DEFAULT (GETDATE()),
    CONSTRAINT [CK_Customer_CustomerType] CHECK (UPPER([CustomerType]) IN ('S', 'I'))
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:32.227</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>Customer</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[Customer](&#x0D;
    [CustomerID] [int] IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,&#x0D;
    [TerritoryID] [int] NULL,&#x0D;
    [AccountNumber] AS ISNULL('AW' + [dbo].[ufnLeadingZeros](CustomerID), ''),&#x0D;
    [CustomerType] [nchar](1) NOT NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_Customer_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Customer_ModifiedDate] DEFAULT (GETDATE()),&#x0D;
    CONSTRAINT [CK_Customer_CustomerType] CHECK (UPPER([CustomerType]) IN ('S', 'I'))&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
40;14/10/2005 01:58:32;"dbo";"CREATE_TABLE";"Sales";"CustomerAddress";"CREATE TABLE [Sales].[CustomerAddress](
    [CustomerID] [int] NOT NULL,
    [AddressID] [int] NOT NULL,
    [AddressTypeID] [int] NOT NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_CustomerAddress_rowguid] DEFAULT (NEWID()),
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_CustomerAddress_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:32.337</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>CustomerAddress</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[CustomerAddress](&#x0D;
    [CustomerID] [int] NOT NULL,&#x0D;
    [AddressID] [int] NOT NULL,&#x0D;
    [AddressTypeID] [int] NOT NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_CustomerAddress_rowguid] DEFAULT (NEWID()),&#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_CustomerAddress_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
41;14/10/2005 01:58:32;"dbo";"CREATE_TABLE";"HumanResources";"Department";"CREATE TABLE [HumanResources].[Department](
    [DepartmentID] [smallint] IDENTITY (1, 1) NOT NULL,
    [Name] [Name] NOT NULL,
    [GroupName] [Name] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Department_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:32.443</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>Department</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [HumanResources].[Department](&#x0D;
    [DepartmentID] [smallint] IDENTITY (1, 1) NOT NULL,&#x0D;
    [Name] [Name] NOT NULL,&#x0D;
    [GroupName] [Name] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Department_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
42;14/10/2005 01:58:32;"dbo";"CREATE_TABLE";"Production";"Document";"CREATE TABLE [Production].[Document](
    [DocumentID] [int] IDENTITY (1, 1) NOT NULL,
    [Title] [nvarchar](50) NOT NULL, 
    [FileName] [nvarchar](400) NOT NULL, 
    [FileExtension] nvarchar(8) NOT NULL,
    [Revision] [nchar](5) NOT NULL, 
    [ChangeNumber] [int] NOT NULL CONSTRAINT [DF_Document_ChangeNumber] DEFAULT (0),
    [Status] [tinyint] NOT NULL,
    [DocumentSummary] [nvarchar](max) NULL,
    [Document] [varbinary](max) NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Document_ModifiedDate] DEFAULT (GETDATE()),
    CONSTRAINT [CK_Document_Status] CHECK ([Status] BETWEEN 1 AND 3)
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:32.553</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>Document</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[Document](&#x0D;
    [DocumentID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [Title] [nvarchar](50) NOT NULL, &#x0D;
    [FileName] [nvarchar](400) NOT NULL, &#x0D;
    [FileExtension] nvarchar(8) NOT NULL,&#x0D;
    [Revision] [nchar](5) NOT NULL, &#x0D;
    [ChangeNumber] [int] NOT NULL CONSTRAINT [DF_Document_ChangeNumber] DEFAULT (0),&#x0D;
    [Status] [tinyint] NOT NULL,&#x0D;
    [DocumentSummary] [nvarchar](max) NULL,&#x0D;
    [Document] [varbinary](max) NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Document_ModifiedDate] DEFAULT (GETDATE()),&#x0D;
    CONSTRAINT [CK_Document_Status] CHECK ([Status] BETWEEN 1 AND 3)&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
43;14/10/2005 01:58:32;"dbo";"CREATE_TABLE";"HumanResources";"Employee";"CREATE TABLE [HumanResources].[Employee](
    [EmployeeID] [int] IDENTITY (1, 1) NOT NULL,
    [NationalIDNumber] [nvarchar](15) NOT NULL, 
    [ContactID] [int] NOT NULL,
    [LoginID] [nvarchar](256) NOT NULL,     
    [ManagerID] [int] NULL,
    [Title] [nvarchar](50) NOT NULL, 
    [BirthDate] [datetime] NOT NULL,
    [MaritalStatus] [nchar](1) NOT NULL, 
    [Gender] [nchar](1) NOT NULL, 
    [HireDate] [datetime] NOT NULL,
    [SalariedFlag] [Flag] NOT NULL CONSTRAINT [DF_Employee_SalariedFlag] DEFAULT (1),
    [VacationHours] [smallint] NOT NULL CONSTRAINT [DF_Employee_VacationHours] DEFAULT (0),
    [SickLeaveHours] [smallint] NOT NULL CONSTRAINT [DF_Employee_SickLeaveHours] DEFAULT (0),
    [CurrentFlag] [Flag] NOT NULL CONSTRAINT [DF_Employee_CurrentFlag] DEFAULT (1),
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_Employee_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Employee_ModifiedDate] DEFAULT (GETDATE()),
    CONSTRAINT [CK_Employee_BirthDate] CHECK ([BirthDate] BETWEEN '1930-01-01' AND DATEADD(YEAR, -18, GETDATE())),
    CONSTRAINT [CK_Employee_MaritalStatus] CHECK (UPPER([MaritalStatus]) IN ('M', 'S')), -- Married or Single
    CONSTRAINT [CK_Employee_HireDate] CHECK ([HireDate] BETWEEN '1996-07-01' AND DATEADD(DAY, 1, GETDATE())),
    CONSTRAINT [CK_Employee_Gender] CHECK (UPPER([Gender]) IN ('M', 'F')), -- Male or Female
    CONSTRAINT [CK_Employee_VacationHours] CHECK ([VacationHours] BETWEEN -40 AND 240), 
    CONSTRAINT [CK_Employee_SickLeaveHours] CHECK ([SickLeaveHours] BETWEEN 0 AND 120) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:32.663</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>Employee</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [HumanResources].[Employee](&#x0D;
    [EmployeeID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [NationalIDNumber] [nvarchar](15) NOT NULL, &#x0D;
    [ContactID] [int] NOT NULL,&#x0D;
    [LoginID] [nvarchar](256) NOT NULL,     &#x0D;
    [ManagerID] [int] NULL,&#x0D;
    [Title] [nvarchar](50) NOT NULL, &#x0D;
    [BirthDate] [datetime] NOT NULL,&#x0D;
    [MaritalStatus] [nchar](1) NOT NULL, &#x0D;
    [Gender] [nchar](1) NOT NULL, &#x0D;
    [HireDate] [datetime] NOT NULL,&#x0D;
    [SalariedFlag] [Flag] NOT NULL CONSTRAINT [DF_Employee_SalariedFlag] DEFAULT (1),&#x0D;
    [VacationHours] [smallint] NOT NULL CONSTRAINT [DF_Employee_VacationHours] DEFAULT (0),&#x0D;
    [SickLeaveHours] [smallint] NOT NULL CONSTRAINT [DF_Employee_SickLeaveHours] DEFAULT (0),&#x0D;
    [CurrentFlag] [Flag] NOT NULL CONSTRAINT [DF_Employee_CurrentFlag] DEFAULT (1),&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_Employee_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Employee_ModifiedDate] DEFAULT (GETDATE()),&#x0D;
    CONSTRAINT [CK_Employee_BirthDate] CHECK ([BirthDate] BETWEEN '1930-01-01' AND DATEADD(YEAR, -18, GETDATE())),&#x0D;
    CONSTRAINT [CK_Employee_MaritalStatus] CHECK (UPPER([MaritalStatus]) IN ('M', 'S')), -- Married or Single&#x0D;
    CONSTRAINT [CK_Employee_HireDate] CHECK ([HireDate] BETWEEN '1996-07-01' AND DATEADD(DAY, 1, GETDATE())),&#x0D;
    CONSTRAINT [CK_Employee_Gender] CHECK (UPPER([Gender]) IN ('M', 'F')), -- Male or Female&#x0D;
    CONSTRAINT [CK_Employee_VacationHours] CHECK ([VacationHours] BETWEEN -40 AND 240), &#x0D;
    CONSTRAINT [CK_Employee_SickLeaveHours] CHECK ([SickLeaveHours] BETWEEN 0 AND 120) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
44;14/10/2005 01:58:32;"dbo";"CREATE_TABLE";"HumanResources";"EmployeeAddress";"CREATE TABLE [HumanResources].[EmployeeAddress](
    [EmployeeID] [int] NOT NULL,
    [AddressID] [int] NOT NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_EmployeeAddress_rowguid] DEFAULT (NEWID()),
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_EmployeeAddress_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:32.773</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>EmployeeAddress</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [HumanResources].[EmployeeAddress](&#x0D;
    [EmployeeID] [int] NOT NULL,&#x0D;
    [AddressID] [int] NOT NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_EmployeeAddress_rowguid] DEFAULT (NEWID()),&#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_EmployeeAddress_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
45;14/10/2005 01:58:32;"dbo";"CREATE_TABLE";"HumanResources";"EmployeeDepartmentHistory";"CREATE TABLE [HumanResources].[EmployeeDepartmentHistory](
    [EmployeeID] [int] NOT NULL,
    [DepartmentID] [smallint] NOT NULL,
    [ShiftID] [tinyint] NOT NULL,
    [StartDate] [datetime] NOT NULL,
    [EndDate] [datetime] NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_EmployeeDepartmentHistory_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_EmployeeDepartmentHistory_EndDate] CHECK (([EndDate] >= [StartDate]) OR ([EndDate] IS NULL)),
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:32.883</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>EmployeeDepartmentHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [HumanResources].[EmployeeDepartmentHistory](&#x0D;
    [EmployeeID] [int] NOT NULL,&#x0D;
    [DepartmentID] [smallint] NOT NULL,&#x0D;
    [ShiftID] [tinyint] NOT NULL,&#x0D;
    [StartDate] [datetime] NOT NULL,&#x0D;
    [EndDate] [datetime] NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_EmployeeDepartmentHistory_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_EmployeeDepartmentHistory_EndDate] CHECK (([EndDate] &gt;= [StartDate]) OR ([EndDate] IS NULL)),&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
46;14/10/2005 01:58:32;"dbo";"CREATE_TABLE";"HumanResources";"EmployeePayHistory";"CREATE TABLE [HumanResources].[EmployeePayHistory](
    [EmployeeID] [int] NOT NULL,
    [RateChangeDate] [datetime] NOT NULL,
    [Rate] [money] NOT NULL,
    [PayFrequency] [tinyint] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_EmployeePayHistory_ModifiedDate] DEFAULT (GETDATE()),
    CONSTRAINT [CK_EmployeePayHistory_PayFrequency] CHECK ([PayFrequency] IN (1, 2)), -- 1 = monthly salary, 2 = biweekly salary
    CONSTRAINT [CK_EmployeePayHistory_Rate] CHECK ([Rate] BETWEEN 6.50 AND 200.00) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:32.990</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>EmployeePayHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [HumanResources].[EmployeePayHistory](&#x0D;
    [EmployeeID] [int] NOT NULL,&#x0D;
    [RateChangeDate] [datetime] NOT NULL,&#x0D;
    [Rate] [money] NOT NULL,&#x0D;
    [PayFrequency] [tinyint] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_EmployeePayHistory_ModifiedDate] DEFAULT (GETDATE()),&#x0D;
    CONSTRAINT [CK_EmployeePayHistory_PayFrequency] CHECK ([PayFrequency] IN (1, 2)), -- 1 = monthly salary, 2 = biweekly salary&#x0D;
    CONSTRAINT [CK_EmployeePayHistory_Rate] CHECK ([Rate] BETWEEN 6.50 AND 200.00) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
47;14/10/2005 01:58:33;"dbo";"CREATE_TABLE";"Production";"Illustration";"CREATE TABLE [Production].[Illustration](
    [IllustrationID] [int] IDENTITY (1, 1) NOT NULL,
    [Diagram] [XML] NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Illustration_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:33.100</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>Illustration</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[Illustration](&#x0D;
    [IllustrationID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [Diagram] [XML] NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Illustration_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
48;14/10/2005 01:58:33;"dbo";"CREATE_TABLE";"Sales";"Individual";"CREATE TABLE [Sales].[Individual](
    [CustomerID] [int] NOT NULL,
    [ContactID] [int] NOT NULL,
    [Demographics] [XML]([Sales].[IndividualSurveySchemaCollection]) NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Individual_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:33.210</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>Individual</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[Individual](&#x0D;
    [CustomerID] [int] NOT NULL,&#x0D;
    [ContactID] [int] NOT NULL,&#x0D;
    [Demographics] [XML]([Sales].[IndividualSurveySchemaCollection]) NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Individual_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
49;14/10/2005 01:58:33;"dbo";"CREATE_TABLE";"HumanResources";"JobCandidate";"CREATE TABLE [HumanResources].[JobCandidate](
    [JobCandidateID] [int] IDENTITY (1, 1) NOT NULL,
    [EmployeeID] [int] NULL,
    [Resume] [XML]([HumanResources].[HRResumeSchemaCollection]) NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_JobCandidate_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:33.320</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>JobCandidate</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [HumanResources].[JobCandidate](&#x0D;
    [JobCandidateID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [EmployeeID] [int] NULL,&#x0D;
    [Resume] [XML]([HumanResources].[HRResumeSchemaCollection]) NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_JobCandidate_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
50;14/10/2005 01:58:33;"dbo";"CREATE_TABLE";"Production";"Location";"CREATE TABLE [Production].[Location](
    [LocationID] [smallint] IDENTITY (1, 1) NOT NULL,
    [Name] [Name] NOT NULL,
    [CostRate] [smallmoney] NOT NULL CONSTRAINT [DF_Location_CostRate] DEFAULT (0.00),
    [Availability] [decimal](8, 2) NOT NULL CONSTRAINT [DF_Location_Availability] DEFAULT (0.00), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Location_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_Location_CostRate] CHECK ([CostRate] >= 0.00), 
    CONSTRAINT [CK_Location_Availability] CHECK ([Availability] >= 0.00) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:33.430</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>Location</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[Location](&#x0D;
    [LocationID] [smallint] IDENTITY (1, 1) NOT NULL,&#x0D;
    [Name] [Name] NOT NULL,&#x0D;
    [CostRate] [smallmoney] NOT NULL CONSTRAINT [DF_Location_CostRate] DEFAULT (0.00),&#x0D;
    [Availability] [decimal](8, 2) NOT NULL CONSTRAINT [DF_Location_Availability] DEFAULT (0.00), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Location_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_Location_CostRate] CHECK ([CostRate] &gt;= 0.00), &#x0D;
    CONSTRAINT [CK_Location_Availability] CHECK ([Availability] &gt;= 0.00) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
51;14/10/2005 01:58:33;"dbo";"CREATE_TABLE";"Production";"Product";"CREATE TABLE [Production].[Product](
    [ProductID] [int] IDENTITY (1, 1) NOT NULL,
    [Name] [Name] NOT NULL,
    [ProductNumber] [nvarchar](25) NOT NULL, 
    [MakeFlag] [Flag] NOT NULL CONSTRAINT [DF_Product_MakeFlag] DEFAULT (1),
    [FinishedGoodsFlag] [Flag] NOT NULL CONSTRAINT [DF_Product_FinishedGoodsFlag] DEFAULT (1),
    [Color] [nvarchar](15) NULL, 
    [SafetyStockLevel] [smallint] NOT NULL,
    [ReorderPoint] [smallint] NOT NULL,
    [StandardCost] [money] NOT NULL,
    [ListPrice] [money] NOT NULL,
    [Size] [nvarchar](5) NULL, 
    [SizeUnitMeasureCode] [nchar](3) NULL, 
    [WeightUnitMeasureCode] [nchar](3) NULL, 
    [Weight] [decimal](8, 2) NULL,
    [DaysToManufacture] [int] NOT NULL,
    [ProductLine] [nchar](2) NULL, 
    [Class] [nchar](2) NULL, 
    [Style] [nchar](2) NULL, 
    [ProductSubcategoryID] [int] NULL,
    [ProductModelID] [int] NULL,
    [SellStartDate] [datetime] NOT NULL,
    [SellEndDate] [datetime] NULL,
    [DiscontinuedDate] [datetime] NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_Product_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Product_ModifiedDate] DEFAULT (GETDATE()),
    CONSTRAINT [CK_Product_SafetyStockLevel] CHECK ([SafetyStockLevel] > 0),
    CONSTRAINT [CK_Product_ReorderPoint] CHECK ([ReorderPoint] > 0),
    CONSTRAINT [CK_Product_StandardCost] CHECK ([StandardCost] >= 0.00),
    CONSTRAINT [CK_Product_ListPrice] CHECK ([ListPrice] >= 0.00),
    CONSTRAINT [CK_Product_Weight] CHECK ([Weight] > 0.00),
    CONSTRAINT [CK_Product_DaysToManufacture] CHECK ([DaysToManufacture] >= 0),
    CONSTRAINT [CK_Product_ProductLine] CHECK (UPPER([ProductLine]) IN ('S', 'T', 'M', 'R') OR [ProductLine] IS NULL),
    CONSTRAINT [CK_Product_Class] CHECK (UPPER([Class]) IN ('L', 'M', 'H') OR [Class] IS NULL),
    CONSTRAINT [CK_Product_Style] CHECK (UPPER([Style]) IN ('W', 'M', 'U') OR [Style] IS NULL), 
    CONSTRAINT [CK_Product_SellEndDate] CHECK (([SellEndDate] >= [SellStartDate]) OR ([SellEndDate] IS NULL)),
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:33.537</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>Product</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[Product](&#x0D;
    [ProductID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [Name] [Name] NOT NULL,&#x0D;
    [ProductNumber] [nvarchar](25) NOT NULL, &#x0D;
    [MakeFlag] [Flag] NOT NULL CONSTRAINT [DF_Product_MakeFlag] DEFAULT (1),&#x0D;
    [FinishedGoodsFlag] [Flag] NOT NULL CONSTRAINT [DF_Product_FinishedGoodsFlag] DEFAULT (1),&#x0D;
    [Color] [nvarchar](15) NULL, &#x0D;
    [SafetyStockLevel] [smallint] NOT NULL,&#x0D;
    [ReorderPoint] [smallint] NOT NULL,&#x0D;
    [StandardCost] [money] NOT NULL,&#x0D;
    [ListPrice] [money] NOT NULL,&#x0D;
    [Size] [nvarchar](5) NULL, &#x0D;
    [SizeUnitMeasureCode] [nchar](3) NULL, &#x0D;
    [WeightUnitMeasureCode] [nchar](3) NULL, &#x0D;
    [Weight] [decimal](8, 2) NULL,&#x0D;
    [DaysToManufacture] [int] NOT NULL,&#x0D;
    [ProductLine] [nchar](2) NULL, &#x0D;
    [Class] [nchar](2) NULL, &#x0D;
    [Style] [nchar](2) NULL, &#x0D;
    [ProductSubcategoryID] [int] NULL,&#x0D;
    [ProductModelID] [int] NULL,&#x0D;
    [SellStartDate] [datetime] NOT NULL,&#x0D;
    [SellEndDate] [datetime] NULL,&#x0D;
    [DiscontinuedDate] [datetime] NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_Product_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Product_ModifiedDate] DEFAULT (GETDATE()),&#x0D;
    CONSTRAINT [CK_Product_SafetyStockLevel] CHECK ([SafetyStockLevel] &gt; 0),&#x0D;
    CONSTRAINT [CK_Product_ReorderPoint] CHECK ([ReorderPoint] &gt; 0),&#x0D;
    CONSTRAINT [CK_Product_StandardCost] CHECK ([StandardCost] &gt;= 0.00),&#x0D;
    CONSTRAINT [CK_Product_ListPrice] CHECK ([ListPrice] &gt;= 0.00),&#x0D;
    CONSTRAINT [CK_Product_Weight] CHECK ([Weight] &gt; 0.00),&#x0D;
    CONSTRAINT [CK_Product_DaysToManufacture] CHECK ([DaysToManufacture] &gt;= 0),&#x0D;
    CONSTRAINT [CK_Product_ProductLine] CHECK (UPPER([ProductLine]) IN ('S', 'T', 'M', 'R') OR [ProductLine] IS NULL),&#x0D;
    CONSTRAINT [CK_Product_Class] CHECK (UPPER([Class]) IN ('L', 'M', 'H') OR [Class] IS NULL),&#x0D;
    CONSTRAINT [CK_Product_Style] CHECK (UPPER([Style]) IN ('W', 'M', 'U') OR [Style] IS NULL), &#x0D;
    CONSTRAINT [CK_Product_SellEndDate] CHECK (([SellEndDate] &gt;= [SellStartDate]) OR ([SellEndDate] IS NULL)),&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
52;14/10/2005 01:58:33;"dbo";"CREATE_TABLE";"Production";"ProductCategory";"CREATE TABLE [Production].[ProductCategory](
    [ProductCategoryID] [int] IDENTITY (1, 1) NOT NULL,
    [Name] [Name] NOT NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_ProductCategory_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductCategory_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:33.647</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductCategory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[ProductCategory](&#x0D;
    [ProductCategoryID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [Name] [Name] NOT NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_ProductCategory_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductCategory_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
53;14/10/2005 01:58:33;"dbo";"CREATE_TABLE";"Production";"ProductCostHistory";"CREATE TABLE [Production].[ProductCostHistory](
    [ProductID] [int] NOT NULL,
    [StartDate] [datetime] NOT NULL,
    [EndDate] [datetime] NULL,
    [StandardCost] [money] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductCostHistory_ModifiedDate] DEFAULT (GETDATE()),
    CONSTRAINT [CK_ProductCostHistory_EndDate] CHECK (([EndDate] >= [StartDate]) OR ([EndDate] IS NULL)),
    CONSTRAINT [CK_ProductCostHistory_StandardCost] CHECK ([StandardCost] >= 0.00)
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:33.757</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductCostHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[ProductCostHistory](&#x0D;
    [ProductID] [int] NOT NULL,&#x0D;
    [StartDate] [datetime] NOT NULL,&#x0D;
    [EndDate] [datetime] NULL,&#x0D;
    [StandardCost] [money] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductCostHistory_ModifiedDate] DEFAULT (GETDATE()),&#x0D;
    CONSTRAINT [CK_ProductCostHistory_EndDate] CHECK (([EndDate] &gt;= [StartDate]) OR ([EndDate] IS NULL)),&#x0D;
    CONSTRAINT [CK_ProductCostHistory_StandardCost] CHECK ([StandardCost] &gt;= 0.00)&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
54;14/10/2005 01:58:33;"dbo";"CREATE_TABLE";"Production";"ProductDescription";"CREATE TABLE [Production].[ProductDescription](
    [ProductDescriptionID] [int] IDENTITY (1, 1) NOT NULL,
    [Description] [nvarchar](400) NOT NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_ProductDescription_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductDescription_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:33.867</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductDescription</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[ProductDescription](&#x0D;
    [ProductDescriptionID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [Description] [nvarchar](400) NOT NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_ProductDescription_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductDescription_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
55;14/10/2005 01:58:33;"dbo";"CREATE_TABLE";"Production";"ProductDocument";"CREATE TABLE [Production].[ProductDocument](
    [ProductID] [int] NOT NULL,
    [DocumentID] [int] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductDocument_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:33.977</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductDocument</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[ProductDocument](&#x0D;
    [ProductID] [int] NOT NULL,&#x0D;
    [DocumentID] [int] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductDocument_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
56;14/10/2005 01:58:34;"dbo";"CREATE_TABLE";"Production";"ProductInventory";"CREATE TABLE [Production].[ProductInventory](
    [ProductID] [int] NOT NULL,
    [LocationID] [smallint] NOT NULL,
    [Shelf] [nvarchar](10) NOT NULL, 
    [Bin] [tinyint] NOT NULL,
    [Quantity] [smallint] NOT NULL CONSTRAINT [DF_ProductInventory_Quantity] DEFAULT (0),
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_ProductInventory_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductInventory_ModifiedDate] DEFAULT (GETDATE()),
    CONSTRAINT [CK_ProductInventory_Shelf] CHECK (([Shelf] LIKE '[A-Za-z]') OR ([Shelf] = 'N/A')),
    CONSTRAINT [CK_ProductInventory_Bin] CHECK ([Bin] BETWEEN 0 AND 100)
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:34.100</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductInventory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[ProductInventory](&#x0D;
    [ProductID] [int] NOT NULL,&#x0D;
    [LocationID] [smallint] NOT NULL,&#x0D;
    [Shelf] [nvarchar](10) NOT NULL, &#x0D;
    [Bin] [tinyint] NOT NULL,&#x0D;
    [Quantity] [smallint] NOT NULL CONSTRAINT [DF_ProductInventory_Quantity] DEFAULT (0),&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_ProductInventory_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductInventory_ModifiedDate] DEFAULT (GETDATE()),&#x0D;
    CONSTRAINT [CK_ProductInventory_Shelf] CHECK (([Shelf] LIKE '[A-Za-z]') OR ([Shelf] = 'N/A')),&#x0D;
    CONSTRAINT [CK_ProductInventory_Bin] CHECK ([Bin] BETWEEN 0 AND 100)&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
57;14/10/2005 01:58:34;"dbo";"CREATE_TABLE";"Production";"ProductListPriceHistory";"CREATE TABLE [Production].[ProductListPriceHistory](
    [ProductID] [int] NOT NULL,
    [StartDate] [datetime] NOT NULL,
    [EndDate] [datetime] NULL,
    [ListPrice] [money] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductListPriceHistory_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_ProductListPriceHistory_EndDate] CHECK (([EndDate] >= [StartDate]) OR ([EndDate] IS NULL)),
    CONSTRAINT [CK_ProductListPriceHistory_ListPrice] CHECK ([ListPrice] > 0.00)
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:34.193</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductListPriceHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[ProductListPriceHistory](&#x0D;
    [ProductID] [int] NOT NULL,&#x0D;
    [StartDate] [datetime] NOT NULL,&#x0D;
    [EndDate] [datetime] NULL,&#x0D;
    [ListPrice] [money] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductListPriceHistory_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_ProductListPriceHistory_EndDate] CHECK (([EndDate] &gt;= [StartDate]) OR ([EndDate] IS NULL)),&#x0D;
    CONSTRAINT [CK_ProductListPriceHistory_ListPrice] CHECK ([ListPrice] &gt; 0.00)&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
58;14/10/2005 01:58:34;"dbo";"CREATE_TABLE";"Production";"ProductModel";"CREATE TABLE [Production].[ProductModel](
    [ProductModelID] [int] IDENTITY (1, 1) NOT NULL,
    [Name] [Name] NOT NULL,
    [CatalogDescription] [XML]([Production].[ProductDescriptionSchemaCollection]) NULL,
    [Instructions] [XML]([Production].[ManuInstructionsSchemaCollection]) NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_ProductModel_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModel_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:34.303</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductModel</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[ProductModel](&#x0D;
    [ProductModelID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [Name] [Name] NOT NULL,&#x0D;
    [CatalogDescription] [XML]([Production].[ProductDescriptionSchemaCollection]) NULL,&#x0D;
    [Instructions] [XML]([Production].[ManuInstructionsSchemaCollection]) NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_ProductModel_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModel_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
59;14/10/2005 01:58:34;"dbo";"CREATE_TABLE";"Production";"ProductModelIllustration";"CREATE TABLE [Production].[ProductModelIllustration](
    [ProductModelID] [int] NOT NULL,
    [IllustrationID] [int] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModelIllustration_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:34.413</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductModelIllustration</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[ProductModelIllustration](&#x0D;
    [ProductModelID] [int] NOT NULL,&#x0D;
    [IllustrationID] [int] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModelIllustration_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
60;14/10/2005 01:58:34;"dbo";"CREATE_TABLE";"Production";"ProductModelProductDescriptionCulture";"CREATE TABLE [Production].[ProductModelProductDescriptionCulture](
    [ProductModelID] [int] NOT NULL,
    [ProductDescriptionID] [int] NOT NULL,
    [CultureID] [nchar](6) NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModelProductDescriptionCulture_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:34.523</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductModelProductDescriptionCulture</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[ProductModelProductDescriptionCulture](&#x0D;
    [ProductModelID] [int] NOT NULL,&#x0D;
    [ProductDescriptionID] [int] NOT NULL,&#x0D;
    [CultureID] [nchar](6) NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModelProductDescriptionCulture_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
61;14/10/2005 01:58:34;"dbo";"CREATE_TABLE";"Production";"ProductPhoto";"CREATE TABLE [Production].[ProductPhoto](
    [ProductPhotoID] [int] IDENTITY (1, 1) NOT NULL,
    [ThumbNailPhoto] [varbinary](max) NULL,
    [ThumbnailPhotoFileName] [nvarchar](50) NULL,
    [LargePhoto] [varbinary](max) NULL,
    [LargePhotoFileName] [nvarchar](50) NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductPhoto_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:34.633</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductPhoto</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[ProductPhoto](&#x0D;
    [ProductPhotoID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [ThumbNailPhoto] [varbinary](max) NULL,&#x0D;
    [ThumbnailPhotoFileName] [nvarchar](50) NULL,&#x0D;
    [LargePhoto] [varbinary](max) NULL,&#x0D;
    [LargePhotoFileName] [nvarchar](50) NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductPhoto_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
62;14/10/2005 01:58:34;"dbo";"CREATE_TABLE";"Production";"ProductProductPhoto";"CREATE TABLE [Production].[ProductProductPhoto](
    [ProductID] [int] NOT NULL,
    [ProductPhotoID] [int] NOT NULL,
    [Primary] [Flag] NOT NULL CONSTRAINT [DF_ProductProductPhoto_Primary] DEFAULT (0),
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductProductPhoto_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:34.740</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductProductPhoto</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[ProductProductPhoto](&#x0D;
    [ProductID] [int] NOT NULL,&#x0D;
    [ProductPhotoID] [int] NOT NULL,&#x0D;
    [Primary] [Flag] NOT NULL CONSTRAINT [DF_ProductProductPhoto_Primary] DEFAULT (0),&#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductProductPhoto_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
63;14/10/2005 01:58:34;"dbo";"CREATE_TABLE";"Production";"ProductReview";"CREATE TABLE [Production].[ProductReview](
    [ProductReviewID] [int] IDENTITY (1, 1) NOT NULL,
    [ProductID] [int] NOT NULL,
    [ReviewerName] [Name] NOT NULL,
    [ReviewDate] [datetime] NOT NULL CONSTRAINT [DF_ProductReview_ReviewDate] DEFAULT (GETDATE()),
    [EmailAddress] [nvarchar](50) NOT NULL,
    [Rating] [int] NOT NULL,
    [Comments] [nvarchar](3850), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductReview_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_ProductReview_Rating] CHECK ([Rating] BETWEEN 1 AND 5), 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:34.850</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductReview</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[ProductReview](&#x0D;
    [ProductReviewID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [ProductID] [int] NOT NULL,&#x0D;
    [ReviewerName] [Name] NOT NULL,&#x0D;
    [ReviewDate] [datetime] NOT NULL CONSTRAINT [DF_ProductReview_ReviewDate] DEFAULT (GETDATE()),&#x0D;
    [EmailAddress] [nvarchar](50) NOT NULL,&#x0D;
    [Rating] [int] NOT NULL,&#x0D;
    [Comments] [nvarchar](3850), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductReview_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_ProductReview_Rating] CHECK ([Rating] BETWEEN 1 AND 5), &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
64;14/10/2005 01:58:34;"dbo";"CREATE_TABLE";"Production";"ProductSubcategory";"CREATE TABLE [Production].[ProductSubcategory](
    [ProductSubcategoryID] [int] IDENTITY (1, 1) NOT NULL,
    [ProductCategoryID] [int] NOT NULL,
    [Name] [Name] NOT NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_ProductSubcategory_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductSubcategory_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:34.960</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductSubcategory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[ProductSubcategory](&#x0D;
    [ProductSubcategoryID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [ProductCategoryID] [int] NOT NULL,&#x0D;
    [Name] [Name] NOT NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_ProductSubcategory_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductSubcategory_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
65;14/10/2005 01:58:35;"dbo";"CREATE_TABLE";"Purchasing";"ProductVendor";"CREATE TABLE [Purchasing].[ProductVendor](
    [ProductID] [int] NOT NULL,
    [VendorID] [int] NOT NULL,
    [AverageLeadTime] [int] NOT NULL,
    [StandardPrice] [money] NOT NULL,
    [LastReceiptCost] [money] NULL,
    [LastReceiptDate] [datetime] NULL,
    [MinOrderQty] [int] NOT NULL,
    [MaxOrderQty] [int] NOT NULL,
    [OnOrderQty] [int] NULL,
    [UnitMeasureCode] [nchar](3) NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductVendor_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_ProductVendor_AverageLeadTime] CHECK ([AverageLeadTime] >= 1),
    CONSTRAINT [CK_ProductVendor_StandardPrice] CHECK ([StandardPrice] > 0.00),
    CONSTRAINT [CK_ProductVendor_LastReceiptCost] CHECK ([LastReceiptCost] > 0.00),
    CONSTRAINT [CK_ProductVendor_MinOrderQty] CHECK ([MinOrderQty] >= 1),
    CONSTRAINT [CK_ProductVendor_MaxOrderQty] CHECK ([MaxOrderQty] >= 1),
    CONSTRAINT [CK_ProductVendor_OnOrderQty] CHECK ([OnOrderQty] >= 0)
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:35.070</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>ProductVendor</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Purchasing].[ProductVendor](&#x0D;
    [ProductID] [int] NOT NULL,&#x0D;
    [VendorID] [int] NOT NULL,&#x0D;
    [AverageLeadTime] [int] NOT NULL,&#x0D;
    [StandardPrice] [money] NOT NULL,&#x0D;
    [LastReceiptCost] [money] NULL,&#x0D;
    [LastReceiptDate] [datetime] NULL,&#x0D;
    [MinOrderQty] [int] NOT NULL,&#x0D;
    [MaxOrderQty] [int] NOT NULL,&#x0D;
    [OnOrderQty] [int] NULL,&#x0D;
    [UnitMeasureCode] [nchar](3) NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductVendor_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_ProductVendor_AverageLeadTime] CHECK ([AverageLeadTime] &gt;= 1),&#x0D;
    CONSTRAINT [CK_ProductVendor_StandardPrice] CHECK ([StandardPrice] &gt; 0.00),&#x0D;
    CONSTRAINT [CK_ProductVendor_LastReceiptCost] CHECK ([LastReceiptCost] &gt; 0.00),&#x0D;
    CONSTRAINT [CK_ProductVendor_MinOrderQty] CHECK ([MinOrderQty] &gt;= 1),&#x0D;
    CONSTRAINT [CK_ProductVendor_MaxOrderQty] CHECK ([MaxOrderQty] &gt;= 1),&#x0D;
    CONSTRAINT [CK_ProductVendor_OnOrderQty] CHECK ([OnOrderQty] &gt;= 0)&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
66;14/10/2005 01:58:35;"dbo";"CREATE_TABLE";"Purchasing";"PurchaseOrderDetail";"CREATE TABLE [Purchasing].[PurchaseOrderDetail](
    [PurchaseOrderID] [int] NOT NULL,
    [PurchaseOrderDetailID] [int] IDENTITY (1, 1) NOT NULL,
    [DueDate] [datetime] NOT NULL,
    [OrderQty] [smallint] NOT NULL,
    [ProductID] [int] NOT NULL,
    [UnitPrice] [money] NOT NULL,
    [LineTotal] AS ISNULL([OrderQty] * [UnitPrice], 0.00), 
    [ReceivedQty] [decimal](8, 2) NOT NULL,
    [RejectedQty] [decimal](8, 2) NOT NULL,
    [StockedQty] AS ISNULL([ReceivedQty] - [RejectedQty], 0.00),
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_PurchaseOrderDetail_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_PurchaseOrderDetail_OrderQty] CHECK ([OrderQty] > 0), 
    CONSTRAINT [CK_PurchaseOrderDetail_UnitPrice] CHECK ([UnitPrice] >= 0.00), 
    CONSTRAINT [CK_PurchaseOrderDetail_ReceivedQty] CHECK ([ReceivedQty] >= 0.00), 
    CONSTRAINT [CK_PurchaseOrderDetail_RejectedQty] CHECK ([RejectedQty] >= 0.00) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:35.180</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>PurchaseOrderDetail</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Purchasing].[PurchaseOrderDetail](&#x0D;
    [PurchaseOrderID] [int] NOT NULL,&#x0D;
    [PurchaseOrderDetailID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [DueDate] [datetime] NOT NULL,&#x0D;
    [OrderQty] [smallint] NOT NULL,&#x0D;
    [ProductID] [int] NOT NULL,&#x0D;
    [UnitPrice] [money] NOT NULL,&#x0D;
    [LineTotal] AS ISNULL([OrderQty] * [UnitPrice], 0.00), &#x0D;
    [ReceivedQty] [decimal](8, 2) NOT NULL,&#x0D;
    [RejectedQty] [decimal](8, 2) NOT NULL,&#x0D;
    [StockedQty] AS ISNULL([ReceivedQty] - [RejectedQty], 0.00),&#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_PurchaseOrderDetail_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_PurchaseOrderDetail_OrderQty] CHECK ([OrderQty] &gt; 0), &#x0D;
    CONSTRAINT [CK_PurchaseOrderDetail_UnitPrice] CHECK ([UnitPrice] &gt;= 0.00), &#x0D;
    CONSTRAINT [CK_PurchaseOrderDetail_ReceivedQty] CHECK ([ReceivedQty] &gt;= 0.00), &#x0D;
    CONSTRAINT [CK_PurchaseOrderDetail_RejectedQty] CHECK ([RejectedQty] &gt;= 0.00) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
67;14/10/2005 01:58:35;"dbo";"CREATE_TABLE";"Purchasing";"PurchaseOrderHeader";"CREATE TABLE [Purchasing].[PurchaseOrderHeader](
    [PurchaseOrderID] [int] IDENTITY (1, 1) NOT NULL, 
    [RevisionNumber] [tinyint] NOT NULL CONSTRAINT [DF_PurchaseOrderHeader_RevisionNumber] DEFAULT (0), 
    [Status] [tinyint] NOT NULL CONSTRAINT [DF_PurchaseOrderHeader_Status] DEFAULT (1), 
    [EmployeeID] [int] NOT NULL, 
    [VendorID] [int] NOT NULL, 
    [ShipMethodID] [int] NOT NULL, 
    [OrderDate] [datetime] NOT NULL CONSTRAINT [DF_PurchaseOrderHeader_OrderDate] DEFAULT (GETDATE()), 
    [ShipDate] [datetime] NULL, 
    [SubTotal] [money] NOT NULL CONSTRAINT [DF_PurchaseOrderHeader_SubTotal] DEFAULT (0.00), 
    [TaxAmt] [money] NOT NULL CONSTRAINT [DF_PurchaseOrderHeader_TaxAmt] DEFAULT (0.00), 
    [Freight] [money] NOT NULL CONSTRAINT [DF_PurchaseOrderHeader_Freight] DEFAULT (0.00), 
    [TotalDue] AS ISNULL([SubTotal] + [TaxAmt] + [Freight], 0) PERSISTED NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_PurchaseOrderHeader_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_PurchaseOrderHeader_Status] CHECK ([Status] BETWEEN 1 AND 4), -- 1 = Pending; 2 = Approved; 3 = Rejected; 4 = Complete 
    CONSTRAINT [CK_PurchaseOrderHeader_ShipDate] CHECK (([ShipDate] >= [OrderDate]) OR ([ShipDate] IS NULL)), 
    CONSTRAINT [CK_PurchaseOrderHeader_SubTotal] CHECK ([SubTotal] >= 0.00), 
    CONSTRAINT [CK_PurchaseOrderHeader_TaxAmt] CHECK ([TaxAmt] >= 0.00), 
    CONSTRAINT [CK_PurchaseOrderHeader_Freight] CHECK ([Freight] >= 0.00) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:35.287</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>PurchaseOrderHeader</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Purchasing].[PurchaseOrderHeader](&#x0D;
    [PurchaseOrderID] [int] IDENTITY (1, 1) NOT NULL, &#x0D;
    [RevisionNumber] [tinyint] NOT NULL CONSTRAINT [DF_PurchaseOrderHeader_RevisionNumber] DEFAULT (0), &#x0D;
    [Status] [tinyint] NOT NULL CONSTRAINT [DF_PurchaseOrderHeader_Status] DEFAULT (1), &#x0D;
    [EmployeeID] [int] NOT NULL, &#x0D;
    [VendorID] [int] NOT NULL, &#x0D;
    [ShipMethodID] [int] NOT NULL, &#x0D;
    [OrderDate] [datetime] NOT NULL CONSTRAINT [DF_PurchaseOrderHeader_OrderDate] DEFAULT (GETDATE()), &#x0D;
    [ShipDate] [datetime] NULL, &#x0D;
    [SubTotal] [money] NOT NULL CONSTRAINT [DF_PurchaseOrderHeader_SubTotal] DEFAULT (0.00), &#x0D;
    [TaxAmt] [money] NOT NULL CONSTRAINT [DF_PurchaseOrderHeader_TaxAmt] DEFAULT (0.00), &#x0D;
    [Freight] [money] NOT NULL CONSTRAINT [DF_PurchaseOrderHeader_Freight] DEFAULT (0.00), &#x0D;
    [TotalDue] AS ISNULL([SubTotal] + [TaxAmt] + [Freight], 0) PERSISTED NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_PurchaseOrderHeader_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_PurchaseOrderHeader_Status] CHECK ([Status] BETWEEN 1 AND 4), -- 1 = Pending; 2 = Approved; 3 = Rejected; 4 = Complete &#x0D;
    CONSTRAINT [CK_PurchaseOrderHeader_ShipDate] CHECK (([ShipDate] &gt;= [OrderDate]) OR ([ShipDate] IS NULL)), &#x0D;
    CONSTRAINT [CK_PurchaseOrderHeader_SubTotal] CHECK ([SubTotal] &gt;= 0.00), &#x0D;
    CONSTRAINT [CK_PurchaseOrderHeader_TaxAmt] CHECK ([TaxAmt] &gt;= 0.00), &#x0D;
    CONSTRAINT [CK_PurchaseOrderHeader_Freight] CHECK ([Freight] &gt;= 0.00) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
68;14/10/2005 01:58:35;"dbo";"CREATE_TABLE";"Sales";"SalesOrderDetail";"CREATE TABLE [Sales].[SalesOrderDetail](
    [SalesOrderID] [int] NOT NULL,
    [SalesOrderDetailID] [int] IDENTITY (1, 1) NOT NULL,
    [CarrierTrackingNumber] [nvarchar](25) NULL, 
    [OrderQty] [smallint] NOT NULL,
    [ProductID] [int] NOT NULL,
    [SpecialOfferID] [int] NOT NULL,
    [UnitPrice] [money] NOT NULL,
    [UnitPriceDiscount] [money] NOT NULL CONSTRAINT [DF_SalesOrderDetail_UnitPriceDiscount] DEFAULT (0.0),
    [LineTotal] AS ISNULL([UnitPrice] * (1.0 - [UnitPriceDiscount]) * [OrderQty], 0.0),
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SalesOrderDetail_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesOrderDetail_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_SalesOrderDetail_OrderQty] CHECK ([OrderQty] > 0), 
    CONSTRAINT [CK_SalesOrderDetail_UnitPrice] CHECK ([UnitPrice] >= 0.00), 
    CONSTRAINT [CK_SalesOrderDetail_UnitPriceDiscount] CHECK ([UnitPriceDiscount] >= 0.00) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:35.397</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesOrderDetail</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[SalesOrderDetail](&#x0D;
    [SalesOrderID] [int] NOT NULL,&#x0D;
    [SalesOrderDetailID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [CarrierTrackingNumber] [nvarchar](25) NULL, &#x0D;
    [OrderQty] [smallint] NOT NULL,&#x0D;
    [ProductID] [int] NOT NULL,&#x0D;
    [SpecialOfferID] [int] NOT NULL,&#x0D;
    [UnitPrice] [money] NOT NULL,&#x0D;
    [UnitPriceDiscount] [money] NOT NULL CONSTRAINT [DF_SalesOrderDetail_UnitPriceDiscount] DEFAULT (0.0),&#x0D;
    [LineTotal] AS ISNULL([UnitPrice] * (1.0 - [UnitPriceDiscount]) * [OrderQty], 0.0),&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SalesOrderDetail_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesOrderDetail_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_SalesOrderDetail_OrderQty] CHECK ([OrderQty] &gt; 0), &#x0D;
    CONSTRAINT [CK_SalesOrderDetail_UnitPrice] CHECK ([UnitPrice] &gt;= 0.00), &#x0D;
    CONSTRAINT [CK_SalesOrderDetail_UnitPriceDiscount] CHECK ([UnitPriceDiscount] &gt;= 0.00) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
69;14/10/2005 01:58:35;"dbo";"CREATE_TABLE";"Sales";"SalesOrderHeader";"CREATE TABLE [Sales].[SalesOrderHeader](
    [SalesOrderID] [int] IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,
    [RevisionNumber] [tinyint] NOT NULL CONSTRAINT [DF_SalesOrderHeader_RevisionNumber] DEFAULT (0),
    [OrderDate] [datetime] NOT NULL CONSTRAINT [DF_SalesOrderHeader_OrderDate] DEFAULT (GETDATE()),
    [DueDate] [datetime] NOT NULL,
    [ShipDate] [datetime] NULL,
    [Status] [tinyint] NOT NULL CONSTRAINT [DF_SalesOrderHeader_Status] DEFAULT (1),
    [OnlineOrderFlag] [Flag] NOT NULL CONSTRAINT [DF_SalesOrderHeader_OnlineOrderFlag] DEFAULT (1),
    [SalesOrderNumber] AS ISNULL(N'SO' + CONVERT(nvarchar(23), [SalesOrderID]), N'*** ERROR ***'), 
    [PurchaseOrderNumber] [OrderNumber] NULL,
    [AccountNumber] [AccountNumber] NULL,
    [CustomerID] [int] NOT NULL,
    [ContactID] [int] NOT NULL,    
    [SalesPersonID] [int] NULL,
    [TerritoryID] [int] NULL,
    [BillToAddressID] [int] NOT NULL,
    [ShipToAddressID] [int] NOT NULL,
    [ShipMethodID] [int] NOT NULL,
    [CreditCardID] [int] NULL,
    [CreditCardApprovalCode] [varchar](15) NULL,    
    [CurrencyRateID] [int] NULL,
    [SubTotal] [money] NOT NULL CONSTRAINT [DF_SalesOrderHeader_SubTotal] DEFAULT (0.00),
    [TaxAmt] [money] NOT NULL CONSTRAINT [DF_SalesOrderHeader_TaxAmt] DEFAULT (0.00),
    [Freight] [money] NOT NULL CONSTRAINT [DF_SalesOrderHeader_Freight] DEFAULT (0.00),
    [TotalDue] AS ISNULL([SubTotal] + [TaxAmt] + [Freight], 0),
    [Comment] [nvarchar](128) NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SalesOrderHeader_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesOrderHeader_ModifiedDate] DEFAULT (GETDATE()),
    CONSTRAINT [CK_SalesOrderHeader_Status] CHECK ([Status] BETWEEN 0 AND 8), 
    CONSTRAINT [CK_SalesOrderHeader_DueDate] CHECK ([DueDate] >= [OrderDate]), 
    CONSTRAINT [CK_SalesOrderHeader_ShipDate] CHECK (([ShipDate] >= [OrderDate]) OR ([ShipDate] IS NULL)), 
    CONSTRAINT [CK_SalesOrderHeader_SubTotal] CHECK ([SubTotal] >= 0.00), 
    CONSTRAINT [CK_SalesOrderHeader_TaxAmt] CHECK ([TaxAmt] >= 0.00), 
    CONSTRAINT [CK_SalesOrderHeader_Freight] CHECK ([Freight] >= 0.00) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:35.507</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesOrderHeader</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[SalesOrderHeader](&#x0D;
    [SalesOrderID] [int] IDENTITY (1, 1) NOT FOR REPLICATION NOT NULL,&#x0D;
    [RevisionNumber] [tinyint] NOT NULL CONSTRAINT [DF_SalesOrderHeader_RevisionNumber] DEFAULT (0),&#x0D;
    [OrderDate] [datetime] NOT NULL CONSTRAINT [DF_SalesOrderHeader_OrderDate] DEFAULT (GETDATE()),&#x0D;
    [DueDate] [datetime] NOT NULL,&#x0D;
    [ShipDate] [datetime] NULL,&#x0D;
    [Status] [tinyint] NOT NULL CONSTRAINT [DF_SalesOrderHeader_Status] DEFAULT (1),&#x0D;
    [OnlineOrderFlag] [Flag] NOT NULL CONSTRAINT [DF_SalesOrderHeader_OnlineOrderFlag] DEFAULT (1),&#x0D;
    [SalesOrderNumber] AS ISNULL(N'SO' + CONVERT(nvarchar(23), [SalesOrderID]), N'*** ERROR ***'), &#x0D;
    [PurchaseOrderNumber] [OrderNumber] NULL,&#x0D;
    [AccountNumber] [AccountNumber] NULL,&#x0D;
    [CustomerID] [int] NOT NULL,&#x0D;
    [ContactID] [int] NOT NULL,    &#x0D;
    [SalesPersonID] [int] NULL,&#x0D;
    [TerritoryID] [int] NULL,&#x0D;
    [BillToAddressID] [int] NOT NULL,&#x0D;
    [ShipToAddressID] [int] NOT NULL,&#x0D;
    [ShipMethodID] [int] NOT NULL,&#x0D;
    [CreditCardID] [int] NULL,&#x0D;
    [CreditCardApprovalCode] [varchar](15) NULL,    &#x0D;
    [CurrencyRateID] [int] NULL,&#x0D;
    [SubTotal] [money] NOT NULL CONSTRAINT [DF_SalesOrderHeader_SubTotal] DEFAULT (0.00),&#x0D;
    [TaxAmt] [money] NOT NULL CONSTRAINT [DF_SalesOrderHeader_TaxAmt] DEFAULT (0.00),&#x0D;
    [Freight] [money] NOT NULL CONSTRAINT [DF_SalesOrderHeader_Freight] DEFAULT (0.00),&#x0D;
    [TotalDue] AS ISNULL([SubTotal] + [TaxAmt] + [Freight], 0),&#x0D;
    [Comment] [nvarchar](128) NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SalesOrderHeader_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesOrderHeader_ModifiedDate] DEFAULT (GETDATE()),&#x0D;
    CONSTRAINT [CK_SalesOrderHeader_Status] CHECK ([Status] BETWEEN 0 AND 8), &#x0D;
    CONSTRAINT [CK_SalesOrderHeader_DueDate] CHECK ([DueDate] &gt;= [OrderDate]), &#x0D;
    CONSTRAINT [CK_SalesOrderHeader_ShipDate] CHECK (([ShipDate] &gt;= [OrderDate]) OR ([ShipDate] IS NULL)), &#x0D;
    CONSTRAINT [CK_SalesOrderHeader_SubTotal] CHECK ([SubTotal] &gt;= 0.00), &#x0D;
    CONSTRAINT [CK_SalesOrderHeader_TaxAmt] CHECK ([TaxAmt] &gt;= 0.00), &#x0D;
    CONSTRAINT [CK_SalesOrderHeader_Freight] CHECK ([Freight] &gt;= 0.00) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
70;14/10/2005 01:58:35;"dbo";"CREATE_TABLE";"Sales";"SalesOrderHeaderSalesReason";"CREATE TABLE [Sales].[SalesOrderHeaderSalesReason](
    [SalesOrderID] [int] NOT NULL,
    [SalesReasonID] [int] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesOrderHeaderSalesReason_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:35.617</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesOrderHeaderSalesReason</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[SalesOrderHeaderSalesReason](&#x0D;
    [SalesOrderID] [int] NOT NULL,&#x0D;
    [SalesReasonID] [int] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesOrderHeaderSalesReason_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
71;14/10/2005 01:58:35;"dbo";"CREATE_TABLE";"Sales";"SalesPerson";"CREATE TABLE [Sales].[SalesPerson](
    [SalesPersonID] [int] NOT NULL,
    [TerritoryID] [int] NULL,
    [SalesQuota] [money] NULL,
    [Bonus] [money] NOT NULL CONSTRAINT [DF_SalesPerson_Bonus] DEFAULT (0.00),
    [CommissionPct] [smallmoney] NOT NULL CONSTRAINT [DF_SalesPerson_CommissionPct] DEFAULT (0.00),
    [SalesYTD] [money] NOT NULL CONSTRAINT [DF_SalesPerson_SalesYTD] DEFAULT (0.00),
    [SalesLastYear] [money] NOT NULL CONSTRAINT [DF_SalesPerson_SalesLastYear] DEFAULT (0.00),
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SalesPerson_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesPerson_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_SalesPerson_SalesQuota] CHECK ([SalesQuota] > 0.00), 
    CONSTRAINT [CK_SalesPerson_Bonus] CHECK ([Bonus] >= 0.00), 
    CONSTRAINT [CK_SalesPerson_CommissionPct] CHECK ([CommissionPct] >= 0.00), 
    CONSTRAINT [CK_SalesPerson_SalesYTD] CHECK ([SalesYTD] >= 0.00), 
    CONSTRAINT [CK_SalesPerson_SalesLastYear] CHECK ([SalesLastYear] >= 0.00) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:35.727</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesPerson</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[SalesPerson](&#x0D;
    [SalesPersonID] [int] NOT NULL,&#x0D;
    [TerritoryID] [int] NULL,&#x0D;
    [SalesQuota] [money] NULL,&#x0D;
    [Bonus] [money] NOT NULL CONSTRAINT [DF_SalesPerson_Bonus] DEFAULT (0.00),&#x0D;
    [CommissionPct] [smallmoney] NOT NULL CONSTRAINT [DF_SalesPerson_CommissionPct] DEFAULT (0.00),&#x0D;
    [SalesYTD] [money] NOT NULL CONSTRAINT [DF_SalesPerson_SalesYTD] DEFAULT (0.00),&#x0D;
    [SalesLastYear] [money] NOT NULL CONSTRAINT [DF_SalesPerson_SalesLastYear] DEFAULT (0.00),&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SalesPerson_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesPerson_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_SalesPerson_SalesQuota] CHECK ([SalesQuota] &gt; 0.00), &#x0D;
    CONSTRAINT [CK_SalesPerson_Bonus] CHECK ([Bonus] &gt;= 0.00), &#x0D;
    CONSTRAINT [CK_SalesPerson_CommissionPct] CHECK ([CommissionPct] &gt;= 0.00), &#x0D;
    CONSTRAINT [CK_SalesPerson_SalesYTD] CHECK ([SalesYTD] &gt;= 0.00), &#x0D;
    CONSTRAINT [CK_SalesPerson_SalesLastYear] CHECK ([SalesLastYear] &gt;= 0.00) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
72;14/10/2005 01:58:35;"dbo";"CREATE_TABLE";"Sales";"SalesPersonQuotaHistory";"CREATE TABLE [Sales].[SalesPersonQuotaHistory](
    [SalesPersonID] [int] NOT NULL,
    [QuotaDate] [datetime] NOT NULL,
    [SalesQuota] [money] NOT NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SalesPersonQuotaHistory_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesPersonQuotaHistory_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_SalesPersonQuotaHistory_SalesQuota] CHECK ([SalesQuota] > 0.00) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:35.837</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesPersonQuotaHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[SalesPersonQuotaHistory](&#x0D;
    [SalesPersonID] [int] NOT NULL,&#x0D;
    [QuotaDate] [datetime] NOT NULL,&#x0D;
    [SalesQuota] [money] NOT NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SalesPersonQuotaHistory_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesPersonQuotaHistory_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_SalesPersonQuotaHistory_SalesQuota] CHECK ([SalesQuota] &gt; 0.00) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
73;14/10/2005 01:58:35;"dbo";"CREATE_TABLE";"Sales";"SalesReason";"CREATE TABLE [Sales].[SalesReason](
    [SalesReasonID] [int] IDENTITY (1, 1) NOT NULL,
    [Name] [Name] NOT NULL,
    [ReasonType] [Name] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesReason_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:35.943</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesReason</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[SalesReason](&#x0D;
    [SalesReasonID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [Name] [Name] NOT NULL,&#x0D;
    [ReasonType] [Name] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesReason_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
74;14/10/2005 01:58:36;"dbo";"CREATE_TABLE";"Sales";"SalesTaxRate";"CREATE TABLE [Sales].[SalesTaxRate](
    [SalesTaxRateID] [int] IDENTITY (1, 1) NOT NULL,
    [StateProvinceID] [int] NOT NULL,
    [TaxType] [tinyint] NOT NULL,
    [TaxRate] [smallmoney] NOT NULL CONSTRAINT [DF_SalesTaxRate_TaxRate] DEFAULT (0.00),
    [Name] [Name] NOT NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SalesTaxRate_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesTaxRate_ModifiedDate] DEFAULT (GETDATE()),
    CONSTRAINT [CK_SalesTaxRate_TaxType] CHECK ([TaxType] BETWEEN 1 AND 3)
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:36.053</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesTaxRate</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[SalesTaxRate](&#x0D;
    [SalesTaxRateID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [StateProvinceID] [int] NOT NULL,&#x0D;
    [TaxType] [tinyint] NOT NULL,&#x0D;
    [TaxRate] [smallmoney] NOT NULL CONSTRAINT [DF_SalesTaxRate_TaxRate] DEFAULT (0.00),&#x0D;
    [Name] [Name] NOT NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SalesTaxRate_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesTaxRate_ModifiedDate] DEFAULT (GETDATE()),&#x0D;
    CONSTRAINT [CK_SalesTaxRate_TaxType] CHECK ([TaxType] BETWEEN 1 AND 3)&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
75;14/10/2005 01:58:36;"dbo";"CREATE_TABLE";"Sales";"SalesTerritory";"CREATE TABLE [Sales].[SalesTerritory](
    [TerritoryID] [int] IDENTITY (1, 1) NOT NULL,
    [Name] [Name] NOT NULL,
    [CountryRegionCode] [nvarchar](3) NOT NULL, 
    [Group] [nvarchar](50) NOT NULL,
    [SalesYTD] [money] NOT NULL CONSTRAINT [DF_SalesTerritory_SalesYTD] DEFAULT (0.00),
    [SalesLastYear] [money] NOT NULL CONSTRAINT [DF_SalesTerritory_SalesLastYear] DEFAULT (0.00),
    [CostYTD] [money] NOT NULL CONSTRAINT [DF_SalesTerritory_CostYTD] DEFAULT (0.00),
    [CostLastYear] [money] NOT NULL CONSTRAINT [DF_SalesTerritory_CostLastYear] DEFAULT (0.00),
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SalesTerritory_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesTerritory_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_SalesTerritory_SalesYTD] CHECK ([SalesYTD] >= 0.00), 
    CONSTRAINT [CK_SalesTerritory_SalesLastYear] CHECK ([SalesLastYear] >= 0.00), 
    CONSTRAINT [CK_SalesTerritory_CostYTD] CHECK ([CostYTD] >= 0.00), 
    CONSTRAINT [CK_SalesTerritory_CostLastYear] CHECK ([CostLastYear] >= 0.00) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:36.163</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesTerritory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[SalesTerritory](&#x0D;
    [TerritoryID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [Name] [Name] NOT NULL,&#x0D;
    [CountryRegionCode] [nvarchar](3) NOT NULL, &#x0D;
    [Group] [nvarchar](50) NOT NULL,&#x0D;
    [SalesYTD] [money] NOT NULL CONSTRAINT [DF_SalesTerritory_SalesYTD] DEFAULT (0.00),&#x0D;
    [SalesLastYear] [money] NOT NULL CONSTRAINT [DF_SalesTerritory_SalesLastYear] DEFAULT (0.00),&#x0D;
    [CostYTD] [money] NOT NULL CONSTRAINT [DF_SalesTerritory_CostYTD] DEFAULT (0.00),&#x0D;
    [CostLastYear] [money] NOT NULL CONSTRAINT [DF_SalesTerritory_CostLastYear] DEFAULT (0.00),&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SalesTerritory_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesTerritory_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_SalesTerritory_SalesYTD] CHECK ([SalesYTD] &gt;= 0.00), &#x0D;
    CONSTRAINT [CK_SalesTerritory_SalesLastYear] CHECK ([SalesLastYear] &gt;= 0.00), &#x0D;
    CONSTRAINT [CK_SalesTerritory_CostYTD] CHECK ([CostYTD] &gt;= 0.00), &#x0D;
    CONSTRAINT [CK_SalesTerritory_CostLastYear] CHECK ([CostLastYear] &gt;= 0.00) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
76;14/10/2005 01:58:36;"dbo";"CREATE_TABLE";"Sales";"SalesTerritoryHistory";"CREATE TABLE [Sales].[SalesTerritoryHistory](
    [SalesPersonID] [int] NOT NULL,
    [TerritoryID] [int] NOT NULL,
    [StartDate] [datetime] NOT NULL,
    [EndDate] [datetime] NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SalesTerritoryHistory_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesTerritoryHistory_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_SalesTerritoryHistory_EndDate] CHECK (([EndDate] >= [StartDate]) OR ([EndDate] IS NULL))
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:36.273</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesTerritoryHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[SalesTerritoryHistory](&#x0D;
    [SalesPersonID] [int] NOT NULL,&#x0D;
    [TerritoryID] [int] NOT NULL,&#x0D;
    [StartDate] [datetime] NOT NULL,&#x0D;
    [EndDate] [datetime] NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SalesTerritoryHistory_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SalesTerritoryHistory_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_SalesTerritoryHistory_EndDate] CHECK (([EndDate] &gt;= [StartDate]) OR ([EndDate] IS NULL))&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
77;14/10/2005 01:58:36;"dbo";"CREATE_TABLE";"Production";"ScrapReason";"CREATE TABLE [Production].[ScrapReason](
    [ScrapReasonID] [smallint] IDENTITY (1, 1) NOT NULL,
    [Name] [Name] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ScrapReason_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:36.383</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ScrapReason</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[ScrapReason](&#x0D;
    [ScrapReasonID] [smallint] IDENTITY (1, 1) NOT NULL,&#x0D;
    [Name] [Name] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ScrapReason_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
78;14/10/2005 01:58:36;"dbo";"CREATE_TABLE";"HumanResources";"Shift";"CREATE TABLE [HumanResources].[Shift](
    [ShiftID] [tinyint] IDENTITY (1, 1) NOT NULL,
    [Name] [Name] NOT NULL,
    [StartTime] [datetime] NOT NULL,
    [EndTime] [datetime] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Shift_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:36.490</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>Shift</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [HumanResources].[Shift](&#x0D;
    [ShiftID] [tinyint] IDENTITY (1, 1) NOT NULL,&#x0D;
    [Name] [Name] NOT NULL,&#x0D;
    [StartTime] [datetime] NOT NULL,&#x0D;
    [EndTime] [datetime] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Shift_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
79;14/10/2005 01:58:36;"dbo";"CREATE_TABLE";"Purchasing";"ShipMethod";"CREATE TABLE [Purchasing].[ShipMethod](
    [ShipMethodID] [int] IDENTITY (1, 1) NOT NULL,
    [Name] [Name] NOT NULL,
    [ShipBase] [money] NOT NULL CONSTRAINT [DF_ShipMethod_ShipBase] DEFAULT (0.00),
    [ShipRate] [money] NOT NULL CONSTRAINT [DF_ShipMethod_ShipRate] DEFAULT (0.00),
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_ShipMethod_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ShipMethod_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_ShipMethod_ShipBase] CHECK ([ShipBase] > 0.00), 
    CONSTRAINT [CK_ShipMethod_ShipRate] CHECK ([ShipRate] > 0.00), 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:36.600</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>ShipMethod</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Purchasing].[ShipMethod](&#x0D;
    [ShipMethodID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [Name] [Name] NOT NULL,&#x0D;
    [ShipBase] [money] NOT NULL CONSTRAINT [DF_ShipMethod_ShipBase] DEFAULT (0.00),&#x0D;
    [ShipRate] [money] NOT NULL CONSTRAINT [DF_ShipMethod_ShipRate] DEFAULT (0.00),&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_ShipMethod_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ShipMethod_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_ShipMethod_ShipBase] CHECK ([ShipBase] &gt; 0.00), &#x0D;
    CONSTRAINT [CK_ShipMethod_ShipRate] CHECK ([ShipRate] &gt; 0.00), &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
80;14/10/2005 01:58:36;"dbo";"CREATE_TABLE";"Sales";"ShoppingCartItem";"CREATE TABLE [Sales].[ShoppingCartItem](
    [ShoppingCartItemID] [int] IDENTITY (1, 1) NOT NULL,
    [ShoppingCartID] [nvarchar](50) NOT NULL,
    [Quantity] [int] NOT NULL CONSTRAINT [DF_ShoppingCartItem_Quantity] DEFAULT (1),
    [ProductID] [int] NOT NULL,
    [DateCreated] [datetime] NOT NULL CONSTRAINT [DF_ShoppingCartItem_DateCreated] DEFAULT (GETDATE()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ShoppingCartItem_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_ShoppingCartItem_Quantity] CHECK ([Quantity] >= 1) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:36.710</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>ShoppingCartItem</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[ShoppingCartItem](&#x0D;
    [ShoppingCartItemID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [ShoppingCartID] [nvarchar](50) NOT NULL,&#x0D;
    [Quantity] [int] NOT NULL CONSTRAINT [DF_ShoppingCartItem_Quantity] DEFAULT (1),&#x0D;
    [ProductID] [int] NOT NULL,&#x0D;
    [DateCreated] [datetime] NOT NULL CONSTRAINT [DF_ShoppingCartItem_DateCreated] DEFAULT (GETDATE()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ShoppingCartItem_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_ShoppingCartItem_Quantity] CHECK ([Quantity] &gt;= 1) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
81;14/10/2005 01:58:36;"dbo";"CREATE_TABLE";"Sales";"SpecialOffer";"CREATE TABLE [Sales].[SpecialOffer](
    [SpecialOfferID] [int] IDENTITY (1, 1) NOT NULL,
    [Description] [nvarchar](255) NOT NULL,
    [DiscountPct] [smallmoney] NOT NULL CONSTRAINT [DF_SpecialOffer_DiscountPct] DEFAULT (0.00),
    [Type] [nvarchar](50) NOT NULL,
    [Category] [nvarchar](50) NOT NULL,
    [StartDate] [datetime] NOT NULL,
    [EndDate] [datetime] NOT NULL,
    [MinQty] [int] NOT NULL CONSTRAINT [DF_SpecialOffer_MinQty] DEFAULT (0), 
    [MaxQty] [int] NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SpecialOffer_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SpecialOffer_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_SpecialOffer_EndDate] CHECK ([EndDate] >= [StartDate]), 
    CONSTRAINT [CK_SpecialOffer_DiscountPct] CHECK ([DiscountPct] >= 0.00), 
    CONSTRAINT [CK_SpecialOffer_MinQty] CHECK ([MinQty] >= 0), 
    CONSTRAINT [CK_SpecialOffer_MaxQty]  CHECK ([MaxQty] >= 0)
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:36.820</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SpecialOffer</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[SpecialOffer](&#x0D;
    [SpecialOfferID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [Description] [nvarchar](255) NOT NULL,&#x0D;
    [DiscountPct] [smallmoney] NOT NULL CONSTRAINT [DF_SpecialOffer_DiscountPct] DEFAULT (0.00),&#x0D;
    [Type] [nvarchar](50) NOT NULL,&#x0D;
    [Category] [nvarchar](50) NOT NULL,&#x0D;
    [StartDate] [datetime] NOT NULL,&#x0D;
    [EndDate] [datetime] NOT NULL,&#x0D;
    [MinQty] [int] NOT NULL CONSTRAINT [DF_SpecialOffer_MinQty] DEFAULT (0), &#x0D;
    [MaxQty] [int] NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SpecialOffer_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SpecialOffer_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_SpecialOffer_EndDate] CHECK ([EndDate] &gt;= [StartDate]), &#x0D;
    CONSTRAINT [CK_SpecialOffer_DiscountPct] CHECK ([DiscountPct] &gt;= 0.00), &#x0D;
    CONSTRAINT [CK_SpecialOffer_MinQty] CHECK ([MinQty] &gt;= 0), &#x0D;
    CONSTRAINT [CK_SpecialOffer_MaxQty]  CHECK ([MaxQty] &gt;= 0)&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
82;14/10/2005 01:58:36;"dbo";"CREATE_TABLE";"Sales";"SpecialOfferProduct";"CREATE TABLE [Sales].[SpecialOfferProduct](
    [SpecialOfferID] [int] NOT NULL,
    [ProductID] [int] NOT NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SpecialOfferProduct_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SpecialOfferProduct_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:36.930</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SpecialOfferProduct</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[SpecialOfferProduct](&#x0D;
    [SpecialOfferID] [int] NOT NULL,&#x0D;
    [ProductID] [int] NOT NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_SpecialOfferProduct_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_SpecialOfferProduct_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
83;14/10/2005 01:58:37;"dbo";"CREATE_TABLE";"Person";"StateProvince";"CREATE TABLE [Person].[StateProvince](
    [StateProvinceID] [int] IDENTITY (1, 1) NOT NULL,
    [StateProvinceCode] [nchar](3) NOT NULL, 
    [CountryRegionCode] [nvarchar](3) NOT NULL, 
    [IsOnlyStateProvinceFlag] [Flag] NOT NULL CONSTRAINT [DF_StateProvince_IsOnlyStateProvinceFlag] DEFAULT (1),
    [Name] [Name] NOT NULL,
    [TerritoryID] [int] NOT NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_StateProvince_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_StateProvince_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:37.037</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>StateProvince</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Person].[StateProvince](&#x0D;
    [StateProvinceID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [StateProvinceCode] [nchar](3) NOT NULL, &#x0D;
    [CountryRegionCode] [nvarchar](3) NOT NULL, &#x0D;
    [IsOnlyStateProvinceFlag] [Flag] NOT NULL CONSTRAINT [DF_StateProvince_IsOnlyStateProvinceFlag] DEFAULT (1),&#x0D;
    [Name] [Name] NOT NULL,&#x0D;
    [TerritoryID] [int] NOT NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_StateProvince_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_StateProvince_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
84;14/10/2005 01:58:37;"dbo";"CREATE_TABLE";"Sales";"Store";"CREATE TABLE [Sales].[Store](
    [CustomerID] [int] NOT NULL,
    [Name] [Name] NOT NULL,
    [SalesPersonID] [int] NULL,
    [Demographics] [XML]([Sales].[StoreSurveySchemaCollection]) NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_Store_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Store_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:37.147</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>Store</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[Store](&#x0D;
    [CustomerID] [int] NOT NULL,&#x0D;
    [Name] [Name] NOT NULL,&#x0D;
    [SalesPersonID] [int] NULL,&#x0D;
    [Demographics] [XML]([Sales].[StoreSurveySchemaCollection]) NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_Store_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Store_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
85;14/10/2005 01:58:37;"dbo";"CREATE_TABLE";"Sales";"StoreContact";"CREATE TABLE [Sales].[StoreContact](
    [CustomerID] [int] NOT NULL,
    [ContactID] [int] NOT NULL,
    [ContactTypeID] [int] NOT NULL,
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_StoreContact_rowguid] DEFAULT (NEWID()), 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_StoreContact_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:37.257</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>StoreContact</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Sales].[StoreContact](&#x0D;
    [CustomerID] [int] NOT NULL,&#x0D;
    [ContactID] [int] NOT NULL,&#x0D;
    [ContactTypeID] [int] NOT NULL,&#x0D;
    [rowguid] uniqueidentifier ROWGUIDCOL NOT NULL CONSTRAINT [DF_StoreContact_rowguid] DEFAULT (NEWID()), &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_StoreContact_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
86;14/10/2005 01:58:37;"dbo";"CREATE_TABLE";"Production";"TransactionHistory";"CREATE TABLE [Production].[TransactionHistory](
    [TransactionID] [int] IDENTITY (100000, 1) NOT NULL,
    [ProductID] [int] NOT NULL,
    [ReferenceOrderID] [int] NOT NULL,
    [ReferenceOrderLineID] [int] NOT NULL CONSTRAINT [DF_TransactionHistory_ReferenceOrderLineID] DEFAULT (0),
    [TransactionDate] [datetime] NOT NULL CONSTRAINT [DF_TransactionHistory_TransactionDate] DEFAULT (GETDATE()),
    [TransactionType] [nchar](1) NOT NULL, 
    [Quantity] [int] NOT NULL,
    [ActualCost] [money] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_TransactionHistory_ModifiedDate] DEFAULT (GETDATE()),
    CONSTRAINT [CK_TransactionHistory_TransactionType] CHECK (UPPER([TransactionType]) IN ('W', 'S', 'P'))
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:37.367</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>TransactionHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[TransactionHistory](&#x0D;
    [TransactionID] [int] IDENTITY (100000, 1) NOT NULL,&#x0D;
    [ProductID] [int] NOT NULL,&#x0D;
    [ReferenceOrderID] [int] NOT NULL,&#x0D;
    [ReferenceOrderLineID] [int] NOT NULL CONSTRAINT [DF_TransactionHistory_ReferenceOrderLineID] DEFAULT (0),&#x0D;
    [TransactionDate] [datetime] NOT NULL CONSTRAINT [DF_TransactionHistory_TransactionDate] DEFAULT (GETDATE()),&#x0D;
    [TransactionType] [nchar](1) NOT NULL, &#x0D;
    [Quantity] [int] NOT NULL,&#x0D;
    [ActualCost] [money] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_TransactionHistory_ModifiedDate] DEFAULT (GETDATE()),&#x0D;
    CONSTRAINT [CK_TransactionHistory_TransactionType] CHECK (UPPER([TransactionType]) IN ('W', 'S', 'P'))&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
87;14/10/2005 01:58:37;"dbo";"CREATE_TABLE";"Production";"TransactionHistoryArchive";"CREATE TABLE [Production].[TransactionHistoryArchive](
    [TransactionID] [int] NOT NULL,
    [ProductID] [int] NOT NULL,
    [ReferenceOrderID] [int] NOT NULL,
    [ReferenceOrderLineID] [int] NOT NULL CONSTRAINT [DF_TransactionHistoryArchive_ReferenceOrderLineID] DEFAULT (0),
    [TransactionDate] [datetime] NOT NULL CONSTRAINT [DF_TransactionHistoryArchive_TransactionDate] DEFAULT (GETDATE()),
    [TransactionType] [nchar](1) NOT NULL, 
    [Quantity] [int] NOT NULL,
    [ActualCost] [money] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_TransactionHistoryArchive_ModifiedDate] DEFAULT (GETDATE()),
    CONSTRAINT [CK_TransactionHistoryArchive_TransactionType] CHECK (UPPER([TransactionType]) IN ('W', 'S', 'P'))
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:37.477</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>TransactionHistoryArchive</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[TransactionHistoryArchive](&#x0D;
    [TransactionID] [int] NOT NULL,&#x0D;
    [ProductID] [int] NOT NULL,&#x0D;
    [ReferenceOrderID] [int] NOT NULL,&#x0D;
    [ReferenceOrderLineID] [int] NOT NULL CONSTRAINT [DF_TransactionHistoryArchive_ReferenceOrderLineID] DEFAULT (0),&#x0D;
    [TransactionDate] [datetime] NOT NULL CONSTRAINT [DF_TransactionHistoryArchive_TransactionDate] DEFAULT (GETDATE()),&#x0D;
    [TransactionType] [nchar](1) NOT NULL, &#x0D;
    [Quantity] [int] NOT NULL,&#x0D;
    [ActualCost] [money] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_TransactionHistoryArchive_ModifiedDate] DEFAULT (GETDATE()),&#x0D;
    CONSTRAINT [CK_TransactionHistoryArchive_TransactionType] CHECK (UPPER([TransactionType]) IN ('W', 'S', 'P'))&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
88;14/10/2005 01:58:37;"dbo";"CREATE_TABLE";"Production";"UnitMeasure";"CREATE TABLE [Production].[UnitMeasure](
    [UnitMeasureCode] [nchar](3) NOT NULL, 
    [Name] [Name] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_UnitMeasure_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:37.587</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>UnitMeasure</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[UnitMeasure](&#x0D;
    [UnitMeasureCode] [nchar](3) NOT NULL, &#x0D;
    [Name] [Name] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_UnitMeasure_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
89;14/10/2005 01:58:37;"dbo";"CREATE_TABLE";"Purchasing";"Vendor";"CREATE TABLE [Purchasing].[Vendor](
    [VendorID] [int] IDENTITY (1, 1) NOT NULL,
    [AccountNumber] [AccountNumber] NOT NULL,
    [Name] [Name] NOT NULL,
    [CreditRating] [tinyint] NOT NULL,
    [PreferredVendorStatus] [Flag] NOT NULL CONSTRAINT [DF_Vendor_PreferredVendorStatus] DEFAULT (1), 
    [ActiveFlag] [Flag] NOT NULL CONSTRAINT [DF_Vendor_ActiveFlag] DEFAULT (1),
    [PurchasingWebServiceURL] [nvarchar](1024) NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Vendor_ModifiedDate] DEFAULT (GETDATE()),
    CONSTRAINT [CK_Vendor_CreditRating] CHECK ([CreditRating] BETWEEN 1 AND 5)
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:37.693</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>Vendor</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Purchasing].[Vendor](&#x0D;
    [VendorID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [AccountNumber] [AccountNumber] NOT NULL,&#x0D;
    [Name] [Name] NOT NULL,&#x0D;
    [CreditRating] [tinyint] NOT NULL,&#x0D;
    [PreferredVendorStatus] [Flag] NOT NULL CONSTRAINT [DF_Vendor_PreferredVendorStatus] DEFAULT (1), &#x0D;
    [ActiveFlag] [Flag] NOT NULL CONSTRAINT [DF_Vendor_ActiveFlag] DEFAULT (1),&#x0D;
    [PurchasingWebServiceURL] [nvarchar](1024) NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_Vendor_ModifiedDate] DEFAULT (GETDATE()),&#x0D;
    CONSTRAINT [CK_Vendor_CreditRating] CHECK ([CreditRating] BETWEEN 1 AND 5)&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
90;14/10/2005 01:58:37;"dbo";"CREATE_TABLE";"Purchasing";"VendorAddress";"CREATE TABLE [Purchasing].[VendorAddress](
    [VendorID] [int] NOT NULL,
    [AddressID] [int] NOT NULL,
    [AddressTypeID] [int] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_VendorAddress_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:37.803</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>VendorAddress</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Purchasing].[VendorAddress](&#x0D;
    [VendorID] [int] NOT NULL,&#x0D;
    [AddressID] [int] NOT NULL,&#x0D;
    [AddressTypeID] [int] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_VendorAddress_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
91;14/10/2005 01:58:37;"dbo";"CREATE_TABLE";"Purchasing";"VendorContact";"CREATE TABLE [Purchasing].[VendorContact](
    [VendorID] [int] NOT NULL,
    [ContactID] [int] NOT NULL,
    [ContactTypeID] [int] NOT NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_VendorContact_ModifiedDate] DEFAULT (GETDATE()) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:37.913</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>VendorContact</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Purchasing].[VendorContact](&#x0D;
    [VendorID] [int] NOT NULL,&#x0D;
    [ContactID] [int] NOT NULL,&#x0D;
    [ContactTypeID] [int] NOT NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_VendorContact_ModifiedDate] DEFAULT (GETDATE()) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
92;14/10/2005 01:58:38;"dbo";"CREATE_TABLE";"Production";"WorkOrder";"CREATE TABLE [Production].[WorkOrder](
    [WorkOrderID] [int] IDENTITY (1, 1) NOT NULL,
    [ProductID] [int] NOT NULL,
    [OrderQty] [int] NOT NULL,
    [StockedQty] AS ISNULL([OrderQty] - [ScrappedQty], 0),
    [ScrappedQty] [smallint] NOT NULL,
    [StartDate] [datetime] NOT NULL,
    [EndDate] [datetime] NULL,
    [DueDate] [datetime] NOT NULL,
    [ScrapReasonID] [smallint] NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_WorkOrder_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_WorkOrder_OrderQty] CHECK ([OrderQty] > 0), 
    CONSTRAINT [CK_WorkOrder_ScrappedQty] CHECK ([ScrappedQty] >= 0), 
    CONSTRAINT [CK_WorkOrder_EndDate] CHECK (([EndDate] >= [StartDate]) OR ([EndDate] IS NULL))
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:38.023</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>WorkOrder</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[WorkOrder](&#x0D;
    [WorkOrderID] [int] IDENTITY (1, 1) NOT NULL,&#x0D;
    [ProductID] [int] NOT NULL,&#x0D;
    [OrderQty] [int] NOT NULL,&#x0D;
    [StockedQty] AS ISNULL([OrderQty] - [ScrappedQty], 0),&#x0D;
    [ScrappedQty] [smallint] NOT NULL,&#x0D;
    [StartDate] [datetime] NOT NULL,&#x0D;
    [EndDate] [datetime] NULL,&#x0D;
    [DueDate] [datetime] NOT NULL,&#x0D;
    [ScrapReasonID] [smallint] NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_WorkOrder_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_WorkOrder_OrderQty] CHECK ([OrderQty] &gt; 0), &#x0D;
    CONSTRAINT [CK_WorkOrder_ScrappedQty] CHECK ([ScrappedQty] &gt;= 0), &#x0D;
    CONSTRAINT [CK_WorkOrder_EndDate] CHECK (([EndDate] &gt;= [StartDate]) OR ([EndDate] IS NULL))&#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
93;14/10/2005 01:58:38;"dbo";"CREATE_TABLE";"Production";"WorkOrderRouting";"CREATE TABLE [Production].[WorkOrderRouting](
    [WorkOrderID] [int] NOT NULL,
    [ProductID] [int] NOT NULL,
    [OperationSequence] [smallint] NOT NULL,
    [LocationID] [smallint] NOT NULL,
    [ScheduledStartDate] [datetime] NOT NULL,
    [ScheduledEndDate] [datetime] NOT NULL,
    [ActualStartDate] [datetime] NULL,
    [ActualEndDate] [datetime] NULL,
    [ActualResourceHrs] [decimal](9, 4) NULL,
    [PlannedCost] [money] NOT NULL,
    [ActualCost] [money] NULL, 
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_WorkOrderRouting_ModifiedDate] DEFAULT (GETDATE()), 
    CONSTRAINT [CK_WorkOrderRouting_ScheduledEndDate] CHECK ([ScheduledEndDate] >= [ScheduledStartDate]), 
    CONSTRAINT [CK_WorkOrderRouting_ActualEndDate] CHECK (([ActualEndDate] >= [ActualStartDate]) 
        OR ([ActualEndDate] IS NULL) OR ([ActualStartDate] IS NULL)), 
    CONSTRAINT [CK_WorkOrderRouting_ActualResourceHrs] CHECK ([ActualResourceHrs] >= 0.0000), 
    CONSTRAINT [CK_WorkOrderRouting_PlannedCost] CHECK ([PlannedCost] > 0.00), 
    CONSTRAINT [CK_WorkOrderRouting_ActualCost] CHECK ([ActualCost] > 0.00) 
) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_TABLE</EventType><PostTime>2005-10-14T01:58:38.133</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>WorkOrderRouting</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE TABLE [Production].[WorkOrderRouting](&#x0D;
    [WorkOrderID] [int] NOT NULL,&#x0D;
    [ProductID] [int] NOT NULL,&#x0D;
    [OperationSequence] [smallint] NOT NULL,&#x0D;
    [LocationID] [smallint] NOT NULL,&#x0D;
    [ScheduledStartDate] [datetime] NOT NULL,&#x0D;
    [ScheduledEndDate] [datetime] NOT NULL,&#x0D;
    [ActualStartDate] [datetime] NULL,&#x0D;
    [ActualEndDate] [datetime] NULL,&#x0D;
    [ActualResourceHrs] [decimal](9, 4) NULL,&#x0D;
    [PlannedCost] [money] NOT NULL,&#x0D;
    [ActualCost] [money] NULL, &#x0D;
    [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_WorkOrderRouting_ModifiedDate] DEFAULT (GETDATE()), &#x0D;
    CONSTRAINT [CK_WorkOrderRouting_ScheduledEndDate] CHECK ([ScheduledEndDate] &gt;= [ScheduledStartDate]), &#x0D;
    CONSTRAINT [CK_WorkOrderRouting_ActualEndDate] CHECK (([ActualEndDate] &gt;= [ActualStartDate]) &#x0D;
        OR ([ActualEndDate] IS NULL) OR ([ActualStartDate] IS NULL)), &#x0D;
    CONSTRAINT [CK_WorkOrderRouting_ActualResourceHrs] CHECK ([ActualResourceHrs] &gt;= 0.0000), &#x0D;
    CONSTRAINT [CK_WorkOrderRouting_PlannedCost] CHECK ([PlannedCost] &gt; 0.00), &#x0D;
    CONSTRAINT [CK_WorkOrderRouting_ActualCost] CHECK ([ActualCost] &gt; 0.00) &#x0D;
) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
94;14/10/2005 01:59:05;"dbo";"ALTER_TABLE";"Person";"Address";"ALTER TABLE [Person].[Address] WITH CHECK ADD 
    CONSTRAINT [PK_Address_AddressID] PRIMARY KEY CLUSTERED 
    (
        [AddressID]
    )  ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:05.773</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>Address</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Person].[Address] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_Address_AddressID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [AddressID]&#x0D;
    )  ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
95;14/10/2005 01:59:05;"dbo";"ALTER_TABLE";"Person";"AddressType";"ALTER TABLE [Person].[AddressType] WITH CHECK ADD 
    CONSTRAINT [PK_AddressType_AddressTypeID] PRIMARY KEY CLUSTERED 
    (
        [AddressTypeID]
    )  ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:05.820</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>AddressType</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Person].[AddressType] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_AddressType_AddressTypeID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [AddressTypeID]&#x0D;
    )  ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
96;14/10/2005 01:59:05;"dbo";"ALTER_TABLE";"dbo";"AWBuildVersion";"ALTER TABLE [dbo].[AWBuildVersion] WITH CHECK ADD 
    CONSTRAINT [PK_AWBuildVersion_SystemInformationID] PRIMARY KEY CLUSTERED 
    (
        [SystemInformationID]
    )  ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:05.930</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>AWBuildVersion</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [dbo].[AWBuildVersion] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_AWBuildVersion_SystemInformationID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [SystemInformationID]&#x0D;
    )  ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
97;14/10/2005 01:59:06;"dbo";"ALTER_TABLE";"Production";"BillOfMaterials";"ALTER TABLE [Production].[BillOfMaterials] WITH CHECK ADD 
    CONSTRAINT [PK_BillOfMaterials_BillOfMaterialsID] PRIMARY KEY NONCLUSTERED
    (
        [BillOfMaterialsID]
    )  ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:06.037</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>BillOfMaterials</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[BillOfMaterials] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_BillOfMaterials_BillOfMaterialsID] PRIMARY KEY NONCLUSTERED&#x0D;
    (&#x0D;
        [BillOfMaterialsID]&#x0D;
    )  ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
98;14/10/2005 01:59:06;"dbo";"ALTER_TABLE";"Person";"Contact";"ALTER TABLE [Person].[Contact] WITH CHECK ADD 
    CONSTRAINT [PK_Contact_ContactID] PRIMARY KEY CLUSTERED 
    (
        [ContactID]
    )  ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:06.367</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>Contact</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Person].[Contact] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_Contact_ContactID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ContactID]&#x0D;
    )  ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
99;14/10/2005 01:59:06;"dbo";"ALTER_TABLE";"Sales";"ContactCreditCard";"ALTER TABLE [Sales].[ContactCreditCard] WITH CHECK ADD 
    CONSTRAINT [PK_ContactCreditCard_ContactID_CreditCardID] PRIMARY KEY CLUSTERED 
    (
        [ContactID],
        [CreditCardID]
    )  ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:06.507</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>ContactCreditCard</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[ContactCreditCard] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ContactCreditCard_ContactID_CreditCardID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ContactID],&#x0D;
        [CreditCardID]&#x0D;
    )  ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
100;14/10/2005 01:59:06;"dbo";"ALTER_TABLE";"Person";"ContactType";"ALTER TABLE [Person].[ContactType] WITH CHECK ADD 
    CONSTRAINT [PK_ContactType_ContactTypeID] PRIMARY KEY CLUSTERED 
    (
        [ContactTypeID]
    )  ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:06.587</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>ContactType</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Person].[ContactType] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ContactType_ContactTypeID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ContactTypeID]&#x0D;
    )  ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
101;14/10/2005 01:59:06;"dbo";"ALTER_TABLE";"Sales";"CountryRegionCurrency";"ALTER TABLE [Sales].[CountryRegionCurrency] WITH CHECK ADD 
    CONSTRAINT [PK_CountryRegionCurrency_CountryRegionCode_CurrencyCode] PRIMARY KEY CLUSTERED 
    (
        [CountryRegionCode],
        [CurrencyCode]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:06.693</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>CountryRegionCurrency</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[CountryRegionCurrency] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_CountryRegionCurrency_CountryRegionCode_CurrencyCode] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [CountryRegionCode],&#x0D;
        [CurrencyCode]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
102;14/10/2005 01:59:06;"dbo";"ALTER_TABLE";"Person";"CountryRegion";"ALTER TABLE [Person].[CountryRegion] WITH CHECK ADD 
    CONSTRAINT [PK_CountryRegion_CountryRegionCode] PRIMARY KEY CLUSTERED 
    (
        [CountryRegionCode]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:06.803</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>CountryRegion</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Person].[CountryRegion] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_CountryRegion_CountryRegionCode] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [CountryRegionCode]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
103;14/10/2005 01:59:06;"dbo";"ALTER_TABLE";"Sales";"CreditCard";"ALTER TABLE [Sales].[CreditCard] WITH CHECK ADD 
    CONSTRAINT [PK_CreditCard_CreditCardID] PRIMARY KEY CLUSTERED 
    (
        [CreditCardID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:06.960</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>CreditCard</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[CreditCard] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_CreditCard_CreditCardID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [CreditCardID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
104;14/10/2005 01:59:07;"dbo";"ALTER_TABLE";"Production";"Culture";"ALTER TABLE [Production].[Culture] WITH CHECK ADD 
    CONSTRAINT [PK_Culture_CultureID] PRIMARY KEY CLUSTERED 
    (
        [CultureID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:07.023</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>Culture</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[Culture] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_Culture_CultureID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [CultureID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
105;14/10/2005 01:59:07;"dbo";"ALTER_TABLE";"Sales";"Currency";"ALTER TABLE [Sales].[Currency] WITH CHECK ADD 
    CONSTRAINT [PK_Currency_CurrencyCode] PRIMARY KEY CLUSTERED 
    (
        [CurrencyCode]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:07.133</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>Currency</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[Currency] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_Currency_CurrencyCode] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [CurrencyCode]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
106;14/10/2005 01:59:07;"dbo";"ALTER_TABLE";"Sales";"CurrencyRate";"ALTER TABLE [Sales].[CurrencyRate] WITH CHECK ADD 
    CONSTRAINT [PK_CurrencyRate_CurrencyRateID] PRIMARY KEY CLUSTERED 
    (
        [CurrencyRateID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:07.273</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>CurrencyRate</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[CurrencyRate] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_CurrencyRate_CurrencyRateID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [CurrencyRateID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
107;14/10/2005 01:59:07;"dbo";"ALTER_TABLE";"Sales";"Customer";"ALTER TABLE [Sales].[Customer] WITH CHECK ADD 
    CONSTRAINT [PK_Customer_CustomerID] PRIMARY KEY CLUSTERED 
    (
        [CustomerID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:07.383</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>Customer</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[Customer] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_Customer_CustomerID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [CustomerID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
108;14/10/2005 01:59:07;"dbo";"ALTER_TABLE";"Sales";"CustomerAddress";"ALTER TABLE [Sales].[CustomerAddress] WITH CHECK ADD 
    CONSTRAINT [PK_CustomerAddress_CustomerID_AddressID] PRIMARY KEY CLUSTERED 
    (
        [CustomerID],
        [AddressID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:07.490</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>CustomerAddress</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[CustomerAddress] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_CustomerAddress_CustomerID_AddressID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [CustomerID],&#x0D;
        [AddressID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
109;14/10/2005 01:59:07;"dbo";"ALTER_TABLE";"dbo";"DatabaseLog";"ALTER TABLE [dbo].[DatabaseLog] WITH CHECK ADD 
    CONSTRAINT [PK_DatabaseLog_DatabaseLogID] PRIMARY KEY NONCLUSTERED 
    (
        [DatabaseLogID]
    )  ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:07.570</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>DatabaseLog</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [dbo].[DatabaseLog] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_DatabaseLog_DatabaseLogID] PRIMARY KEY NONCLUSTERED &#x0D;
    (&#x0D;
        [DatabaseLogID]&#x0D;
    )  ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
110;14/10/2005 01:59:07;"dbo";"ALTER_TABLE";"HumanResources";"Department";"ALTER TABLE [HumanResources].[Department] WITH CHECK ADD 
    CONSTRAINT [PK_Department_DepartmentID] PRIMARY KEY CLUSTERED 
    (
        [DepartmentID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:07.680</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>Department</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [HumanResources].[Department] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_Department_DepartmentID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [DepartmentID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
111;14/10/2005 01:59:07;"dbo";"ALTER_TABLE";"Production";"Document";"ALTER TABLE [Production].[Document] WITH CHECK ADD 
    CONSTRAINT [PK_Document_DocumentID] PRIMARY KEY CLUSTERED 
    (
        [DocumentID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:07.787</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>Document</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[Document] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_Document_DocumentID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [DocumentID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
112;14/10/2005 01:59:07;"dbo";"ALTER_TABLE";"HumanResources";"Employee";"ALTER TABLE [HumanResources].[Employee] WITH CHECK ADD 
    CONSTRAINT [PK_Employee_EmployeeID] PRIMARY KEY CLUSTERED 
    (
        [EmployeeID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:07.897</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>Employee</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [HumanResources].[Employee] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_Employee_EmployeeID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [EmployeeID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
113;14/10/2005 01:59:08;"dbo";"ALTER_TABLE";"HumanResources";"EmployeeAddress";"ALTER TABLE [HumanResources].[EmployeeAddress] WITH CHECK ADD 
    CONSTRAINT [PK_EmployeeAddress_EmployeeID_AddressID] PRIMARY KEY CLUSTERED 
    (
        [EmployeeID],
        [AddressID]
    ) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:08.007</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>EmployeeAddress</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [HumanResources].[EmployeeAddress] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_EmployeeAddress_EmployeeID_AddressID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [EmployeeID],&#x0D;
        [AddressID]&#x0D;
    ) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
114;14/10/2005 01:59:08;"dbo";"ALTER_TABLE";"HumanResources";"EmployeeDepartmentHistory";"ALTER TABLE [HumanResources].[EmployeeDepartmentHistory] WITH CHECK ADD 
    CONSTRAINT [PK_EmployeeDepartmentHistory_EmployeeID_StartDate_DepartmentID] PRIMARY KEY CLUSTERED 
    (
        [EmployeeID],
        [StartDate],
        [DepartmentID],
        [ShiftID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:08.117</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>EmployeeDepartmentHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [HumanResources].[EmployeeDepartmentHistory] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_EmployeeDepartmentHistory_EmployeeID_StartDate_DepartmentID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [EmployeeID],&#x0D;
        [StartDate],&#x0D;
        [DepartmentID],&#x0D;
        [ShiftID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
115;14/10/2005 01:59:08;"dbo";"ALTER_TABLE";"HumanResources";"EmployeePayHistory";"ALTER TABLE [HumanResources].[EmployeePayHistory] WITH CHECK ADD 
    CONSTRAINT [PK_EmployeePayHistory_EmployeeID_RateChangeDate] PRIMARY KEY CLUSTERED 
    (
        [EmployeeID],
        [RateChangeDate]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:08.227</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>EmployeePayHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [HumanResources].[EmployeePayHistory] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_EmployeePayHistory_EmployeeID_RateChangeDate] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [EmployeeID],&#x0D;
        [RateChangeDate]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
116;14/10/2005 01:59:08;"dbo";"ALTER_TABLE";"Production";"Illustration";"ALTER TABLE [Production].[Illustration] WITH CHECK ADD 
    CONSTRAINT [PK_Illustration_IllustrationID] PRIMARY KEY CLUSTERED 
    (
        [IllustrationID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:08.337</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>Illustration</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[Illustration] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_Illustration_IllustrationID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [IllustrationID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
117;14/10/2005 01:59:09;"dbo";"ALTER_TABLE";"Sales";"Individual";"ALTER TABLE [Sales].[Individual] WITH CHECK ADD 
    CONSTRAINT [PK_Individual_CustomerID] PRIMARY KEY CLUSTERED 
    (
        [CustomerID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:09.397</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>Individual</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[Individual] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_Individual_CustomerID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [CustomerID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
118;14/10/2005 01:59:09;"dbo";"ALTER_TABLE";"HumanResources";"JobCandidate";"ALTER TABLE [HumanResources].[JobCandidate] WITH CHECK ADD 
    CONSTRAINT [PK_JobCandidate_JobCandidateID] PRIMARY KEY CLUSTERED 
    (
        [JobCandidateID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:09.430</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>JobCandidate</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [HumanResources].[JobCandidate] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_JobCandidate_JobCandidateID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [JobCandidateID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
119;14/10/2005 01:59:09;"dbo";"ALTER_TABLE";"Production";"Location";"ALTER TABLE [Production].[Location] WITH CHECK ADD 
    CONSTRAINT [PK_Location_LocationID] PRIMARY KEY CLUSTERED 
    (
        [LocationID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:09.537</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>Location</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[Location] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_Location_LocationID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [LocationID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
120;14/10/2005 01:59:09;"dbo";"ALTER_TABLE";"Production";"Product";"ALTER TABLE [Production].[Product] WITH CHECK ADD 
    CONSTRAINT [PK_Product_ProductID] PRIMARY KEY CLUSTERED 
    (
        [ProductID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:09.647</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>Product</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[Product] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_Product_ProductID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ProductID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
121;14/10/2005 01:59:09;"dbo";"ALTER_TABLE";"Production";"ProductCategory";"ALTER TABLE [Production].[ProductCategory] WITH CHECK ADD 
    CONSTRAINT [PK_ProductCategory_ProductCategoryID] PRIMARY KEY CLUSTERED 
    (
        [ProductCategoryID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:09.757</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductCategory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductCategory] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ProductCategory_ProductCategoryID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ProductCategoryID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
122;14/10/2005 01:59:09;"dbo";"ALTER_TABLE";"Production";"ProductCostHistory";"ALTER TABLE [Production].[ProductCostHistory] WITH CHECK ADD 
    CONSTRAINT [PK_ProductCostHistory_ProductID_StartDate] PRIMARY KEY CLUSTERED 
    (
        [ProductID],
        [StartDate]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:09.867</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductCostHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductCostHistory] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ProductCostHistory_ProductID_StartDate] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ProductID],&#x0D;
        [StartDate]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
123;14/10/2005 01:59:09;"dbo";"ALTER_TABLE";"Production";"ProductDescription";"ALTER TABLE [Production].[ProductDescription] WITH CHECK ADD 
    CONSTRAINT [PK_ProductDescription_ProductDescriptionID] PRIMARY KEY CLUSTERED 
    (
        [ProductDescriptionID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:09.977</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductDescription</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductDescription] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ProductDescription_ProductDescriptionID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ProductDescriptionID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
124;14/10/2005 01:59:10;"dbo";"ALTER_TABLE";"Production";"ProductDocument";"ALTER TABLE [Production].[ProductDocument] WITH CHECK ADD 
    CONSTRAINT [PK_ProductDocument_ProductID_DocumentID] PRIMARY KEY CLUSTERED 
    (
        [ProductID],
        [DocumentID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:10.087</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductDocument</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductDocument] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ProductDocument_ProductID_DocumentID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ProductID],&#x0D;
        [DocumentID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
125;14/10/2005 01:59:10;"dbo";"ALTER_TABLE";"Production";"ProductInventory";"ALTER TABLE [Production].[ProductInventory] WITH CHECK ADD 
    CONSTRAINT [PK_ProductInventory_ProductID_LocationID] PRIMARY KEY CLUSTERED 
    (
    [ProductID],
    [LocationID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:10.193</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductInventory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductInventory] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ProductInventory_ProductID_LocationID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
    [ProductID],&#x0D;
    [LocationID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
126;14/10/2005 01:59:10;"dbo";"ALTER_TABLE";"Production";"ProductListPriceHistory";"ALTER TABLE [Production].[ProductListPriceHistory] WITH CHECK ADD 
    CONSTRAINT [PK_ProductListPriceHistory_ProductID_StartDate] PRIMARY KEY CLUSTERED 
    (
        [ProductID],
        [StartDate]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:10.303</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductListPriceHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductListPriceHistory] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ProductListPriceHistory_ProductID_StartDate] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ProductID],&#x0D;
        [StartDate]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
127;14/10/2005 01:59:10;"dbo";"ALTER_TABLE";"Production";"ProductModel";"ALTER TABLE [Production].[ProductModel] WITH CHECK ADD 
    CONSTRAINT [PK_ProductModel_ProductModelID] PRIMARY KEY CLUSTERED 
    (
        [ProductModelID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:10.413</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductModel</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductModel] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ProductModel_ProductModelID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ProductModelID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
128;14/10/2005 01:59:10;"dbo";"ALTER_TABLE";"Production";"ProductModelIllustration";"ALTER TABLE [Production].[ProductModelIllustration] WITH CHECK ADD 
    CONSTRAINT [PK_ProductModelIllustration_ProductModelID_IllustrationID] PRIMARY KEY CLUSTERED 
    (
        [ProductModelID],
        [IllustrationID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:10.523</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductModelIllustration</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductModelIllustration] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ProductModelIllustration_ProductModelID_IllustrationID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ProductModelID],&#x0D;
        [IllustrationID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
129;14/10/2005 01:59:10;"dbo";"ALTER_TABLE";"Production";"ProductModelProductDescriptionCulture";"ALTER TABLE [Production].[ProductModelProductDescriptionCulture] WITH CHECK ADD 
    CONSTRAINT [PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID] PRIMARY KEY CLUSTERED 
    (
        [ProductModelID],
        [ProductDescriptionID],
        [CultureID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:10.633</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductModelProductDescriptionCulture</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductModelProductDescriptionCulture] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ProductModelID],&#x0D;
        [ProductDescriptionID],&#x0D;
        [CultureID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
130;14/10/2005 01:59:10;"dbo";"ALTER_TABLE";"Production";"ProductPhoto";"ALTER TABLE [Production].[ProductPhoto] WITH CHECK ADD 
    CONSTRAINT [PK_ProductPhoto_ProductPhotoID] PRIMARY KEY CLUSTERED 
    (
        [ProductPhotoID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:10.740</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductPhoto</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductPhoto] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ProductPhoto_ProductPhotoID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ProductPhotoID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
131;14/10/2005 01:59:10;"dbo";"ALTER_TABLE";"Production";"ProductProductPhoto";"ALTER TABLE [Production].[ProductProductPhoto] WITH CHECK ADD 
    CONSTRAINT [PK_ProductProductPhoto_ProductID_ProductPhotoID] PRIMARY KEY NONCLUSTERED 
    (
        [ProductID],
        [ProductPhotoID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:10.850</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductProductPhoto</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductProductPhoto] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ProductProductPhoto_ProductID_ProductPhotoID] PRIMARY KEY NONCLUSTERED &#x0D;
    (&#x0D;
        [ProductID],&#x0D;
        [ProductPhotoID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
132;14/10/2005 01:59:10;"dbo";"ALTER_TABLE";"Production";"ProductReview";"ALTER TABLE [Production].[ProductReview] WITH CHECK ADD 
    CONSTRAINT [PK_ProductReview_ProductReviewID] PRIMARY KEY CLUSTERED 
    (
        [ProductReviewID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:10.960</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductReview</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductReview] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ProductReview_ProductReviewID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ProductReviewID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
133;14/10/2005 01:59:11;"dbo";"ALTER_TABLE";"Production";"ProductSubcategory";"ALTER TABLE [Production].[ProductSubcategory] WITH CHECK ADD 
    CONSTRAINT [PK_ProductSubcategory_ProductSubcategoryID] PRIMARY KEY CLUSTERED 
    (
        [ProductSubcategoryID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:11.070</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductSubcategory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductSubcategory] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ProductSubcategory_ProductSubcategoryID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ProductSubcategoryID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
134;14/10/2005 01:59:11;"dbo";"ALTER_TABLE";"Purchasing";"ProductVendor";"ALTER TABLE [Purchasing].[ProductVendor] WITH CHECK ADD 
    CONSTRAINT [PK_ProductVendor_ProductID_VendorID] PRIMARY KEY CLUSTERED 
    (
        [ProductID],
        [VendorID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:11.180</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>ProductVendor</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Purchasing].[ProductVendor] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ProductVendor_ProductID_VendorID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ProductID],&#x0D;
        [VendorID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
135;14/10/2005 01:59:11;"dbo";"ALTER_TABLE";"Purchasing";"PurchaseOrderDetail";"ALTER TABLE [Purchasing].[PurchaseOrderDetail] WITH CHECK ADD 
    CONSTRAINT [PK_PurchaseOrderDetail_PurchaseOrderID_PurchaseOrderDetailID] PRIMARY KEY CLUSTERED 
    (
        [PurchaseOrderID],
        [PurchaseOrderDetailID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:11.303</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>PurchaseOrderDetail</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Purchasing].[PurchaseOrderDetail] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_PurchaseOrderDetail_PurchaseOrderID_PurchaseOrderDetailID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [PurchaseOrderID],&#x0D;
        [PurchaseOrderDetailID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
136;14/10/2005 01:59:11;"dbo";"ALTER_TABLE";"Purchasing";"PurchaseOrderHeader";"ALTER TABLE [Purchasing].[PurchaseOrderHeader] WITH CHECK ADD 
    CONSTRAINT [PK_PurchaseOrderHeader_PurchaseOrderID] PRIMARY KEY CLUSTERED 
    (
        [PurchaseOrderID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:11.413</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>PurchaseOrderHeader</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Purchasing].[PurchaseOrderHeader] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_PurchaseOrderHeader_PurchaseOrderID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [PurchaseOrderID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
137;14/10/2005 01:59:12;"dbo";"ALTER_TABLE";"Sales";"SalesOrderDetail";"ALTER TABLE [Sales].[SalesOrderDetail] WITH CHECK ADD 
    CONSTRAINT [PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID] PRIMARY KEY CLUSTERED 
    (
        [SalesOrderID],
        [SalesOrderDetailID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:12.023</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesOrderDetail</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SalesOrderDetail] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [SalesOrderID],&#x0D;
        [SalesOrderDetailID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
138;14/10/2005 01:59:12;"dbo";"ALTER_TABLE";"Sales";"SalesOrderHeader";"ALTER TABLE [Sales].[SalesOrderHeader] WITH CHECK ADD 
    CONSTRAINT [PK_SalesOrderHeader_SalesOrderID] PRIMARY KEY CLUSTERED 
    (
        [SalesOrderID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:12.227</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesOrderHeader</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SalesOrderHeader] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_SalesOrderHeader_SalesOrderID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [SalesOrderID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
139;14/10/2005 01:59:12;"dbo";"ALTER_TABLE";"Sales";"SalesOrderHeaderSalesReason";"ALTER TABLE [Sales].[SalesOrderHeaderSalesReason] WITH CHECK ADD 
    CONSTRAINT [PK_SalesOrderHeaderSalesReason_SalesOrderID_SalesReasonID] PRIMARY KEY CLUSTERED 
    (
        [SalesOrderID],
        [SalesReasonID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:12.367</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesOrderHeaderSalesReason</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SalesOrderHeaderSalesReason] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_SalesOrderHeaderSalesReason_SalesOrderID_SalesReasonID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [SalesOrderID],&#x0D;
        [SalesReasonID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
140;14/10/2005 01:59:12;"dbo";"ALTER_TABLE";"Sales";"SalesPerson";"ALTER TABLE [Sales].[SalesPerson] WITH CHECK ADD 
    CONSTRAINT [PK_SalesPerson_SalesPersonID] PRIMARY KEY CLUSTERED 
    (
        [SalesPersonID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:12.430</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesPerson</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SalesPerson] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_SalesPerson_SalesPersonID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [SalesPersonID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
141;14/10/2005 01:59:12;"dbo";"ALTER_TABLE";"Sales";"SalesPersonQuotaHistory";"ALTER TABLE [Sales].[SalesPersonQuotaHistory] WITH CHECK ADD 
    CONSTRAINT [PK_SalesPersonQuotaHistory_SalesPersonID_QuotaDate] PRIMARY KEY CLUSTERED 
    (
        [SalesPersonID],
        [QuotaDate] --,
        -- [ProductCategoryID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:12.537</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesPersonQuotaHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SalesPersonQuotaHistory] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_SalesPersonQuotaHistory_SalesPersonID_QuotaDate] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [SalesPersonID],&#x0D;
        [QuotaDate] --,&#x0D;
        -- [ProductCategoryID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
142;14/10/2005 01:59:12;"dbo";"ALTER_TABLE";"Sales";"SalesReason";"ALTER TABLE [Sales].[SalesReason] WITH CHECK ADD 
    CONSTRAINT [PK_SalesReason_SalesReasonID] PRIMARY KEY CLUSTERED 
    (
        [SalesReasonID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:12.647</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesReason</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SalesReason] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_SalesReason_SalesReasonID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [SalesReasonID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
143;14/10/2005 01:59:12;"dbo";"ALTER_TABLE";"Sales";"SalesTaxRate";"ALTER TABLE [Sales].[SalesTaxRate] WITH CHECK ADD 
    CONSTRAINT [PK_SalesTaxRate_SalesTaxRateID] PRIMARY KEY CLUSTERED 
    (
        [SalesTaxRateID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:12.757</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesTaxRate</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SalesTaxRate] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_SalesTaxRate_SalesTaxRateID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [SalesTaxRateID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
144;14/10/2005 01:59:12;"dbo";"ALTER_TABLE";"Sales";"SalesTerritory";"ALTER TABLE [Sales].[SalesTerritory] WITH CHECK ADD 
    CONSTRAINT [PK_SalesTerritory_TerritoryID] PRIMARY KEY CLUSTERED 
    (
        [TerritoryID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:12.867</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesTerritory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SalesTerritory] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_SalesTerritory_TerritoryID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [TerritoryID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
145;14/10/2005 01:59:12;"dbo";"ALTER_TABLE";"Sales";"SalesTerritoryHistory";"ALTER TABLE [Sales].[SalesTerritoryHistory] WITH CHECK ADD 
    CONSTRAINT [PK_SalesTerritoryHistory_SalesPersonID_StartDate_TerritoryID] PRIMARY KEY CLUSTERED 
    (
        [SalesPersonID],
        [StartDate],
        [TerritoryID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:12.977</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesTerritoryHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SalesTerritoryHistory] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_SalesTerritoryHistory_SalesPersonID_StartDate_TerritoryID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [SalesPersonID],&#x0D;
        [StartDate],&#x0D;
        [TerritoryID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
146;14/10/2005 01:59:13;"dbo";"ALTER_TABLE";"Production";"ScrapReason";"ALTER TABLE [Production].[ScrapReason] WITH CHECK ADD 
    CONSTRAINT [PK_ScrapReason_ScrapReasonID] PRIMARY KEY CLUSTERED 
    (
        [ScrapReasonID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:13.087</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ScrapReason</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ScrapReason] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ScrapReason_ScrapReasonID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ScrapReasonID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
147;14/10/2005 01:59:13;"dbo";"ALTER_TABLE";"HumanResources";"Shift";"ALTER TABLE [HumanResources].[Shift] WITH CHECK ADD 
    CONSTRAINT [PK_Shift_ShiftID] PRIMARY KEY CLUSTERED 
    (
        [ShiftID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:13.193</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>Shift</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [HumanResources].[Shift] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_Shift_ShiftID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ShiftID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
148;14/10/2005 01:59:13;"dbo";"ALTER_TABLE";"Purchasing";"ShipMethod";"ALTER TABLE [Purchasing].[ShipMethod] WITH CHECK ADD 
    CONSTRAINT [PK_ShipMethod_ShipMethodID] PRIMARY KEY CLUSTERED 
    (
        [ShipMethodID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:13.303</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>ShipMethod</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Purchasing].[ShipMethod] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ShipMethod_ShipMethodID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ShipMethodID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
149;14/10/2005 01:59:13;"dbo";"ALTER_TABLE";"Sales";"ShoppingCartItem";"ALTER TABLE [Sales].[ShoppingCartItem] WITH CHECK ADD 
    CONSTRAINT [PK_ShoppingCartItem_ShoppingCartItemID] PRIMARY KEY CLUSTERED 
    (
        [ShoppingCartItemID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:13.413</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>ShoppingCartItem</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[ShoppingCartItem] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_ShoppingCartItem_ShoppingCartItemID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [ShoppingCartItemID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
150;14/10/2005 01:59:13;"dbo";"ALTER_TABLE";"Sales";"SpecialOffer";"ALTER TABLE [Sales].[SpecialOffer] WITH CHECK ADD 
    CONSTRAINT [PK_SpecialOffer_SpecialOfferID] PRIMARY KEY CLUSTERED 
    (
        [SpecialOfferID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:13.523</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SpecialOffer</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SpecialOffer] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_SpecialOffer_SpecialOfferID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [SpecialOfferID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
151;14/10/2005 01:59:13;"dbo";"ALTER_TABLE";"Sales";"SpecialOfferProduct";"ALTER TABLE [Sales].[SpecialOfferProduct] WITH CHECK ADD 
    CONSTRAINT [PK_SpecialOfferProduct_SpecialOfferID_ProductID] PRIMARY KEY CLUSTERED 
    (
        [SpecialOfferID],
        [ProductID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:13.633</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SpecialOfferProduct</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SpecialOfferProduct] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_SpecialOfferProduct_SpecialOfferID_ProductID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [SpecialOfferID],&#x0D;
        [ProductID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
152;14/10/2005 01:59:13;"dbo";"ALTER_TABLE";"Person";"StateProvince";"ALTER TABLE [Person].[StateProvince] WITH CHECK ADD 
    CONSTRAINT [PK_StateProvince_StateProvinceID] PRIMARY KEY CLUSTERED 
    (
        [StateProvinceID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:13.740</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>StateProvince</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Person].[StateProvince] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_StateProvince_StateProvinceID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [StateProvinceID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
153;14/10/2005 01:59:13;"dbo";"ALTER_TABLE";"Sales";"Store";"ALTER TABLE [Sales].[Store] WITH CHECK ADD 
    CONSTRAINT [PK_Store_CustomerID] PRIMARY KEY CLUSTERED 
    (
        [CustomerID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:13.867</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>Store</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[Store] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_Store_CustomerID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [CustomerID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
154;14/10/2005 01:59:13;"dbo";"ALTER_TABLE";"Sales";"StoreContact";"ALTER TABLE [Sales].[StoreContact] WITH CHECK ADD 
    CONSTRAINT [PK_StoreContact_CustomerID_ContactID] PRIMARY KEY CLUSTERED 
    (
        [CustomerID],
        [ContactID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:13.960</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>StoreContact</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[StoreContact] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_StoreContact_CustomerID_ContactID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [CustomerID],&#x0D;
        [ContactID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
155;14/10/2005 01:59:14;"dbo";"ALTER_TABLE";"Production";"TransactionHistory";"ALTER TABLE [Production].[TransactionHistory] WITH CHECK ADD 
    CONSTRAINT [PK_TransactionHistory_TransactionID] PRIMARY KEY CLUSTERED 
    (
        [TransactionID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:14.443</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>TransactionHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[TransactionHistory] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_TransactionHistory_TransactionID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [TransactionID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
156;14/10/2005 01:59:14;"dbo";"ALTER_TABLE";"Production";"TransactionHistoryArchive";"ALTER TABLE [Production].[TransactionHistoryArchive] WITH CHECK ADD 
    CONSTRAINT [PK_TransactionHistoryArchive_TransactionID] PRIMARY KEY CLUSTERED 
    (
        [TransactionID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:14.867</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>TransactionHistoryArchive</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[TransactionHistoryArchive] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_TransactionHistoryArchive_TransactionID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [TransactionID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
157;14/10/2005 01:59:14;"dbo";"ALTER_TABLE";"Production";"UnitMeasure";"ALTER TABLE [Production].[UnitMeasure] WITH CHECK ADD 
    CONSTRAINT [PK_UnitMeasure_UnitMeasureCode] PRIMARY KEY CLUSTERED 
    (
        [UnitMeasureCode]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:14.977</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>UnitMeasure</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[UnitMeasure] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_UnitMeasure_UnitMeasureCode] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [UnitMeasureCode]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
158;14/10/2005 01:59:15;"dbo";"ALTER_TABLE";"Purchasing";"Vendor";"ALTER TABLE [Purchasing].[Vendor] WITH CHECK ADD 
    CONSTRAINT [PK_Vendor_VendorID] PRIMARY KEY CLUSTERED 
    (
        [VendorID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:15.087</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>Vendor</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Purchasing].[Vendor] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_Vendor_VendorID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [VendorID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
159;14/10/2005 01:59:15;"dbo";"ALTER_TABLE";"Purchasing";"VendorAddress";"ALTER TABLE [Purchasing].[VendorAddress] WITH CHECK ADD 
    CONSTRAINT [PK_VendorAddress_VendorID_AddressID] PRIMARY KEY CLUSTERED 
    (
        [VendorID],
        [AddressID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:15.193</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>VendorAddress</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Purchasing].[VendorAddress] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_VendorAddress_VendorID_AddressID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [VendorID],&#x0D;
        [AddressID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
160;14/10/2005 01:59:15;"dbo";"ALTER_TABLE";"Purchasing";"VendorContact";"ALTER TABLE [Purchasing].[VendorContact] WITH CHECK ADD 
    CONSTRAINT [PK_VendorContact_VendorID_ContactID] PRIMARY KEY CLUSTERED 
    (
        [VendorID],
        [ContactID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:15.303</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>VendorContact</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Purchasing].[VendorContact] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_VendorContact_VendorID_ContactID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [VendorID],&#x0D;
        [ContactID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
161;14/10/2005 01:59:15;"dbo";"ALTER_TABLE";"Production";"WorkOrder";"ALTER TABLE [Production].[WorkOrder] WITH CHECK ADD 
    CONSTRAINT [PK_WorkOrder_WorkOrderID] PRIMARY KEY CLUSTERED 
    (
        [WorkOrderID]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:15.663</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>WorkOrder</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[WorkOrder] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_WorkOrder_WorkOrderID] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [WorkOrderID]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
162;14/10/2005 01:59:16;"dbo";"ALTER_TABLE";"Production";"WorkOrderRouting";"ALTER TABLE [Production].[WorkOrderRouting] WITH CHECK ADD 
    CONSTRAINT [PK_WorkOrderRouting_WorkOrderID_ProductID_OperationSequence] PRIMARY KEY CLUSTERED 
    (
        [WorkOrderID],
        [ProductID],
        [OperationSequence]
    )  ON [PRIMARY];

";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:16.037</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>WorkOrderRouting</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[WorkOrderRouting] WITH CHECK ADD &#x0D;
    CONSTRAINT [PK_WorkOrderRouting_WorkOrderID_ProductID_OperationSequence] PRIMARY KEY CLUSTERED &#x0D;
    (&#x0D;
        [WorkOrderID],&#x0D;
        [ProductID],&#x0D;
        [OperationSequence]&#x0D;
    )  ON [PRIMARY];
&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
163;14/10/2005 01:59:16;"dbo";"CREATE_INDEX";"Person";"AK_Address_rowguid";"CREATE UNIQUE INDEX [AK_Address_rowguid] ON [Person].[Address]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:16.287</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>AK_Address_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Address</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Address_rowguid] ON [Person].[Address]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
164;14/10/2005 01:59:16;"dbo";"CREATE_INDEX";"Person";"IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode";"CREATE UNIQUE INDEX [IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode] ON [Person].[Address] ([AddressLine1], [AddressLine2], [City], [StateProvinceID], [PostalCode]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:16.443</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Address</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode] ON [Person].[Address] ([AddressLine1], [AddressLine2], [City], [StateProvinceID], [PostalCode]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
165;14/10/2005 01:59:16;"dbo";"CREATE_INDEX";"Person";"IX_Address_StateProvinceID";"CREATE INDEX [IX_Address_StateProvinceID] ON [Person].[Address]([StateProvinceID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:16.507</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>IX_Address_StateProvinceID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Address</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_Address_StateProvinceID] ON [Person].[Address]([StateProvinceID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
166;14/10/2005 01:59:16;"dbo";"CREATE_INDEX";"Person";"AK_AddressType_rowguid";"CREATE UNIQUE INDEX [AK_AddressType_rowguid] ON [Person].[AddressType]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:16.553</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>AK_AddressType_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>AddressType</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_AddressType_rowguid] ON [Person].[AddressType]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
167;14/10/2005 01:59:16;"dbo";"CREATE_INDEX";"Person";"AK_AddressType_Name";"CREATE UNIQUE INDEX [AK_AddressType_Name] ON [Person].[AddressType]([Name]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:16.553</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>AK_AddressType_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>AddressType</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_AddressType_Name] ON [Person].[AddressType]([Name]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
168;14/10/2005 01:59:16;"dbo";"CREATE_INDEX";"Production";"IX_BillOfMaterials_UnitMeasureCode";"CREATE INDEX [IX_BillOfMaterials_UnitMeasureCode] ON [Production].[BillOfMaterials]([UnitMeasureCode]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:16.663</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>IX_BillOfMaterials_UnitMeasureCode</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>BillOfMaterials</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_BillOfMaterials_UnitMeasureCode] ON [Production].[BillOfMaterials]([UnitMeasureCode]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
169;14/10/2005 01:59:16;"dbo";"CREATE_INDEX";"Production";"AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate";"CREATE UNIQUE CLUSTERED INDEX [AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate] ON [Production].[BillOfMaterials]([ProductAssemblyID], [ComponentID], [StartDate]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:16.710</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>BillOfMaterials</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE CLUSTERED INDEX [AK_BillOfMaterials_ProductAssemblyID_ComponentID_StartDate] ON [Production].[BillOfMaterials]([ProductAssemblyID], [ComponentID], [StartDate]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
170;14/10/2005 01:59:16;"dbo";"CREATE_INDEX";"Person";"AK_Contact_rowguid";"CREATE UNIQUE INDEX [AK_Contact_rowguid] ON [Person].[Contact]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:16.837</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>AK_Contact_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Contact</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Contact_rowguid] ON [Person].[Contact]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
171;14/10/2005 01:59:16;"dbo";"CREATE_INDEX";"Person";"IX_Contact_EmailAddress";"CREATE INDEX [IX_Contact_EmailAddress] ON [Person].[Contact]([EmailAddress]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:16.960</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>IX_Contact_EmailAddress</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Contact</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_Contact_EmailAddress] ON [Person].[Contact]([EmailAddress]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
172;14/10/2005 01:59:16;"dbo";"CREATE_INDEX";"Person";"AK_ContactType_Name";"CREATE UNIQUE INDEX [AK_ContactType_Name] ON [Person].[ContactType]([Name]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:16.990</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>AK_ContactType_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>ContactType</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_ContactType_Name] ON [Person].[ContactType]([Name]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
173;14/10/2005 01:59:17;"dbo";"CREATE_INDEX";"Sales";"IX_CountryRegionCurrency_CurrencyCode";"CREATE INDEX [IX_CountryRegionCurrency_CurrencyCode] ON [Sales].[CountryRegionCurrency]([CurrencyCode]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:17.100</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>IX_CountryRegionCurrency_CurrencyCode</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>CountryRegionCurrency</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_CountryRegionCurrency_CurrencyCode] ON [Sales].[CountryRegionCurrency]([CurrencyCode]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
174;14/10/2005 01:59:17;"dbo";"CREATE_INDEX";"Person";"AK_CountryRegion_Name";"CREATE UNIQUE INDEX [AK_CountryRegion_Name] ON [Person].[CountryRegion]([Name]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:17.210</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>AK_CountryRegion_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>CountryRegion</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_CountryRegion_Name] ON [Person].[CountryRegion]([Name]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
175;14/10/2005 01:59:17;"dbo";"CREATE_INDEX";"Sales";"AK_CreditCard_CardNumber";"CREATE UNIQUE INDEX [AK_CreditCard_CardNumber] ON [Sales].[CreditCard]([CardNumber]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:17.430</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_CreditCard_CardNumber</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>CreditCard</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_CreditCard_CardNumber] ON [Sales].[CreditCard]([CardNumber]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
176;14/10/2005 01:59:17;"dbo";"CREATE_INDEX";"Production";"AK_Culture_Name";"CREATE UNIQUE INDEX [AK_Culture_Name] ON [Production].[Culture]([Name]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:17.537</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>AK_Culture_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Culture</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Culture_Name] ON [Production].[Culture]([Name]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
177;14/10/2005 01:59:17;"dbo";"CREATE_INDEX";"Sales";"AK_Currency_Name";"CREATE UNIQUE INDEX [AK_Currency_Name] ON [Sales].[Currency]([Name]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:17.647</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_Currency_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Currency</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Currency_Name] ON [Sales].[Currency]([Name]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
178;14/10/2005 01:59:17;"dbo";"CREATE_INDEX";"Sales";"AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode";"CREATE UNIQUE INDEX [AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode] ON [Sales].[CurrencyRate]([CurrencyRateDate], [FromCurrencyCode], [ToCurrencyCode]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:17.787</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>CurrencyRate</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode] ON [Sales].[CurrencyRate]([CurrencyRateDate], [FromCurrencyCode], [ToCurrencyCode]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
179;14/10/2005 01:59:17;"dbo";"CREATE_INDEX";"Sales";"AK_Customer_rowguid";"CREATE UNIQUE INDEX [AK_Customer_rowguid] ON [Sales].[Customer]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:17.930</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_Customer_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Customer</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Customer_rowguid] ON [Sales].[Customer]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
180;14/10/2005 01:59:18;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_00000003_276EDEB3";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:18.210</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_00000003_276EDEB3</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>Customer</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
181;14/10/2005 01:59:18;"dbo";"CREATE_INDEX";"Sales";"AK_Customer_AccountNumber";"CREATE UNIQUE INDEX [AK_Customer_AccountNumber] ON [Sales].[Customer]([AccountNumber]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:18.490</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_Customer_AccountNumber</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Customer</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Customer_AccountNumber] ON [Sales].[Customer]([AccountNumber]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
182;14/10/2005 01:59:18;"dbo";"CREATE_INDEX";"Sales";"IX_Customer_TerritoryID";"CREATE INDEX [IX_Customer_TerritoryID] ON [Sales].[Customer]([TerritoryID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:18.537</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>IX_Customer_TerritoryID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Customer</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_Customer_TerritoryID] ON [Sales].[Customer]([TerritoryID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
183;14/10/2005 01:59:18;"dbo";"CREATE_INDEX";"Sales";"AK_CustomerAddress_rowguid";"CREATE UNIQUE INDEX [AK_CustomerAddress_rowguid] ON [Sales].[CustomerAddress]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:18.693</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_CustomerAddress_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>CustomerAddress</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_CustomerAddress_rowguid] ON [Sales].[CustomerAddress]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
184;14/10/2005 01:59:18;"dbo";"CREATE_INDEX";"HumanResources";"AK_Department_Name";"CREATE UNIQUE INDEX [AK_Department_Name] ON [HumanResources].[Department]([Name]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:18.740</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>AK_Department_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Department</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Department_Name] ON [HumanResources].[Department]([Name]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
185;14/10/2005 01:59:18;"dbo";"CREATE_INDEX";"Production";"AK_Document_FileName_Revision";"CREATE UNIQUE INDEX [AK_Document_FileName_Revision] ON [Production].[Document]([FileName], [Revision]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:18.850</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>AK_Document_FileName_Revision</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Document</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Document_FileName_Revision] ON [Production].[Document]([FileName], [Revision]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
186;14/10/2005 01:59:18;"dbo";"CREATE_INDEX";"HumanResources";"AK_Employee_LoginID";"CREATE UNIQUE INDEX [AK_Employee_LoginID] ON [HumanResources].[Employee]([LoginID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:18.960</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>AK_Employee_LoginID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Employee</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Employee_LoginID] ON [HumanResources].[Employee]([LoginID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
187;14/10/2005 01:59:18;"dbo";"CREATE_INDEX";"HumanResources";"AK_Employee_NationalIDNumber";"CREATE UNIQUE INDEX [AK_Employee_NationalIDNumber] ON [HumanResources].[Employee]([NationalIDNumber]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:18.977</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>AK_Employee_NationalIDNumber</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Employee</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Employee_NationalIDNumber] ON [HumanResources].[Employee]([NationalIDNumber]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
188;14/10/2005 01:59:18;"dbo";"CREATE_INDEX";"HumanResources";"AK_Employee_rowguid";"CREATE UNIQUE INDEX [AK_Employee_rowguid] ON [HumanResources].[Employee]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:18.977</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>AK_Employee_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Employee</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Employee_rowguid] ON [HumanResources].[Employee]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
189;14/10/2005 01:59:18;"dbo";"CREATE_INDEX";"HumanResources";"IX_Employee_ManagerID";"CREATE INDEX [IX_Employee_ManagerID] ON [HumanResources].[Employee]([ManagerID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:18.990</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>IX_Employee_ManagerID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Employee</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_Employee_ManagerID] ON [HumanResources].[Employee]([ManagerID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
190;14/10/2005 01:59:19;"dbo";"CREATE_INDEX";"HumanResources";"AK_EmployeeAddress_rowguid";"CREATE UNIQUE INDEX [AK_EmployeeAddress_rowguid] ON [HumanResources].[EmployeeAddress]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:19.070</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>AK_EmployeeAddress_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>EmployeeAddress</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_EmployeeAddress_rowguid] ON [HumanResources].[EmployeeAddress]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
191;14/10/2005 01:59:19;"dbo";"CREATE_INDEX";"HumanResources";"IX_EmployeeDepartmentHistory_DepartmentID";"CREATE INDEX [IX_EmployeeDepartmentHistory_DepartmentID] ON [HumanResources].[EmployeeDepartmentHistory]([DepartmentID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:19.180</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>IX_EmployeeDepartmentHistory_DepartmentID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>EmployeeDepartmentHistory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_EmployeeDepartmentHistory_DepartmentID] ON [HumanResources].[EmployeeDepartmentHistory]([DepartmentID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
192;14/10/2005 01:59:19;"dbo";"CREATE_INDEX";"HumanResources";"IX_EmployeeDepartmentHistory_ShiftID";"CREATE INDEX [IX_EmployeeDepartmentHistory_ShiftID] ON [HumanResources].[EmployeeDepartmentHistory]([ShiftID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:19.180</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>IX_EmployeeDepartmentHistory_ShiftID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>EmployeeDepartmentHistory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_EmployeeDepartmentHistory_ShiftID] ON [HumanResources].[EmployeeDepartmentHistory]([ShiftID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
193;14/10/2005 01:59:19;"dbo";"CREATE_INDEX";"HumanResources";"IX_JobCandidate_EmployeeID";"CREATE INDEX [IX_JobCandidate_EmployeeID] ON [HumanResources].[JobCandidate]([EmployeeID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:19.287</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>IX_JobCandidate_EmployeeID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>JobCandidate</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_JobCandidate_EmployeeID] ON [HumanResources].[JobCandidate]([EmployeeID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
194;14/10/2005 01:59:19;"dbo";"CREATE_INDEX";"Production";"AK_Location_Name";"CREATE UNIQUE INDEX [AK_Location_Name] ON [Production].[Location]([Name]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:19.397</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>AK_Location_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Location</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Location_Name] ON [Production].[Location]([Name]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
195;14/10/2005 01:59:19;"dbo";"CREATE_INDEX";"Production";"AK_Product_ProductNumber";"CREATE UNIQUE INDEX [AK_Product_ProductNumber] ON [Production].[Product]([ProductNumber]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:19.507</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>AK_Product_ProductNumber</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Product</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Product_ProductNumber] ON [Production].[Product]([ProductNumber]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
196;14/10/2005 01:59:19;"dbo";"CREATE_INDEX";"Production";"AK_Product_Name";"CREATE UNIQUE INDEX [AK_Product_Name] ON [Production].[Product]([Name]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:19.523</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>AK_Product_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Product</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Product_Name] ON [Production].[Product]([Name]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
197;14/10/2005 01:59:19;"dbo";"CREATE_INDEX";"Production";"AK_Product_rowguid";"CREATE UNIQUE INDEX [AK_Product_rowguid] ON [Production].[Product]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:19.523</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>AK_Product_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Product</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Product_rowguid] ON [Production].[Product]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
198;14/10/2005 01:59:19;"dbo";"CREATE_INDEX";"Production";"AK_ProductCategory_Name";"CREATE UNIQUE INDEX [AK_ProductCategory_Name] ON [Production].[ProductCategory]([Name]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:19.617</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>AK_ProductCategory_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>ProductCategory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_ProductCategory_Name] ON [Production].[ProductCategory]([Name]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
199;14/10/2005 01:59:19;"dbo";"CREATE_INDEX";"Production";"AK_ProductCategory_rowguid";"CREATE UNIQUE INDEX [AK_ProductCategory_rowguid] ON [Production].[ProductCategory]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:19.617</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>AK_ProductCategory_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>ProductCategory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_ProductCategory_rowguid] ON [Production].[ProductCategory]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
200;14/10/2005 01:59:19;"dbo";"CREATE_INDEX";"Production";"AK_ProductDescription_rowguid";"CREATE UNIQUE INDEX [AK_ProductDescription_rowguid] ON [Production].[ProductDescription]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:19.727</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>AK_ProductDescription_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>ProductDescription</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_ProductDescription_rowguid] ON [Production].[ProductDescription]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
201;14/10/2005 01:59:19;"dbo";"CREATE_INDEX";"Production";"AK_ProductModel_Name";"CREATE UNIQUE INDEX [AK_ProductModel_Name] ON [Production].[ProductModel]([Name]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:19.837</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>AK_ProductModel_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>ProductModel</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_ProductModel_Name] ON [Production].[ProductModel]([Name]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
202;14/10/2005 01:59:19;"dbo";"CREATE_INDEX";"Production";"AK_ProductModel_rowguid";"CREATE UNIQUE INDEX [AK_ProductModel_rowguid] ON [Production].[ProductModel]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:19.837</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>AK_ProductModel_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>ProductModel</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_ProductModel_rowguid] ON [Production].[ProductModel]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
203;14/10/2005 01:59:19;"dbo";"CREATE_INDEX";"Production";"IX_ProductReview_ProductID_Name";"CREATE NONCLUSTERED INDEX [IX_ProductReview_ProductID_Name] ON [Production].[ProductReview]([ProductID], [ReviewerName]) INCLUDE ([Comments]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:19.943</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>IX_ProductReview_ProductID_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>ProductReview</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE NONCLUSTERED INDEX [IX_ProductReview_ProductID_Name] ON [Production].[ProductReview]([ProductID], [ReviewerName]) INCLUDE ([Comments]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
204;14/10/2005 01:59:20;"dbo";"CREATE_INDEX";"Production";"AK_ProductSubcategory_Name";"CREATE UNIQUE INDEX [AK_ProductSubcategory_Name] ON [Production].[ProductSubcategory]([Name]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:20.053</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>AK_ProductSubcategory_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>ProductSubcategory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_ProductSubcategory_Name] ON [Production].[ProductSubcategory]([Name]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
205;14/10/2005 01:59:20;"dbo";"CREATE_INDEX";"Production";"AK_ProductSubcategory_rowguid";"CREATE UNIQUE INDEX [AK_ProductSubcategory_rowguid] ON [Production].[ProductSubcategory]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:20.053</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>AK_ProductSubcategory_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>ProductSubcategory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_ProductSubcategory_rowguid] ON [Production].[ProductSubcategory]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
206;14/10/2005 01:59:20;"dbo";"CREATE_INDEX";"Purchasing";"IX_ProductVendor_UnitMeasureCode";"CREATE INDEX [IX_ProductVendor_UnitMeasureCode] ON [Purchasing].[ProductVendor]([UnitMeasureCode]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:20.163</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>IX_ProductVendor_UnitMeasureCode</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>ProductVendor</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_ProductVendor_UnitMeasureCode] ON [Purchasing].[ProductVendor]([UnitMeasureCode]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
207;14/10/2005 01:59:20;"dbo";"CREATE_INDEX";"Purchasing";"IX_ProductVendor_VendorID";"CREATE INDEX [IX_ProductVendor_VendorID] ON [Purchasing].[ProductVendor]([VendorID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:20.163</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>IX_ProductVendor_VendorID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>ProductVendor</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_ProductVendor_VendorID] ON [Purchasing].[ProductVendor]([VendorID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
208;14/10/2005 01:59:20;"dbo";"CREATE_INDEX";"Purchasing";"IX_PurchaseOrderDetail_ProductID";"CREATE INDEX [IX_PurchaseOrderDetail_ProductID] ON [Purchasing].[PurchaseOrderDetail]([ProductID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:20.287</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>IX_PurchaseOrderDetail_ProductID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>PurchaseOrderDetail</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_PurchaseOrderDetail_ProductID] ON [Purchasing].[PurchaseOrderDetail]([ProductID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
209;14/10/2005 01:59:20;"dbo";"CREATE_INDEX";"Purchasing";"IX_PurchaseOrderHeader_VendorID";"CREATE INDEX [IX_PurchaseOrderHeader_VendorID] ON [Purchasing].[PurchaseOrderHeader]([VendorID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:20.383</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>IX_PurchaseOrderHeader_VendorID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>PurchaseOrderHeader</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_PurchaseOrderHeader_VendorID] ON [Purchasing].[PurchaseOrderHeader]([VendorID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
210;14/10/2005 01:59:20;"dbo";"CREATE_INDEX";"Purchasing";"IX_PurchaseOrderHeader_EmployeeID";"CREATE INDEX [IX_PurchaseOrderHeader_EmployeeID] ON [Purchasing].[PurchaseOrderHeader]([EmployeeID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:20.397</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>IX_PurchaseOrderHeader_EmployeeID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>PurchaseOrderHeader</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_PurchaseOrderHeader_EmployeeID] ON [Purchasing].[PurchaseOrderHeader]([EmployeeID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
211;14/10/2005 01:59:21;"dbo";"CREATE_INDEX";"Sales";"AK_SalesOrderDetail_rowguid";"CREATE UNIQUE INDEX [AK_SalesOrderDetail_rowguid] ON [Sales].[SalesOrderDetail]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:21.303</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_SalesOrderDetail_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>SalesOrderDetail</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_SalesOrderDetail_rowguid] ON [Sales].[SalesOrderDetail]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
212;14/10/2005 01:59:21;"dbo";"CREATE_INDEX";"Sales";"IX_SalesOrderDetail_ProductID";"CREATE INDEX [IX_SalesOrderDetail_ProductID] ON [Sales].[SalesOrderDetail]([ProductID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:21.913</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>IX_SalesOrderDetail_ProductID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>SalesOrderDetail</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_SalesOrderDetail_ProductID] ON [Sales].[SalesOrderDetail]([ProductID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
213;14/10/2005 01:59:22;"dbo";"CREATE_INDEX";"Sales";"AK_SalesOrderHeader_rowguid";"CREATE UNIQUE INDEX [AK_SalesOrderHeader_rowguid] ON [Sales].[SalesOrderHeader]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:22.117</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_SalesOrderHeader_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>SalesOrderHeader</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_SalesOrderHeader_rowguid] ON [Sales].[SalesOrderHeader]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
214;14/10/2005 01:59:22;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_00000008_2B0A656D";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:22.287</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_00000008_2B0A656D</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>SalesOrderHeader</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
215;14/10/2005 01:59:22;"dbo";"CREATE_INDEX";"Sales";"AK_SalesOrderHeader_SalesOrderNumber";"CREATE UNIQUE INDEX [AK_SalesOrderHeader_SalesOrderNumber] ON [Sales].[SalesOrderHeader]([SalesOrderNumber]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:22.490</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_SalesOrderHeader_SalesOrderNumber</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>SalesOrderHeader</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_SalesOrderHeader_SalesOrderNumber] ON [Sales].[SalesOrderHeader]([SalesOrderNumber]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
216;14/10/2005 01:59:22;"dbo";"CREATE_INDEX";"Sales";"IX_SalesOrderHeader_CustomerID";"CREATE INDEX [IX_SalesOrderHeader_CustomerID] ON [Sales].[SalesOrderHeader]([CustomerID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:22.570</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>IX_SalesOrderHeader_CustomerID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>SalesOrderHeader</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_SalesOrderHeader_CustomerID] ON [Sales].[SalesOrderHeader]([CustomerID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
217;14/10/2005 01:59:22;"dbo";"CREATE_INDEX";"Sales";"IX_SalesOrderHeader_SalesPersonID";"CREATE INDEX [IX_SalesOrderHeader_SalesPersonID] ON [Sales].[SalesOrderHeader]([SalesPersonID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:22.633</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>IX_SalesOrderHeader_SalesPersonID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>SalesOrderHeader</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_SalesOrderHeader_SalesPersonID] ON [Sales].[SalesOrderHeader]([SalesPersonID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
218;14/10/2005 01:59:22;"dbo";"CREATE_INDEX";"Sales";"AK_SalesPerson_rowguid";"CREATE UNIQUE INDEX [AK_SalesPerson_rowguid] ON [Sales].[SalesPerson]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:22.663</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_SalesPerson_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>SalesPerson</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_SalesPerson_rowguid] ON [Sales].[SalesPerson]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
219;14/10/2005 01:59:22;"dbo";"CREATE_INDEX";"Sales";"AK_SalesPersonQuotaHistory_rowguid";"CREATE UNIQUE INDEX [AK_SalesPersonQuotaHistory_rowguid] ON [Sales].[SalesPersonQuotaHistory]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:22.773</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_SalesPersonQuotaHistory_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>SalesPersonQuotaHistory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_SalesPersonQuotaHistory_rowguid] ON [Sales].[SalesPersonQuotaHistory]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
220;14/10/2005 01:59:22;"dbo";"CREATE_INDEX";"Sales";"AK_SalesTaxRate_StateProvinceID_TaxType";"CREATE UNIQUE INDEX [AK_SalesTaxRate_StateProvinceID_TaxType] ON [Sales].[SalesTaxRate]([StateProvinceID], [TaxType]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:22.883</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_SalesTaxRate_StateProvinceID_TaxType</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>SalesTaxRate</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_SalesTaxRate_StateProvinceID_TaxType] ON [Sales].[SalesTaxRate]([StateProvinceID], [TaxType]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
221;14/10/2005 01:59:22;"dbo";"CREATE_INDEX";"Sales";"AK_SalesTaxRate_rowguid";"CREATE UNIQUE INDEX [AK_SalesTaxRate_rowguid] ON [Sales].[SalesTaxRate]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:22.883</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_SalesTaxRate_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>SalesTaxRate</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_SalesTaxRate_rowguid] ON [Sales].[SalesTaxRate]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
222;14/10/2005 01:59:22;"dbo";"CREATE_INDEX";"Sales";"AK_SalesTerritory_Name";"CREATE UNIQUE INDEX [AK_SalesTerritory_Name] ON [Sales].[SalesTerritory]([Name]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:22.990</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_SalesTerritory_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>SalesTerritory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_SalesTerritory_Name] ON [Sales].[SalesTerritory]([Name]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
223;14/10/2005 01:59:22;"dbo";"CREATE_INDEX";"Sales";"AK_SalesTerritory_rowguid";"CREATE UNIQUE INDEX [AK_SalesTerritory_rowguid] ON [Sales].[SalesTerritory]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:22.990</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_SalesTerritory_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>SalesTerritory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_SalesTerritory_rowguid] ON [Sales].[SalesTerritory]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
224;14/10/2005 01:59:23;"dbo";"CREATE_INDEX";"Sales";"AK_SalesTerritoryHistory_rowguid";"CREATE UNIQUE INDEX [AK_SalesTerritoryHistory_rowguid] ON [Sales].[SalesTerritoryHistory]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:23.100</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_SalesTerritoryHistory_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>SalesTerritoryHistory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_SalesTerritoryHistory_rowguid] ON [Sales].[SalesTerritoryHistory]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
225;14/10/2005 01:59:23;"dbo";"CREATE_INDEX";"Production";"AK_ScrapReason_Name";"CREATE UNIQUE INDEX [AK_ScrapReason_Name] ON [Production].[ScrapReason]([Name]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:23.210</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>AK_ScrapReason_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>ScrapReason</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_ScrapReason_Name] ON [Production].[ScrapReason]([Name]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
226;14/10/2005 01:59:23;"dbo";"CREATE_INDEX";"HumanResources";"AK_Shift_Name";"CREATE UNIQUE INDEX [AK_Shift_Name] ON [HumanResources].[Shift]([Name]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:23.320</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>AK_Shift_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Shift</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Shift_Name] ON [HumanResources].[Shift]([Name]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
227;14/10/2005 01:59:23;"dbo";"CREATE_INDEX";"HumanResources";"AK_Shift_StartTime_EndTime";"CREATE UNIQUE INDEX [AK_Shift_StartTime_EndTime] ON [HumanResources].[Shift]([StartTime], [EndTime]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:23.320</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>AK_Shift_StartTime_EndTime</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Shift</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Shift_StartTime_EndTime] ON [HumanResources].[Shift]([StartTime], [EndTime]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
228;14/10/2005 01:59:23;"dbo";"CREATE_INDEX";"Purchasing";"AK_ShipMethod_Name";"CREATE UNIQUE INDEX [AK_ShipMethod_Name] ON [Purchasing].[ShipMethod]([Name]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:23.430</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>AK_ShipMethod_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>ShipMethod</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_ShipMethod_Name] ON [Purchasing].[ShipMethod]([Name]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
229;14/10/2005 01:59:23;"dbo";"CREATE_INDEX";"Purchasing";"AK_ShipMethod_rowguid";"CREATE UNIQUE INDEX [AK_ShipMethod_rowguid] ON [Purchasing].[ShipMethod]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:23.430</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>AK_ShipMethod_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>ShipMethod</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_ShipMethod_rowguid] ON [Purchasing].[ShipMethod]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
230;14/10/2005 01:59:23;"dbo";"CREATE_INDEX";"Sales";"IX_ShoppingCartItem_ShoppingCartID_ProductID";"CREATE INDEX [IX_ShoppingCartItem_ShoppingCartID_ProductID] ON [Sales].[ShoppingCartItem]([ShoppingCartID], [ProductID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:23.537</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>IX_ShoppingCartItem_ShoppingCartID_ProductID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>ShoppingCartItem</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_ShoppingCartItem_ShoppingCartID_ProductID] ON [Sales].[ShoppingCartItem]([ShoppingCartID], [ProductID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
231;14/10/2005 01:59:23;"dbo";"CREATE_INDEX";"Sales";"AK_SpecialOffer_rowguid";"CREATE UNIQUE INDEX [AK_SpecialOffer_rowguid] ON [Sales].[SpecialOffer]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:23.647</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_SpecialOffer_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>SpecialOffer</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_SpecialOffer_rowguid] ON [Sales].[SpecialOffer]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
232;14/10/2005 01:59:23;"dbo";"CREATE_INDEX";"Sales";"AK_SpecialOfferProduct_rowguid";"CREATE UNIQUE INDEX [AK_SpecialOfferProduct_rowguid] ON [Sales].[SpecialOfferProduct]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:23.757</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_SpecialOfferProduct_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>SpecialOfferProduct</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_SpecialOfferProduct_rowguid] ON [Sales].[SpecialOfferProduct]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
233;14/10/2005 01:59:23;"dbo";"CREATE_INDEX";"Sales";"IX_SpecialOfferProduct_ProductID";"CREATE INDEX [IX_SpecialOfferProduct_ProductID] ON [Sales].[SpecialOfferProduct]([ProductID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:23.773</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>IX_SpecialOfferProduct_ProductID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>SpecialOfferProduct</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_SpecialOfferProduct_ProductID] ON [Sales].[SpecialOfferProduct]([ProductID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
234;14/10/2005 01:59:23;"dbo";"CREATE_INDEX";"Person";"AK_StateProvince_Name";"CREATE UNIQUE INDEX [AK_StateProvince_Name] ON [Person].[StateProvince]([Name]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:23.867</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>AK_StateProvince_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>StateProvince</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_StateProvince_Name] ON [Person].[StateProvince]([Name]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
235;14/10/2005 01:59:23;"dbo";"CREATE_INDEX";"Person";"AK_StateProvince_StateProvinceCode_CountryRegionCode";"CREATE UNIQUE INDEX [AK_StateProvince_StateProvinceCode_CountryRegionCode] ON [Person].[StateProvince]([StateProvinceCode], [CountryRegionCode]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:23.883</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>AK_StateProvince_StateProvinceCode_CountryRegionCode</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>StateProvince</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_StateProvince_StateProvinceCode_CountryRegionCode] ON [Person].[StateProvince]([StateProvinceCode], [CountryRegionCode]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
236;14/10/2005 01:59:23;"dbo";"CREATE_INDEX";"Person";"AK_StateProvince_rowguid";"CREATE UNIQUE INDEX [AK_StateProvince_rowguid] ON [Person].[StateProvince]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:23.883</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>AK_StateProvince_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>StateProvince</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_StateProvince_rowguid] ON [Person].[StateProvince]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
237;14/10/2005 01:59:23;"dbo";"CREATE_INDEX";"Sales";"AK_Store_rowguid";"CREATE UNIQUE INDEX [AK_Store_rowguid] ON [Sales].[Store]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:23.977</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_Store_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Store</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Store_rowguid] ON [Sales].[Store]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
238;14/10/2005 01:59:23;"dbo";"CREATE_INDEX";"Sales";"IX_Store_SalesPersonID";"CREATE INDEX [IX_Store_SalesPersonID] ON [Sales].[Store]([SalesPersonID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:23.990</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>IX_Store_SalesPersonID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Store</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_Store_SalesPersonID] ON [Sales].[Store]([SalesPersonID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
239;14/10/2005 01:59:24;"dbo";"CREATE_INDEX";"Sales";"AK_StoreContact_rowguid";"CREATE UNIQUE INDEX [AK_StoreContact_rowguid] ON [Sales].[StoreContact]([rowguid]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:24.087</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>AK_StoreContact_rowguid</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>StoreContact</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_StoreContact_rowguid] ON [Sales].[StoreContact]([rowguid]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
240;14/10/2005 01:59:24;"dbo";"CREATE_INDEX";"Sales";"IX_StoreContact_ContactID";"CREATE INDEX [IX_StoreContact_ContactID] ON [Sales].[StoreContact]([ContactID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:24.100</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>IX_StoreContact_ContactID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>StoreContact</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_StoreContact_ContactID] ON [Sales].[StoreContact]([ContactID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
241;14/10/2005 01:59:24;"dbo";"CREATE_INDEX";"Sales";"IX_StoreContact_ContactTypeID";"CREATE INDEX [IX_StoreContact_ContactTypeID] ON [Sales].[StoreContact]([ContactTypeID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:24.100</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>IX_StoreContact_ContactTypeID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>StoreContact</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_StoreContact_ContactTypeID] ON [Sales].[StoreContact]([ContactTypeID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
242;14/10/2005 01:59:24;"dbo";"CREATE_INDEX";"Production";"IX_TransactionHistory_ProductID";"CREATE INDEX [IX_TransactionHistory_ProductID] ON [Production].[TransactionHistory]([ProductID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:24.617</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>IX_TransactionHistory_ProductID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>TransactionHistory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_TransactionHistory_ProductID] ON [Production].[TransactionHistory]([ProductID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
243;14/10/2005 01:59:24;"dbo";"CREATE_INDEX";"Production";"IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID";"CREATE INDEX [IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID] ON [Production].[TransactionHistory]([ReferenceOrderID], [ReferenceOrderLineID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:24.977</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>TransactionHistory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID] ON [Production].[TransactionHistory]([ReferenceOrderID], [ReferenceOrderLineID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
244;14/10/2005 01:59:25;"dbo";"CREATE_INDEX";"Production";"IX_TransactionHistoryArchive_ProductID";"CREATE INDEX [IX_TransactionHistoryArchive_ProductID] ON [Production].[TransactionHistoryArchive]([ProductID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:25.383</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>IX_TransactionHistoryArchive_ProductID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>TransactionHistoryArchive</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_TransactionHistoryArchive_ProductID] ON [Production].[TransactionHistoryArchive]([ProductID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
245;14/10/2005 01:59:25;"dbo";"CREATE_INDEX";"Production";"IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID";"CREATE INDEX [IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID] ON [Production].[TransactionHistoryArchive]([ReferenceOrderID], [ReferenceOrderLineID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:25.680</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>TransactionHistoryArchive</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID] ON [Production].[TransactionHistoryArchive]([ReferenceOrderID], [ReferenceOrderLineID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
246;14/10/2005 01:59:25;"dbo";"CREATE_INDEX";"Production";"AK_UnitMeasure_Name";"CREATE UNIQUE INDEX [AK_UnitMeasure_Name] ON [Production].[UnitMeasure]([Name]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:25.757</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>AK_UnitMeasure_Name</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>UnitMeasure</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_UnitMeasure_Name] ON [Production].[UnitMeasure]([Name]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
247;14/10/2005 01:59:25;"dbo";"CREATE_INDEX";"Purchasing";"AK_Vendor_AccountNumber";"CREATE UNIQUE INDEX [AK_Vendor_AccountNumber] ON [Purchasing].[Vendor]([AccountNumber]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:25.867</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>AK_Vendor_AccountNumber</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>Vendor</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE INDEX [AK_Vendor_AccountNumber] ON [Purchasing].[Vendor]([AccountNumber]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
248;14/10/2005 01:59:25;"dbo";"CREATE_INDEX";"Purchasing";"IX_VendorAddress_AddressID";"CREATE INDEX [IX_VendorAddress_AddressID] ON [Purchasing].[VendorAddress]([AddressID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:25.977</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>IX_VendorAddress_AddressID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>VendorAddress</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_VendorAddress_AddressID] ON [Purchasing].[VendorAddress]([AddressID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
249;14/10/2005 01:59:26;"dbo";"CREATE_INDEX";"Purchasing";"IX_VendorContact_ContactID";"CREATE INDEX [IX_VendorContact_ContactID] ON [Purchasing].[VendorContact]([ContactID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:26.087</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>IX_VendorContact_ContactID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>VendorContact</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_VendorContact_ContactID] ON [Purchasing].[VendorContact]([ContactID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
250;14/10/2005 01:59:26;"dbo";"CREATE_INDEX";"Purchasing";"IX_VendorContact_ContactTypeID";"CREATE INDEX [IX_VendorContact_ContactTypeID] ON [Purchasing].[VendorContact]([ContactTypeID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:26.087</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>IX_VendorContact_ContactTypeID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>VendorContact</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_VendorContact_ContactTypeID] ON [Purchasing].[VendorContact]([ContactTypeID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
251;14/10/2005 01:59:29;"dbo";"CREATE_INDEX";"Production";"IX_WorkOrder_ScrapReasonID";"CREATE INDEX [IX_WorkOrder_ScrapReasonID] ON [Production].[WorkOrder]([ScrapReasonID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:29.037</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>IX_WorkOrder_ScrapReasonID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>WorkOrder</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_WorkOrder_ScrapReasonID] ON [Production].[WorkOrder]([ScrapReasonID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
252;14/10/2005 01:59:29;"dbo";"CREATE_INDEX";"Production";"IX_WorkOrder_ProductID";"CREATE INDEX [IX_WorkOrder_ProductID] ON [Production].[WorkOrder]([ProductID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:29.303</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>IX_WorkOrder_ProductID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>WorkOrder</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_WorkOrder_ProductID] ON [Production].[WorkOrder]([ProductID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
253;14/10/2005 01:59:29;"dbo";"CREATE_INDEX";"Production";"IX_WorkOrderRouting_ProductID";"CREATE INDEX [IX_WorkOrderRouting_ProductID] ON [Production].[WorkOrderRouting]([ProductID]) ON [PRIMARY];
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:29.587</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>IX_WorkOrderRouting_ProductID</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>WorkOrderRouting</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE INDEX [IX_WorkOrderRouting_ProductID] ON [Production].[WorkOrderRouting]([ProductID]) ON [PRIMARY];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
254;14/10/2005 01:59:29;"dbo";"CREATE_XML_INDEX";"Person";"PXML_Contact_AddContact";"CREATE PRIMARY XML INDEX [PXML_Contact_AddContact] ON [Person].[Contact]([AdditionalContactInfo]);
";"<EVENT_INSTANCE><EventType>CREATE_XML_INDEX</EventType><PostTime>2005-10-14T01:59:29.803</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>PXML_Contact_AddContact</ObjectName><ObjectType>XML INDEX</ObjectType><TargetObjectName>Contact</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><PrimaryXMLIndexName/><SecondaryXMLIndexType/><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE PRIMARY XML INDEX [PXML_Contact_AddContact] ON [Person].[Contact]([AdditionalContactInfo]);&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
255;14/10/2005 01:59:34;"dbo";"CREATE_XML_INDEX";"Sales";"PXML_Individual_Demographics";"CREATE PRIMARY XML INDEX [PXML_Individual_Demographics] ON [Sales].[Individual]([Demographics]);
";"<EVENT_INSTANCE><EventType>CREATE_XML_INDEX</EventType><PostTime>2005-10-14T01:59:34.070</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>PXML_Individual_Demographics</ObjectName><ObjectType>XML INDEX</ObjectType><TargetObjectName>Individual</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><PrimaryXMLIndexName/><SecondaryXMLIndexType/><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE PRIMARY XML INDEX [PXML_Individual_Demographics] ON [Sales].[Individual]([Demographics]);&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
256;14/10/2005 01:59:38;"dbo";"CREATE_XML_INDEX";"Sales";"XMLPATH_Individual_Demographics";"CREATE XML INDEX [XMLPATH_Individual_Demographics] ON [Sales].[Individual]([Demographics]) 
USING XML INDEX [PXML_Individual_Demographics] FOR PATH;
";"<EVENT_INSTANCE><EventType>CREATE_XML_INDEX</EventType><PostTime>2005-10-14T01:59:38.443</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>XMLPATH_Individual_Demographics</ObjectName><ObjectType>XML INDEX</ObjectType><TargetObjectName>Individual</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><PrimaryXMLIndexName>PXML_Individual_Demographics</PrimaryXMLIndexName><SecondaryXMLIndexType>P</SecondaryXMLIndexType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE XML INDEX [XMLPATH_Individual_Demographics] ON [Sales].[Individual]([Demographics]) &#x0D;
USING XML INDEX [PXML_Individual_Demographics] FOR PATH;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
257;14/10/2005 01:59:39;"dbo";"CREATE_XML_INDEX";"Sales";"XMLPROPERTY_Individual_Demographics";"CREATE XML INDEX [XMLPROPERTY_Individual_Demographics] ON [Sales].[Individual]([Demographics]) 
USING XML INDEX [PXML_Individual_Demographics] FOR PROPERTY;
";"<EVENT_INSTANCE><EventType>CREATE_XML_INDEX</EventType><PostTime>2005-10-14T01:59:39.850</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>XMLPROPERTY_Individual_Demographics</ObjectName><ObjectType>XML INDEX</ObjectType><TargetObjectName>Individual</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><PrimaryXMLIndexName>PXML_Individual_Demographics</PrimaryXMLIndexName><SecondaryXMLIndexType>R</SecondaryXMLIndexType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE XML INDEX [XMLPROPERTY_Individual_Demographics] ON [Sales].[Individual]([Demographics]) &#x0D;
USING XML INDEX [PXML_Individual_Demographics] FOR PROPERTY;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
258;14/10/2005 01:59:42;"dbo";"CREATE_XML_INDEX";"Sales";"XMLVALUE_Individual_Demographics";"CREATE XML INDEX [XMLVALUE_Individual_Demographics] ON [Sales].[Individual]([Demographics]) 
USING XML INDEX [PXML_Individual_Demographics] FOR VALUE;
";"<EVENT_INSTANCE><EventType>CREATE_XML_INDEX</EventType><PostTime>2005-10-14T01:59:42.960</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>XMLVALUE_Individual_Demographics</ObjectName><ObjectType>XML INDEX</ObjectType><TargetObjectName>Individual</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><PrimaryXMLIndexName>PXML_Individual_Demographics</PrimaryXMLIndexName><SecondaryXMLIndexType>V</SecondaryXMLIndexType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE XML INDEX [XMLVALUE_Individual_Demographics] ON [Sales].[Individual]([Demographics]) &#x0D;
USING XML INDEX [PXML_Individual_Demographics] FOR VALUE;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
259;14/10/2005 01:59:43;"dbo";"CREATE_XML_INDEX";"Sales";"PXML_Store_Demographics";"CREATE PRIMARY XML INDEX [PXML_Store_Demographics] ON [Sales].[Store]([Demographics]);
";"<EVENT_INSTANCE><EventType>CREATE_XML_INDEX</EventType><PostTime>2005-10-14T01:59:43.133</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>PXML_Store_Demographics</ObjectName><ObjectType>XML INDEX</ObjectType><TargetObjectName>Store</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><PrimaryXMLIndexName/><SecondaryXMLIndexType/><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE PRIMARY XML INDEX [PXML_Store_Demographics] ON [Sales].[Store]([Demographics]);&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
260;14/10/2005 01:59:43;"dbo";"CREATE_XML_INDEX";"Production";"PXML_ProductModel_CatalogDescription";"CREATE PRIMARY XML INDEX [PXML_ProductModel_CatalogDescription] ON [Production].[ProductModel]([CatalogDescription]);
";"<EVENT_INSTANCE><EventType>CREATE_XML_INDEX</EventType><PostTime>2005-10-14T01:59:43.240</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>PXML_ProductModel_CatalogDescription</ObjectName><ObjectType>XML INDEX</ObjectType><TargetObjectName>ProductModel</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><PrimaryXMLIndexName/><SecondaryXMLIndexType/><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE PRIMARY XML INDEX [PXML_ProductModel_CatalogDescription] ON [Production].[ProductModel]([CatalogDescription]);&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
261;14/10/2005 01:59:43;"dbo";"CREATE_XML_INDEX";"Production";"PXML_ProductModel_Instructions";"CREATE PRIMARY XML INDEX [PXML_ProductModel_Instructions] ON [Production].[ProductModel]([Instructions]);
";"<EVENT_INSTANCE><EventType>CREATE_XML_INDEX</EventType><PostTime>2005-10-14T01:59:43.337</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>PXML_ProductModel_Instructions</ObjectName><ObjectType>XML INDEX</ObjectType><TargetObjectName>ProductModel</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><PrimaryXMLIndexName/><SecondaryXMLIndexType/><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE PRIMARY XML INDEX [PXML_ProductModel_Instructions] ON [Production].[ProductModel]([Instructions]);&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
262;14/10/2005 01:59:43;"dbo";"ALTER_TABLE";"Person";"Address";"ALTER TABLE [Person].[Address] ADD 
    CONSTRAINT [FK_Address_StateProvince_StateProvinceID] FOREIGN KEY 
    (
        [StateProvinceID]
    ) REFERENCES [Person].[StateProvince](
        [StateProvinceID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:43.537</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>Address</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Person].[Address] ADD &#x0D;
    CONSTRAINT [FK_Address_StateProvince_StateProvinceID] FOREIGN KEY &#x0D;
    (&#x0D;
        [StateProvinceID]&#x0D;
    ) REFERENCES [Person].[StateProvince](&#x0D;
        [StateProvinceID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
263;14/10/2005 01:59:43;"dbo";"CREATE_STATISTICS";"Production";"_WA_Sys_00000003_0AD2A005";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:43.647</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>_WA_Sys_00000003_0AD2A005</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>BillOfMaterials</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
264;14/10/2005 01:59:43;"dbo";"ALTER_TABLE";"Production";"BillOfMaterials";"ALTER TABLE [Production].[BillOfMaterials] ADD 
    CONSTRAINT [FK_BillOfMaterials_Product_ProductAssemblyID] FOREIGN KEY 
    (
        [ProductAssemblyID]
    ) REFERENCES [Production].[Product](
        [ProductID]
    ),
    CONSTRAINT [FK_BillOfMaterials_Product_ComponentID] FOREIGN KEY 
    (
        [ComponentID]
    ) REFERENCES [Production].[Product](
        [ProductID]
    ),
    CONSTRAINT [FK_BillOfMaterials_UnitMeasure_UnitMeasureCode] FOREIGN KEY 
    (
        [UnitMeasureCode]
    ) REFERENCES [Production].[UnitMeasure](
        [UnitMeasureCode]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:43.693</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>BillOfMaterials</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[BillOfMaterials] ADD &#x0D;
    CONSTRAINT [FK_BillOfMaterials_Product_ProductAssemblyID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductAssemblyID]&#x0D;
    ) REFERENCES [Production].[Product](&#x0D;
        [ProductID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_BillOfMaterials_Product_ComponentID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ComponentID]&#x0D;
    ) REFERENCES [Production].[Product](&#x0D;
        [ProductID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_BillOfMaterials_UnitMeasure_UnitMeasureCode] FOREIGN KEY &#x0D;
    (&#x0D;
        [UnitMeasureCode]&#x0D;
    ) REFERENCES [Production].[UnitMeasure](&#x0D;
        [UnitMeasureCode]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
265;14/10/2005 01:59:43;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_00000002_182C9B23";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:43.787</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_00000002_182C9B23</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>ContactCreditCard</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
266;14/10/2005 01:59:43;"dbo";"ALTER_TABLE";"Sales";"ContactCreditCard";"ALTER TABLE [Sales].[ContactCreditCard] ADD 
    CONSTRAINT [FK_ContactCreditCard_Contact_ContactID] FOREIGN KEY 
    (
        [ContactID]
    ) REFERENCES [Person].[Contact](
        [ContactID]
    ),
    CONSTRAINT [FK_ContactCreditCard_CreditCard_CreditCardID] FOREIGN KEY 
    (
        [CreditCardID]
    ) REFERENCES [Sales].[CreditCard](
        [CreditCardID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:43.867</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>ContactCreditCard</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[ContactCreditCard] ADD &#x0D;
    CONSTRAINT [FK_ContactCreditCard_Contact_ContactID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ContactID]&#x0D;
    ) REFERENCES [Person].[Contact](&#x0D;
        [ContactID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_ContactCreditCard_CreditCard_CreditCardID] FOREIGN KEY &#x0D;
    (&#x0D;
        [CreditCardID]&#x0D;
    ) REFERENCES [Sales].[CreditCard](&#x0D;
        [CreditCardID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
267;14/10/2005 01:59:43;"dbo";"ALTER_TABLE";"Sales";"CountryRegionCurrency";"ALTER TABLE [Sales].[CountryRegionCurrency] ADD 
    CONSTRAINT [FK_CountryRegionCurrency_CountryRegion_CountryRegionCode] FOREIGN KEY 
    (
        [CountryRegionCode]
    ) REFERENCES [Person].[CountryRegion](
        [CountryRegionCode]
    ),
    CONSTRAINT [FK_CountryRegionCurrency_Currency_CurrencyCode] FOREIGN KEY 
    (
        [CurrencyCode]
    ) REFERENCES [Sales].[Currency](
        [CurrencyCode]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:43.977</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>CountryRegionCurrency</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[CountryRegionCurrency] ADD &#x0D;
    CONSTRAINT [FK_CountryRegionCurrency_CountryRegion_CountryRegionCode] FOREIGN KEY &#x0D;
    (&#x0D;
        [CountryRegionCode]&#x0D;
    ) REFERENCES [Person].[CountryRegion](&#x0D;
        [CountryRegionCode]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_CountryRegionCurrency_Currency_CurrencyCode] FOREIGN KEY &#x0D;
    (&#x0D;
        [CurrencyCode]&#x0D;
    ) REFERENCES [Sales].[Currency](&#x0D;
        [CurrencyCode]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
268;14/10/2005 01:59:44;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_00000003_25869641";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:44.100</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_00000003_25869641</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>CurrencyRate</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
269;14/10/2005 01:59:44;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_00000004_25869641";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:44.147</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_00000004_25869641</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>CurrencyRate</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
270;14/10/2005 01:59:44;"dbo";"ALTER_TABLE";"Sales";"CurrencyRate";"ALTER TABLE [Sales].[CurrencyRate] ADD 
    CONSTRAINT [FK_CurrencyRate_Currency_FromCurrencyCode] FOREIGN KEY 
    (
        [FromCurrencyCode]
    ) REFERENCES [Sales].[Currency](
        [CurrencyCode]
    ),
    CONSTRAINT [FK_CurrencyRate_Currency_ToCurrencyCode] FOREIGN KEY 
    (
        [ToCurrencyCode]
    ) REFERENCES [Sales].[Currency](
        [CurrencyCode]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:44.180</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>CurrencyRate</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[CurrencyRate] ADD &#x0D;
    CONSTRAINT [FK_CurrencyRate_Currency_FromCurrencyCode] FOREIGN KEY &#x0D;
    (&#x0D;
        [FromCurrencyCode]&#x0D;
    ) REFERENCES [Sales].[Currency](&#x0D;
        [CurrencyCode]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_CurrencyRate_Currency_ToCurrencyCode] FOREIGN KEY &#x0D;
    (&#x0D;
        [ToCurrencyCode]&#x0D;
    ) REFERENCES [Sales].[Currency](&#x0D;
        [CurrencyCode]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
271;14/10/2005 01:59:44;"dbo";"ALTER_TABLE";"Sales";"Customer";"ALTER TABLE [Sales].[Customer] ADD 
    CONSTRAINT [FK_Customer_SalesTerritory_TerritoryID] FOREIGN KEY 
    (
        [TerritoryID]
    ) REFERENCES [Sales].[SalesTerritory](
        [TerritoryID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:44.193</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>Customer</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[Customer] ADD &#x0D;
    CONSTRAINT [FK_Customer_SalesTerritory_TerritoryID] FOREIGN KEY &#x0D;
    (&#x0D;
        [TerritoryID]&#x0D;
    ) REFERENCES [Sales].[SalesTerritory](&#x0D;
        [TerritoryID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
272;14/10/2005 01:59:44;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_00000002_2B3F6F97";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:44.337</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_00000002_2B3F6F97</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>CustomerAddress</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
273;14/10/2005 01:59:44;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_00000003_2B3F6F97";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:44.367</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_00000003_2B3F6F97</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>CustomerAddress</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
274;14/10/2005 01:59:44;"dbo";"ALTER_TABLE";"Sales";"CustomerAddress";"ALTER TABLE [Sales].[CustomerAddress] ADD 
    CONSTRAINT [FK_CustomerAddress_Address_AddressID] FOREIGN KEY 
    (
        [AddressID]
    ) REFERENCES [Person].[Address](
        [AddressID]
    ),
    CONSTRAINT [FK_CustomerAddress_AddressType_AddressTypeID] FOREIGN KEY 
    (
        [AddressTypeID]
    ) REFERENCES [Person].[AddressType](
        [AddressTypeID]
    ),
    CONSTRAINT [FK_CustomerAddress_Customer_CustomerID] FOREIGN KEY 
    (
        [CustomerID]
    ) REFERENCES [Sales].[Customer](
        [CustomerID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:44.430</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>CustomerAddress</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[CustomerAddress] ADD &#x0D;
    CONSTRAINT [FK_CustomerAddress_Address_AddressID] FOREIGN KEY &#x0D;
    (&#x0D;
        [AddressID]&#x0D;
    ) REFERENCES [Person].[Address](&#x0D;
        [AddressID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_CustomerAddress_AddressType_AddressTypeID] FOREIGN KEY &#x0D;
    (&#x0D;
        [AddressTypeID]&#x0D;
    ) REFERENCES [Person].[AddressType](&#x0D;
        [AddressTypeID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_CustomerAddress_Customer_CustomerID] FOREIGN KEY &#x0D;
    (&#x0D;
        [CustomerID]&#x0D;
    ) REFERENCES [Sales].[Customer](&#x0D;
        [CustomerID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
275;14/10/2005 01:59:44;"dbo";"CREATE_STATISTICS";"HumanResources";"_WA_Sys_00000003_33D4B598";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:44.523</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>_WA_Sys_00000003_33D4B598</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>Employee</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
276;14/10/2005 01:59:44;"dbo";"ALTER_TABLE";"HumanResources";"Employee";"ALTER TABLE [HumanResources].[Employee] ADD 
    CONSTRAINT [FK_Employee_Employee_ManagerID] FOREIGN KEY 
    (
        [ManagerID]
    ) REFERENCES [HumanResources].[Employee](
        [EmployeeID]
    ),
    CONSTRAINT [FK_Employee_Contact_ContactID] FOREIGN KEY 
    (
        [ContactID]
    ) REFERENCES [Person].[Contact](
        [ContactID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:44.537</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>Employee</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [HumanResources].[Employee] ADD &#x0D;
    CONSTRAINT [FK_Employee_Employee_ManagerID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ManagerID]&#x0D;
    ) REFERENCES [HumanResources].[Employee](&#x0D;
        [EmployeeID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_Employee_Contact_ContactID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ContactID]&#x0D;
    ) REFERENCES [Person].[Contact](&#x0D;
        [ContactID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
277;14/10/2005 01:59:44;"dbo";"CREATE_STATISTICS";"HumanResources";"_WA_Sys_00000002_403A8C7D";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:44.633</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>_WA_Sys_00000002_403A8C7D</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>EmployeeAddress</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
278;14/10/2005 01:59:44;"dbo";"ALTER_TABLE";"HumanResources";"EmployeeAddress";"ALTER TABLE [HumanResources].[EmployeeAddress] ADD 
    CONSTRAINT [FK_EmployeeAddress_Address_AddressID] FOREIGN KEY 
    (
        [AddressID]
    ) REFERENCES [Person].[Address](
        [AddressID]
    ),
    CONSTRAINT [FK_EmployeeAddress_Employee_EmployeeID] FOREIGN KEY 
    (
        [EmployeeID]
    ) REFERENCES [HumanResources].[Employee](
        [EmployeeID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:44.647</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>EmployeeAddress</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [HumanResources].[EmployeeAddress] ADD &#x0D;
    CONSTRAINT [FK_EmployeeAddress_Address_AddressID] FOREIGN KEY &#x0D;
    (&#x0D;
        [AddressID]&#x0D;
    ) REFERENCES [Person].[Address](&#x0D;
        [AddressID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_EmployeeAddress_Employee_EmployeeID] FOREIGN KEY &#x0D;
    (&#x0D;
        [EmployeeID]&#x0D;
    ) REFERENCES [HumanResources].[Employee](&#x0D;
        [EmployeeID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
279;14/10/2005 01:59:44;"dbo";"ALTER_TABLE";"HumanResources";"EmployeeDepartmentHistory";"ALTER TABLE [HumanResources].[EmployeeDepartmentHistory] ADD 
    CONSTRAINT [FK_EmployeeDepartmentHistory_Department_DepartmentID] FOREIGN KEY 
    (
        [DepartmentID]
    ) REFERENCES [HumanResources].[Department](
        [DepartmentID]
    ),
    CONSTRAINT [FK_EmployeeDepartmentHistory_Employee_EmployeeID] FOREIGN KEY 
    (
        [EmployeeID]
    ) REFERENCES [HumanResources].[Employee](
        [EmployeeID]
    ),
    CONSTRAINT [FK_EmployeeDepartmentHistory_Shift_ShiftID] FOREIGN KEY 
    (
        [ShiftID]
    ) REFERENCES [HumanResources].[Shift](
        [ShiftID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:44.740</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>EmployeeDepartmentHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [HumanResources].[EmployeeDepartmentHistory] ADD &#x0D;
    CONSTRAINT [FK_EmployeeDepartmentHistory_Department_DepartmentID] FOREIGN KEY &#x0D;
    (&#x0D;
        [DepartmentID]&#x0D;
    ) REFERENCES [HumanResources].[Department](&#x0D;
        [DepartmentID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_EmployeeDepartmentHistory_Employee_EmployeeID] FOREIGN KEY &#x0D;
    (&#x0D;
        [EmployeeID]&#x0D;
    ) REFERENCES [HumanResources].[Employee](&#x0D;
        [EmployeeID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_EmployeeDepartmentHistory_Shift_ShiftID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ShiftID]&#x0D;
    ) REFERENCES [HumanResources].[Shift](&#x0D;
        [ShiftID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
280;14/10/2005 01:59:44;"dbo";"ALTER_TABLE";"HumanResources";"EmployeePayHistory";"ALTER TABLE [HumanResources].[EmployeePayHistory] ADD 
    CONSTRAINT [FK_EmployeePayHistory_Employee_EmployeeID] FOREIGN KEY 
    (
        [EmployeeID]
    ) REFERENCES [HumanResources].[Employee](
        [EmployeeID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:44.850</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>EmployeePayHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [HumanResources].[EmployeePayHistory] ADD &#x0D;
    CONSTRAINT [FK_EmployeePayHistory_Employee_EmployeeID] FOREIGN KEY &#x0D;
    (&#x0D;
        [EmployeeID]&#x0D;
    ) REFERENCES [HumanResources].[Employee](&#x0D;
        [EmployeeID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
281;14/10/2005 01:59:44;"dbo";"ALTER_TABLE";"Sales";"Individual";"ALTER TABLE [Sales].[Individual] ADD 
    CONSTRAINT [FK_Individual_Customer_CustomerID] FOREIGN KEY 
    (
        [CustomerID]
    ) REFERENCES [Sales].[Customer](
        [CustomerID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:44.977</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>Individual</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[Individual] ADD &#x0D;
    CONSTRAINT [FK_Individual_Customer_CustomerID] FOREIGN KEY &#x0D;
    (&#x0D;
        [CustomerID]&#x0D;
    ) REFERENCES [Sales].[Customer](&#x0D;
        [CustomerID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
282;14/10/2005 01:59:45;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_00000002_4BAC3F29";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:45.100</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_00000002_4BAC3F29</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>Individual</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
283;14/10/2005 01:59:45;"dbo";"ALTER_TABLE";"Sales";"Individual";"ALTER TABLE [Sales].[Individual] ADD 
    CONSTRAINT [FK_Individual_Contact_ContactID] FOREIGN KEY 
    (
        [ContactID]
    ) REFERENCES [Person].[Contact](
        [ContactID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:45.147</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>Individual</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[Individual] ADD &#x0D;
    CONSTRAINT [FK_Individual_Contact_ContactID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ContactID]&#x0D;
    ) REFERENCES [Person].[Contact](&#x0D;
        [ContactID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
284;14/10/2005 01:59:45;"dbo";"ALTER_TABLE";"HumanResources";"JobCandidate";"ALTER TABLE [HumanResources].[JobCandidate] ADD 
    CONSTRAINT [FK_JobCandidate_Employee_EmployeeID] FOREIGN KEY 
    (
        [EmployeeID]
    ) REFERENCES [HumanResources].[Employee](
        [EmployeeID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:45.180</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>JobCandidate</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [HumanResources].[JobCandidate] ADD &#x0D;
    CONSTRAINT [FK_JobCandidate_Employee_EmployeeID] FOREIGN KEY &#x0D;
    (&#x0D;
        [EmployeeID]&#x0D;
    ) REFERENCES [HumanResources].[Employee](&#x0D;
        [EmployeeID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
285;14/10/2005 01:59:45;"dbo";"CREATE_STATISTICS";"Production";"_WA_Sys_0000000C_5535A963";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:45.287</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>_WA_Sys_0000000C_5535A963</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>Product</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
286;14/10/2005 01:59:45;"dbo";"CREATE_STATISTICS";"Production";"_WA_Sys_0000000D_5535A963";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:45.287</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>_WA_Sys_0000000D_5535A963</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>Product</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
287;14/10/2005 01:59:45;"dbo";"CREATE_STATISTICS";"Production";"_WA_Sys_00000014_5535A963";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:45.303</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>_WA_Sys_00000014_5535A963</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>Product</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
288;14/10/2005 01:59:45;"dbo";"CREATE_STATISTICS";"Production";"_WA_Sys_00000013_5535A963";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:45.303</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>_WA_Sys_00000013_5535A963</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>Product</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
289;14/10/2005 01:59:45;"dbo";"ALTER_TABLE";"Production";"Product";"ALTER TABLE [Production].[Product] ADD 
    CONSTRAINT [FK_Product_UnitMeasure_SizeUnitMeasureCode] FOREIGN KEY 
    (
        [SizeUnitMeasureCode]
    ) REFERENCES [Production].[UnitMeasure](
        [UnitMeasureCode]
    ),
    CONSTRAINT [FK_Product_UnitMeasure_WeightUnitMeasureCode] FOREIGN KEY 
    (
        [WeightUnitMeasureCode]
    ) REFERENCES [Production].[UnitMeasure](
        [UnitMeasureCode]
    ),
    CONSTRAINT [FK_Product_ProductModel_ProductModelID] FOREIGN KEY 
    (
        [ProductModelID]
    ) REFERENCES [Production].[ProductModel](
        [ProductModelID]
    ),
    CONSTRAINT [FK_Product_ProductSubcategory_ProductSubcategoryID] FOREIGN KEY 
    (
        [ProductSubcategoryID]
    ) REFERENCES [Production].[ProductSubcategory](
        [ProductSubcategoryID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:45.320</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>Product</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[Product] ADD &#x0D;
    CONSTRAINT [FK_Product_UnitMeasure_SizeUnitMeasureCode] FOREIGN KEY &#x0D;
    (&#x0D;
        [SizeUnitMeasureCode]&#x0D;
    ) REFERENCES [Production].[UnitMeasure](&#x0D;
        [UnitMeasureCode]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_Product_UnitMeasure_WeightUnitMeasureCode] FOREIGN KEY &#x0D;
    (&#x0D;
        [WeightUnitMeasureCode]&#x0D;
    ) REFERENCES [Production].[UnitMeasure](&#x0D;
        [UnitMeasureCode]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_Product_ProductModel_ProductModelID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductModelID]&#x0D;
    ) REFERENCES [Production].[ProductModel](&#x0D;
        [ProductModelID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_Product_ProductSubcategory_ProductSubcategoryID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductSubcategoryID]&#x0D;
    ) REFERENCES [Production].[ProductSubcategory](&#x0D;
        [ProductSubcategoryID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
290;14/10/2005 01:59:45;"dbo";"ALTER_TABLE";"Production";"ProductCostHistory";"ALTER TABLE [Production].[ProductCostHistory] ADD 
    CONSTRAINT [FK_ProductCostHistory_Product_ProductID] FOREIGN KEY 
    (
        [ProductID]
    ) REFERENCES [Production].[Product](
        [ProductID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:45.397</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductCostHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductCostHistory] ADD &#x0D;
    CONSTRAINT [FK_ProductCostHistory_Product_ProductID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductID]&#x0D;
    ) REFERENCES [Production].[Product](&#x0D;
        [ProductID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
291;14/10/2005 01:59:45;"dbo";"CREATE_STATISTICS";"Production";"_WA_Sys_00000002_6D0D32F4";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:45.507</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>_WA_Sys_00000002_6D0D32F4</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>ProductDocument</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
292;14/10/2005 01:59:45;"dbo";"ALTER_TABLE";"Production";"ProductDocument";"ALTER TABLE [Production].[ProductDocument] ADD 
    CONSTRAINT [FK_ProductDocument_Product_ProductID] FOREIGN KEY 
    (
        [ProductID]
    ) REFERENCES [Production].[Product](
        [ProductID]
    ),
    CONSTRAINT [FK_ProductDocument_Document_DocumentID] FOREIGN KEY 
    (
        [DocumentID]
    ) REFERENCES [Production].[Document](
        [DocumentID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:45.507</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductDocument</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductDocument] ADD &#x0D;
    CONSTRAINT [FK_ProductDocument_Product_ProductID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductID]&#x0D;
    ) REFERENCES [Production].[Product](&#x0D;
        [ProductID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_ProductDocument_Document_DocumentID] FOREIGN KEY &#x0D;
    (&#x0D;
        [DocumentID]&#x0D;
    ) REFERENCES [Production].[Document](&#x0D;
        [DocumentID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
293;14/10/2005 01:59:45;"dbo";"CREATE_STATISTICS";"Production";"_WA_Sys_00000002_6EF57B66";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:45.617</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>_WA_Sys_00000002_6EF57B66</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>ProductInventory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
294;14/10/2005 01:59:45;"dbo";"ALTER_TABLE";"Production";"ProductInventory";"ALTER TABLE [Production].[ProductInventory] ADD 
    CONSTRAINT [FK_ProductInventory_Location_LocationID] FOREIGN KEY 
    (
        [LocationID]
    ) REFERENCES [Production].[Location](
        [LocationID]
    ),
    CONSTRAINT [FK_ProductInventory_Product_ProductID] FOREIGN KEY 
    (
        [ProductID]
    ) REFERENCES [Production].[Product](
        [ProductID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:45.633</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductInventory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductInventory] ADD &#x0D;
    CONSTRAINT [FK_ProductInventory_Location_LocationID] FOREIGN KEY &#x0D;
    (&#x0D;
        [LocationID]&#x0D;
    ) REFERENCES [Production].[Location](&#x0D;
        [LocationID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_ProductInventory_Product_ProductID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductID]&#x0D;
    ) REFERENCES [Production].[Product](&#x0D;
        [ProductID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
295;14/10/2005 01:59:45;"dbo";"ALTER_TABLE";"Production";"ProductListPriceHistory";"ALTER TABLE [Production].[ProductListPriceHistory] ADD 
    CONSTRAINT [FK_ProductListPriceHistory_Product_ProductID] FOREIGN KEY 
    (
        [ProductID]
    ) REFERENCES [Production].[Product](
        [ProductID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:45.727</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductListPriceHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductListPriceHistory] ADD &#x0D;
    CONSTRAINT [FK_ProductListPriceHistory_Product_ProductID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductID]&#x0D;
    ) REFERENCES [Production].[Product](&#x0D;
        [ProductID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
296;14/10/2005 01:59:45;"dbo";"CREATE_STATISTICS";"Production";"_WA_Sys_00000002_7B5B524B";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:45.837</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>_WA_Sys_00000002_7B5B524B</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>ProductModelIllustration</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
297;14/10/2005 01:59:45;"dbo";"ALTER_TABLE";"Production";"ProductModelIllustration";"ALTER TABLE [Production].[ProductModelIllustration] ADD 
    CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductModelID] FOREIGN KEY 
    (
        [ProductModelID]
    ) REFERENCES [Production].[ProductModel](
        [ProductModelID]
    ),
    CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID] FOREIGN KEY 
    (
        [IllustrationID]
    ) REFERENCES [Production].[Illustration](
        [IllustrationID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:45.837</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductModelIllustration</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductModelIllustration] ADD &#x0D;
    CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductModelID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductModelID]&#x0D;
    ) REFERENCES [Production].[ProductModel](&#x0D;
        [ProductModelID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID] FOREIGN KEY &#x0D;
    (&#x0D;
        [IllustrationID]&#x0D;
    ) REFERENCES [Production].[Illustration](&#x0D;
        [IllustrationID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
298;14/10/2005 01:59:45;"dbo";"CREATE_STATISTICS";"Production";"_WA_Sys_00000002_7D439ABD";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:45.943</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>_WA_Sys_00000002_7D439ABD</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>ProductModelProductDescriptionCulture</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
299;14/10/2005 01:59:45;"dbo";"CREATE_STATISTICS";"Production";"_WA_Sys_00000003_7D439ABD";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:45.943</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>_WA_Sys_00000003_7D439ABD</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>ProductModelProductDescriptionCulture</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
300;14/10/2005 01:59:45;"dbo";"ALTER_TABLE";"Production";"ProductModelProductDescriptionCulture";"ALTER TABLE [Production].[ProductModelProductDescriptionCulture] ADD 
    CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID] FOREIGN KEY 
    (
        [ProductDescriptionID]
    ) REFERENCES [Production].[ProductDescription](
        [ProductDescriptionID]
    ),
    CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID] FOREIGN KEY 
    (
        [CultureID]
    ) REFERENCES [Production].[Culture]
    (
        [CultureID]
    ),
    CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID] FOREIGN KEY 
    (
        [ProductModelID]
    ) REFERENCES [Production].[ProductModel](
        [ProductModelID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:45.960</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductModelProductDescriptionCulture</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductModelProductDescriptionCulture] ADD &#x0D;
    CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductDescriptionID]&#x0D;
    ) REFERENCES [Production].[ProductDescription](&#x0D;
        [ProductDescriptionID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID] FOREIGN KEY &#x0D;
    (&#x0D;
        [CultureID]&#x0D;
    ) REFERENCES [Production].[Culture]&#x0D;
    (&#x0D;
        [CultureID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductModelID]&#x0D;
    ) REFERENCES [Production].[ProductModel](&#x0D;
        [ProductModelID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
301;14/10/2005 01:59:46;"dbo";"CREATE_STATISTICS";"Production";"_WA_Sys_00000002_01142BA1";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:46.053</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>_WA_Sys_00000002_01142BA1</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>ProductProductPhoto</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
302;14/10/2005 01:59:46;"dbo";"ALTER_TABLE";"Production";"ProductProductPhoto";"ALTER TABLE [Production].[ProductProductPhoto] ADD
    CONSTRAINT [FK_ProductProductPhoto_Product_ProductID] FOREIGN KEY 
    (
        [ProductID]
    ) REFERENCES [Production].[Product](
        [ProductID]
    ),
    CONSTRAINT [FK_ProductProductPhoto_ProductPhoto_ProductPhotoID] FOREIGN KEY 
    (
        [ProductPhotoID]
    ) REFERENCES [Production].[ProductPhoto](
        [ProductPhotoID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:46.070</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductProductPhoto</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductProductPhoto] ADD&#x0D;
    CONSTRAINT [FK_ProductProductPhoto_Product_ProductID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductID]&#x0D;
    ) REFERENCES [Production].[Product](&#x0D;
        [ProductID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_ProductProductPhoto_ProductPhoto_ProductPhotoID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductPhotoID]&#x0D;
    ) REFERENCES [Production].[ProductPhoto](&#x0D;
        [ProductPhotoID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
303;14/10/2005 01:59:46;"dbo";"ALTER_TABLE";"Production";"ProductReview";"ALTER TABLE [Production].[ProductReview] ADD 
    CONSTRAINT [FK_ProductReview_Product_ProductID] FOREIGN KEY 
    (
        [ProductID]
    ) REFERENCES [Production].[Product](
        [ProductID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:46.163</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductReview</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductReview] ADD &#x0D;
    CONSTRAINT [FK_ProductReview_Product_ProductID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductID]&#x0D;
    ) REFERENCES [Production].[Product](&#x0D;
        [ProductID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
304;14/10/2005 01:59:46;"dbo";"CREATE_STATISTICS";"Production";"_WA_Sys_00000002_07C12930";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:46.273</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>_WA_Sys_00000002_07C12930</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>ProductSubcategory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
305;14/10/2005 01:59:46;"dbo";"ALTER_TABLE";"Production";"ProductSubcategory";"ALTER TABLE [Production].[ProductSubcategory] ADD 
    CONSTRAINT [FK_ProductSubcategory_ProductCategory_ProductCategoryID] FOREIGN KEY 
    (
        [ProductCategoryID]
    ) REFERENCES [Production].[ProductCategory](
        [ProductCategoryID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:46.273</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>ProductSubcategory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[ProductSubcategory] ADD &#x0D;
    CONSTRAINT [FK_ProductSubcategory_ProductCategory_ProductCategoryID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductCategoryID]&#x0D;
    ) REFERENCES [Production].[ProductCategory](&#x0D;
        [ProductCategoryID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
306;14/10/2005 01:59:46;"dbo";"ALTER_TABLE";"Purchasing";"ProductVendor";"ALTER TABLE [Purchasing].[ProductVendor] ADD 
    CONSTRAINT [FK_ProductVendor_Product_ProductID] FOREIGN KEY 
    (
        [ProductID]
    ) REFERENCES [Production].[Product](
        [ProductID]
    ),
    CONSTRAINT [FK_ProductVendor_UnitMeasure_UnitMeasureCode] FOREIGN KEY 
    (
        [UnitMeasureCode]
    ) REFERENCES [Production].[UnitMeasure](
        [UnitMeasureCode]
    ),
    CONSTRAINT [FK_ProductVendor_Vendor_VendorID] FOREIGN KEY 
    (
        [VendorID]
    ) REFERENCES [Purchasing].[Vendor](
        [VendorID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:46.397</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>ProductVendor</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Purchasing].[ProductVendor] ADD &#x0D;
    CONSTRAINT [FK_ProductVendor_Product_ProductID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductID]&#x0D;
    ) REFERENCES [Production].[Product](&#x0D;
        [ProductID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_ProductVendor_UnitMeasure_UnitMeasureCode] FOREIGN KEY &#x0D;
    (&#x0D;
        [UnitMeasureCode]&#x0D;
    ) REFERENCES [Production].[UnitMeasure](&#x0D;
        [UnitMeasureCode]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_ProductVendor_Vendor_VendorID] FOREIGN KEY &#x0D;
    (&#x0D;
        [VendorID]&#x0D;
    ) REFERENCES [Purchasing].[Vendor](&#x0D;
        [VendorID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
307;14/10/2005 01:59:46;"dbo";"ALTER_TABLE";"Purchasing";"PurchaseOrderDetail";"ALTER TABLE [Purchasing].[PurchaseOrderDetail] ADD 
    CONSTRAINT [FK_PurchaseOrderDetail_Product_ProductID] FOREIGN KEY 
    (
        [ProductID]
    ) REFERENCES [Production].[Product](
        [ProductID]
    ),
    CONSTRAINT [FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID] FOREIGN KEY 
    (
        [PurchaseOrderID]
    ) REFERENCES [Purchasing].[PurchaseOrderHeader](
        [PurchaseOrderID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:46.587</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>PurchaseOrderDetail</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Purchasing].[PurchaseOrderDetail] ADD &#x0D;
    CONSTRAINT [FK_PurchaseOrderDetail_Product_ProductID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductID]&#x0D;
    ) REFERENCES [Production].[Product](&#x0D;
        [ProductID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID] FOREIGN KEY &#x0D;
    (&#x0D;
        [PurchaseOrderID]&#x0D;
    ) REFERENCES [Purchasing].[PurchaseOrderHeader](&#x0D;
        [PurchaseOrderID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
308;14/10/2005 01:59:46;"dbo";"CREATE_STATISTICS";"Purchasing";"_WA_Sys_00000006_17F790F9";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:46.617</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>_WA_Sys_00000006_17F790F9</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>PurchaseOrderHeader</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
309;14/10/2005 01:59:46;"dbo";"ALTER_TABLE";"Purchasing";"PurchaseOrderHeader";"ALTER TABLE [Purchasing].[PurchaseOrderHeader] ADD 
    CONSTRAINT [FK_PurchaseOrderHeader_Employee_EmployeeID] FOREIGN KEY 
    (
        [EmployeeID]
    ) REFERENCES [HumanResources].[Employee](
        [EmployeeID]
    ),
    CONSTRAINT [FK_PurchaseOrderHeader_Vendor_VendorID] FOREIGN KEY 
    (
        [VendorID]
    ) REFERENCES [Purchasing].[Vendor](
        [VendorID]
    ),
    CONSTRAINT [FK_PurchaseOrderHeader_ShipMethod_ShipMethodID] FOREIGN KEY 
    (
        [ShipMethodID]
    ) REFERENCES [Purchasing].[ShipMethod](
        [ShipMethodID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:46.633</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>PurchaseOrderHeader</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Purchasing].[PurchaseOrderHeader] ADD &#x0D;
    CONSTRAINT [FK_PurchaseOrderHeader_Employee_EmployeeID] FOREIGN KEY &#x0D;
    (&#x0D;
        [EmployeeID]&#x0D;
    ) REFERENCES [HumanResources].[Employee](&#x0D;
        [EmployeeID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_PurchaseOrderHeader_Vendor_VendorID] FOREIGN KEY &#x0D;
    (&#x0D;
        [VendorID]&#x0D;
    ) REFERENCES [Purchasing].[Vendor](&#x0D;
        [VendorID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_PurchaseOrderHeader_ShipMethod_ShipMethodID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ShipMethodID]&#x0D;
    ) REFERENCES [Purchasing].[ShipMethod](&#x0D;
        [ShipMethodID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
310;14/10/2005 01:59:46;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_00000006_245D67DE";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:46.977</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_00000006_245D67DE</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>SalesOrderDetail</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
311;14/10/2005 01:59:47;"dbo";"ALTER_TABLE";"Sales";"SalesOrderDetail";"ALTER TABLE [Sales].[SalesOrderDetail] ADD 
    CONSTRAINT [FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID] FOREIGN KEY 
    (
        [SalesOrderID]
    ) REFERENCES [Sales].[SalesOrderHeader](
        [SalesOrderID]
    ) ON DELETE CASCADE,
    CONSTRAINT [FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID] FOREIGN KEY 
    (
        [SpecialOfferID],
        [ProductID]
    ) REFERENCES [Sales].[SpecialOfferProduct](
        [SpecialOfferID],
        [ProductID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:47.180</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesOrderDetail</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SalesOrderDetail] ADD &#x0D;
    CONSTRAINT [FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID] FOREIGN KEY &#x0D;
    (&#x0D;
        [SalesOrderID]&#x0D;
    ) REFERENCES [Sales].[SalesOrderHeader](&#x0D;
        [SalesOrderID]&#x0D;
    ) ON DELETE CASCADE,&#x0D;
    CONSTRAINT [FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID] FOREIGN KEY &#x0D;
    (&#x0D;
        [SpecialOfferID],&#x0D;
        [ProductID]&#x0D;
    ) REFERENCES [Sales].[SpecialOfferProduct](&#x0D;
        [SpecialOfferID],&#x0D;
        [ProductID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
312;14/10/2005 01:59:47;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_0000000F_2B0A656D";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:47.337</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_0000000F_2B0A656D</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>SalesOrderHeader</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
313;14/10/2005 01:59:47;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_00000010_2B0A656D";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:47.397</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_00000010_2B0A656D</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>SalesOrderHeader</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
314;14/10/2005 01:59:47;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_0000000C_2B0A656D";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:47.477</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_0000000C_2B0A656D</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>SalesOrderHeader</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
315;14/10/2005 01:59:47;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_00000012_2B0A656D";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:47.553</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_00000012_2B0A656D</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>SalesOrderHeader</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
316;14/10/2005 01:59:47;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_00000014_2B0A656D";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:47.600</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_00000014_2B0A656D</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>SalesOrderHeader</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
317;14/10/2005 01:59:47;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_00000011_2B0A656D";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:47.647</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_00000011_2B0A656D</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>SalesOrderHeader</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
318;14/10/2005 01:59:47;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_0000000E_2B0A656D";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:47.710</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_0000000E_2B0A656D</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>SalesOrderHeader</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
319;14/10/2005 01:59:48;"dbo";"ALTER_TABLE";"Sales";"SalesOrderHeader";"ALTER TABLE [Sales].[SalesOrderHeader] ADD 
    CONSTRAINT [FK_SalesOrderHeader_Address_BillToAddressID] FOREIGN KEY 
    (
        [BillToAddressID]
    ) REFERENCES [Person].[Address](
        [AddressID]
    ),
    CONSTRAINT [FK_SalesOrderHeader_Address_ShipToAddressID] FOREIGN KEY 
    (
        [ShipToAddressID]
    ) REFERENCES [Person].[Address](
        [AddressID]
    ),
    CONSTRAINT [FK_SalesOrderHeader_Contact_ContactID] FOREIGN KEY 
    (
        [ContactID]
    ) REFERENCES [Person].[Contact](
        [ContactID]
    ),
    CONSTRAINT [FK_SalesOrderHeader_CreditCard_CreditCardID] FOREIGN KEY 
    (
        [CreditCardID]
    ) REFERENCES [Sales].[CreditCard](
        [CreditCardID]
    ),
    CONSTRAINT [FK_SalesOrderHeader_CurrencyRate_CurrencyRateID] FOREIGN KEY 
    (
        [CurrencyRateID]
    ) REFERENCES [Sales].[CurrencyRate](
        [CurrencyRateID]
    ),
    CONSTRAINT [FK_SalesOrderHeader_Customer_CustomerID] FOREIGN KEY 
    (
        [CustomerID]
    ) REFERENCES [Sales].[Customer](
        [CustomerID]
    ),
    CONSTRAINT [FK_SalesOrderHeader_SalesPerson_SalesPersonID] FOREIGN KEY 
    (
        [SalesPersonID]
    ) REFERENCES [Sales].[SalesPerson](
        [SalesPersonID]
    ),
    CONSTRAINT [FK_SalesOrderHeader_ShipMethod_ShipMethodID] FOREIGN KEY 
    (
        [ShipMethodID]
    ) REFERENCES [Purchasing].[ShipMethod](
        [ShipMethodID]
    ),
    CONSTRAINT [FK_SalesOrderHeader_SalesTerritory_TerritoryID] FOREIGN KEY 
    (
        [TerritoryID]
    ) REFERENCES [Sales].[SalesTerritory](
        [TerritoryID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:48.023</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesOrderHeader</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SalesOrderHeader] ADD &#x0D;
    CONSTRAINT [FK_SalesOrderHeader_Address_BillToAddressID] FOREIGN KEY &#x0D;
    (&#x0D;
        [BillToAddressID]&#x0D;
    ) REFERENCES [Person].[Address](&#x0D;
        [AddressID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_SalesOrderHeader_Address_ShipToAddressID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ShipToAddressID]&#x0D;
    ) REFERENCES [Person].[Address](&#x0D;
        [AddressID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_SalesOrderHeader_Contact_ContactID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ContactID]&#x0D;
    ) REFERENCES [Person].[Contact](&#x0D;
        [ContactID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_SalesOrderHeader_CreditCard_CreditCardID] FOREIGN KEY &#x0D;
    (&#x0D;
        [CreditCardID]&#x0D;
    ) REFERENCES [Sales].[CreditCard](&#x0D;
        [CreditCardID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_SalesOrderHeader_CurrencyRate_CurrencyRateID] FOREIGN KEY &#x0D;
    (&#x0D;
        [CurrencyRateID]&#x0D;
    ) REFERENCES [Sales].[CurrencyRate](&#x0D;
        [CurrencyRateID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_SalesOrderHeader_Customer_CustomerID] FOREIGN KEY &#x0D;
    (&#x0D;
        [CustomerID]&#x0D;
    ) REFERENCES [Sales].[Customer](&#x0D;
        [CustomerID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_SalesOrderHeader_SalesPerson_SalesPersonID] FOREIGN KEY &#x0D;
    (&#x0D;
        [SalesPersonID]&#x0D;
    ) REFERENCES [Sales].[SalesPerson](&#x0D;
        [SalesPersonID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_SalesOrderHeader_ShipMethod_ShipMethodID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ShipMethodID]&#x0D;
    ) REFERENCES [Purchasing].[ShipMethod](&#x0D;
        [ShipMethodID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_SalesOrderHeader_SalesTerritory_TerritoryID] FOREIGN KEY &#x0D;
    (&#x0D;
        [TerritoryID]&#x0D;
    ) REFERENCES [Sales].[SalesTerritory](&#x0D;
        [TerritoryID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
320;14/10/2005 01:59:48;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_00000002_3A4CA8FD";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:48.180</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_00000002_3A4CA8FD</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>SalesOrderHeaderSalesReason</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
321;14/10/2005 01:59:48;"dbo";"ALTER_TABLE";"Sales";"SalesOrderHeaderSalesReason";"ALTER TABLE [Sales].[SalesOrderHeaderSalesReason] ADD 
    CONSTRAINT [FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID] FOREIGN KEY 
    (
        [SalesReasonID]
    ) REFERENCES [Sales].[SalesReason](
        [SalesReasonID]
    ),
    CONSTRAINT [FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID] FOREIGN KEY 
    (
        [SalesOrderID]
    ) REFERENCES [Sales].[SalesOrderHeader](
        [SalesOrderID]
    ) ON DELETE CASCADE;
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:48.240</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesOrderHeaderSalesReason</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SalesOrderHeaderSalesReason] ADD &#x0D;
    CONSTRAINT [FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID] FOREIGN KEY &#x0D;
    (&#x0D;
        [SalesReasonID]&#x0D;
    ) REFERENCES [Sales].[SalesReason](&#x0D;
        [SalesReasonID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID] FOREIGN KEY &#x0D;
    (&#x0D;
        [SalesOrderID]&#x0D;
    ) REFERENCES [Sales].[SalesOrderHeader](&#x0D;
        [SalesOrderID]&#x0D;
    ) ON DELETE CASCADE;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
322;14/10/2005 01:59:48;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_00000002_3C34F16F";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:48.350</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_00000002_3C34F16F</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>SalesPerson</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
323;14/10/2005 01:59:48;"dbo";"ALTER_TABLE";"Sales";"SalesPerson";"ALTER TABLE [Sales].[SalesPerson] ADD 
    CONSTRAINT [FK_SalesPerson_Employee_SalesPersonID] FOREIGN KEY 
    (
        [SalesPersonID]
    ) REFERENCES [HumanResources].[Employee](
        [EmployeeID]
    ),
    CONSTRAINT [FK_SalesPerson_SalesTerritory_TerritoryID] FOREIGN KEY 
    (
        [TerritoryID]
    ) REFERENCES [Sales].[SalesTerritory](
        [TerritoryID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:48.350</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesPerson</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SalesPerson] ADD &#x0D;
    CONSTRAINT [FK_SalesPerson_Employee_SalesPersonID] FOREIGN KEY &#x0D;
    (&#x0D;
        [SalesPersonID]&#x0D;
    ) REFERENCES [HumanResources].[Employee](&#x0D;
        [EmployeeID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_SalesPerson_SalesTerritory_TerritoryID] FOREIGN KEY &#x0D;
    (&#x0D;
        [TerritoryID]&#x0D;
    ) REFERENCES [Sales].[SalesTerritory](&#x0D;
        [TerritoryID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
324;14/10/2005 01:59:48;"dbo";"ALTER_TABLE";"Sales";"SalesPersonQuotaHistory";"ALTER TABLE [Sales].[SalesPersonQuotaHistory] ADD 
    CONSTRAINT [FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID] FOREIGN KEY 
    (
        [SalesPersonID]
    ) REFERENCES [Sales].[SalesPerson](
        [SalesPersonID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:48.460</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesPersonQuotaHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SalesPersonQuotaHistory] ADD &#x0D;
    CONSTRAINT [FK_SalesPersonQuotaHistory_SalesPerson_SalesPersonID] FOREIGN KEY &#x0D;
    (&#x0D;
        [SalesPersonID]&#x0D;
    ) REFERENCES [Sales].[SalesPerson](&#x0D;
        [SalesPersonID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
325;14/10/2005 01:59:48;"dbo";"ALTER_TABLE";"Sales";"SalesTaxRate";"ALTER TABLE [Sales].[SalesTaxRate] ADD 
    CONSTRAINT [FK_SalesTaxRate_StateProvince_StateProvinceID] FOREIGN KEY 
    (
        [StateProvinceID]
    ) REFERENCES [Person].[StateProvince](
        [StateProvinceID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:48.570</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesTaxRate</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SalesTaxRate] ADD &#x0D;
    CONSTRAINT [FK_SalesTaxRate_StateProvince_StateProvinceID] FOREIGN KEY &#x0D;
    (&#x0D;
        [StateProvinceID]&#x0D;
    ) REFERENCES [Person].[StateProvince](&#x0D;
        [StateProvinceID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
326;14/10/2005 01:59:48;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_00000002_5CA1C101";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:48.680</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_00000002_5CA1C101</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>SalesTerritoryHistory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
327;14/10/2005 01:59:48;"dbo";"ALTER_TABLE";"Sales";"SalesTerritoryHistory";"ALTER TABLE [Sales].[SalesTerritoryHistory] ADD 
    CONSTRAINT [FK_SalesTerritoryHistory_SalesPerson_SalesPersonID] FOREIGN KEY 
    (
        [SalesPersonID]
    ) REFERENCES [Sales].[SalesPerson](
        [SalesPersonID]
    ),
    CONSTRAINT [FK_SalesTerritoryHistory_SalesTerritory_TerritoryID] FOREIGN KEY 
    (
        [TerritoryID]
    ) REFERENCES [Sales].[SalesTerritory](
        [TerritoryID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:48.680</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SalesTerritoryHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SalesTerritoryHistory] ADD &#x0D;
    CONSTRAINT [FK_SalesTerritoryHistory_SalesPerson_SalesPersonID] FOREIGN KEY &#x0D;
    (&#x0D;
        [SalesPersonID]&#x0D;
    ) REFERENCES [Sales].[SalesPerson](&#x0D;
        [SalesPersonID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_SalesTerritoryHistory_SalesTerritory_TerritoryID] FOREIGN KEY &#x0D;
    (&#x0D;
        [TerritoryID]&#x0D;
    ) REFERENCES [Sales].[SalesTerritory](&#x0D;
        [TerritoryID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
328;14/10/2005 01:59:48;"dbo";"CREATE_STATISTICS";"Sales";"_WA_Sys_00000004_6AEFE058";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:48.787</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>_WA_Sys_00000004_6AEFE058</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>ShoppingCartItem</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
329;14/10/2005 01:59:48;"dbo";"ALTER_TABLE";"Sales";"ShoppingCartItem";"ALTER TABLE [Sales].[ShoppingCartItem] ADD 
    CONSTRAINT [FK_ShoppingCartItem_Product_ProductID] FOREIGN KEY 
    (
        [ProductID]
    ) REFERENCES [Production].[Product](
        [ProductID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:48.787</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>ShoppingCartItem</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[ShoppingCartItem] ADD &#x0D;
    CONSTRAINT [FK_ShoppingCartItem_Product_ProductID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductID]&#x0D;
    ) REFERENCES [Production].[Product](&#x0D;
        [ProductID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
330;14/10/2005 01:59:48;"dbo";"ALTER_TABLE";"Sales";"SpecialOfferProduct";"ALTER TABLE [Sales].[SpecialOfferProduct] ADD 
    CONSTRAINT [FK_SpecialOfferProduct_Product_ProductID] FOREIGN KEY 
    (
        [ProductID]
    ) REFERENCES [Production].[Product](
        [ProductID]
    ),
    CONSTRAINT [FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID] FOREIGN KEY 
    (
        [SpecialOfferID]
    ) REFERENCES [Sales].[SpecialOffer](
        [SpecialOfferID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:48.897</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>SpecialOfferProduct</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[SpecialOfferProduct] ADD &#x0D;
    CONSTRAINT [FK_SpecialOfferProduct_Product_ProductID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductID]&#x0D;
    ) REFERENCES [Production].[Product](&#x0D;
        [ProductID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID] FOREIGN KEY &#x0D;
    (&#x0D;
        [SpecialOfferID]&#x0D;
    ) REFERENCES [Sales].[SpecialOffer](&#x0D;
        [SpecialOfferID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
331;14/10/2005 01:59:49;"dbo";"CREATE_STATISTICS";"Person";"_WA_Sys_00000003_7B264821";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:49.007</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>_WA_Sys_00000003_7B264821</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>StateProvince</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
332;14/10/2005 01:59:49;"dbo";"CREATE_STATISTICS";"Person";"_WA_Sys_00000006_7B264821";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:49.007</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>_WA_Sys_00000006_7B264821</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>StateProvince</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
333;14/10/2005 01:59:49;"dbo";"ALTER_TABLE";"Person";"StateProvince";"ALTER TABLE [Person].[StateProvince] ADD 
    CONSTRAINT [FK_StateProvince_CountryRegion_CountryRegionCode] FOREIGN KEY 
    (
        [CountryRegionCode]
    ) REFERENCES [Person].[CountryRegion](
        [CountryRegionCode]
    ), 
    CONSTRAINT [FK_StateProvince_SalesTerritory_TerritoryID] FOREIGN KEY 
    (
        [TerritoryID]
    ) REFERENCES [Sales].[SalesTerritory](
        [TerritoryID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:49.023</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>StateProvince</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Person].[StateProvince] ADD &#x0D;
    CONSTRAINT [FK_StateProvince_CountryRegion_CountryRegionCode] FOREIGN KEY &#x0D;
    (&#x0D;
        [CountryRegionCode]&#x0D;
    ) REFERENCES [Person].[CountryRegion](&#x0D;
        [CountryRegionCode]&#x0D;
    ), &#x0D;
    CONSTRAINT [FK_StateProvince_SalesTerritory_TerritoryID] FOREIGN KEY &#x0D;
    (&#x0D;
        [TerritoryID]&#x0D;
    ) REFERENCES [Sales].[SalesTerritory](&#x0D;
        [TerritoryID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
334;14/10/2005 01:59:49;"dbo";"ALTER_TABLE";"Sales";"Store";"ALTER TABLE [Sales].[Store] ADD 
    CONSTRAINT [FK_Store_Customer_CustomerID] FOREIGN KEY 
    (
        [CustomerID]
    ) REFERENCES [Sales].[Customer](
        [CustomerID]
    ),
    CONSTRAINT [FK_Store_SalesPerson_SalesPersonID] FOREIGN KEY 
    (
        [SalesPersonID]
    ) REFERENCES [Sales].[SalesPerson](
        [SalesPersonID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:49.117</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>Store</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[Store] ADD &#x0D;
    CONSTRAINT [FK_Store_Customer_CustomerID] FOREIGN KEY &#x0D;
    (&#x0D;
        [CustomerID]&#x0D;
    ) REFERENCES [Sales].[Customer](&#x0D;
        [CustomerID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_Store_SalesPerson_SalesPersonID] FOREIGN KEY &#x0D;
    (&#x0D;
        [SalesPersonID]&#x0D;
    ) REFERENCES [Sales].[SalesPerson](&#x0D;
        [SalesPersonID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
335;14/10/2005 01:59:49;"dbo";"ALTER_TABLE";"Sales";"StoreContact";"ALTER TABLE [Sales].[StoreContact] ADD 
    CONSTRAINT [FK_StoreContact_Contact_ContactID] FOREIGN KEY 
    (
        [ContactID]
    ) REFERENCES [Person].[Contact](
        [ContactID]
    ),
    CONSTRAINT [FK_StoreContact_ContactType_ContactTypeID] FOREIGN KEY 
    (
        [ContactTypeID]
    ) REFERENCES [Person].[ContactType](
        [ContactTypeID]
    ),
    CONSTRAINT [FK_StoreContact_Store_CustomerID] FOREIGN KEY 
    (
        [CustomerID]
    ) REFERENCES [Sales].[Store](
        [CustomerID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:49.240</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>StoreContact</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Sales].[StoreContact] ADD &#x0D;
    CONSTRAINT [FK_StoreContact_Contact_ContactID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ContactID]&#x0D;
    ) REFERENCES [Person].[Contact](&#x0D;
        [ContactID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_StoreContact_ContactType_ContactTypeID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ContactTypeID]&#x0D;
    ) REFERENCES [Person].[ContactType](&#x0D;
        [ContactTypeID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_StoreContact_Store_CustomerID] FOREIGN KEY &#x0D;
    (&#x0D;
        [CustomerID]&#x0D;
    ) REFERENCES [Sales].[Store](&#x0D;
        [CustomerID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
336;14/10/2005 01:59:49;"dbo";"ALTER_TABLE";"Production";"TransactionHistory";"ALTER TABLE [Production].[TransactionHistory] ADD 
    CONSTRAINT [FK_TransactionHistory_Product_ProductID] FOREIGN KEY 
    (
        [ProductID]
    ) REFERENCES [Production].[Product](
        [ProductID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:49.367</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>TransactionHistory</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[TransactionHistory] ADD &#x0D;
    CONSTRAINT [FK_TransactionHistory_Product_ProductID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductID]&#x0D;
    ) REFERENCES [Production].[Product](&#x0D;
        [ProductID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
337;14/10/2005 01:59:49;"dbo";"CREATE_STATISTICS";"Purchasing";"_WA_Sys_00000003_14E61A24";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:49.443</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>_WA_Sys_00000003_14E61A24</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>VendorAddress</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
338;14/10/2005 01:59:49;"dbo";"ALTER_TABLE";"Purchasing";"VendorAddress";"ALTER TABLE [Purchasing].[VendorAddress] ADD 
    CONSTRAINT [FK_VendorAddress_Address_AddressID] FOREIGN KEY 
    (
        [AddressID]
    ) REFERENCES [Person].[Address](
        [AddressID]
    ),
    CONSTRAINT [FK_VendorAddress_AddressType_AddressTypeID] FOREIGN KEY 
    (
        [AddressTypeID]
    ) REFERENCES [Person].[AddressType](
        [AddressTypeID]
    ),
    CONSTRAINT [FK_VendorAddress_Vendor_VendorID] FOREIGN KEY 
    (
        [VendorID]
    ) REFERENCES [Purchasing].[Vendor](
        [VendorID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:49.460</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>VendorAddress</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Purchasing].[VendorAddress] ADD &#x0D;
    CONSTRAINT [FK_VendorAddress_Address_AddressID] FOREIGN KEY &#x0D;
    (&#x0D;
        [AddressID]&#x0D;
    ) REFERENCES [Person].[Address](&#x0D;
        [AddressID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_VendorAddress_AddressType_AddressTypeID] FOREIGN KEY &#x0D;
    (&#x0D;
        [AddressTypeID]&#x0D;
    ) REFERENCES [Person].[AddressType](&#x0D;
        [AddressTypeID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_VendorAddress_Vendor_VendorID] FOREIGN KEY &#x0D;
    (&#x0D;
        [VendorID]&#x0D;
    ) REFERENCES [Purchasing].[Vendor](&#x0D;
        [VendorID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
339;14/10/2005 01:59:49;"dbo";"ALTER_TABLE";"Purchasing";"VendorContact";"ALTER TABLE [Purchasing].[VendorContact] ADD 
    CONSTRAINT [FK_VendorContact_Contact_ContactID] FOREIGN KEY 
    (
        [ContactID]
    ) REFERENCES [Person].[Contact](
        [ContactID]
    ),
    CONSTRAINT [FK_VendorContact_ContactType_ContactTypeID] FOREIGN KEY 
    (
        [ContactTypeID]
    ) REFERENCES [Person].[ContactType](
        [ContactTypeID]
    ),
    CONSTRAINT [FK_VendorContact_Vendor_VendorID] FOREIGN KEY 
    (
        [VendorID]
    ) REFERENCES [Purchasing].[Vendor](
        [VendorID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:49.570</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>VendorContact</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Purchasing].[VendorContact] ADD &#x0D;
    CONSTRAINT [FK_VendorContact_Contact_ContactID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ContactID]&#x0D;
    ) REFERENCES [Person].[Contact](&#x0D;
        [ContactID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_VendorContact_ContactType_ContactTypeID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ContactTypeID]&#x0D;
    ) REFERENCES [Person].[ContactType](&#x0D;
        [ContactTypeID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_VendorContact_Vendor_VendorID] FOREIGN KEY &#x0D;
    (&#x0D;
        [VendorID]&#x0D;
    ) REFERENCES [Purchasing].[Vendor](&#x0D;
        [VendorID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
340;14/10/2005 01:59:49;"dbo";"ALTER_TABLE";"Production";"WorkOrder";"ALTER TABLE [Production].[WorkOrder] ADD 
    CONSTRAINT [FK_WorkOrder_Product_ProductID] FOREIGN KEY 
    (
        [ProductID]
    ) REFERENCES [Production].[Product](
        [ProductID]
    ),
    CONSTRAINT [FK_WorkOrder_ScrapReason_ScrapReasonID] FOREIGN KEY 
    (
        [ScrapReasonID]
    ) REFERENCES [Production].[ScrapReason](
        [ScrapReasonID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:49.693</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>WorkOrder</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[WorkOrder] ADD &#x0D;
    CONSTRAINT [FK_WorkOrder_Product_ProductID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ProductID]&#x0D;
    ) REFERENCES [Production].[Product](&#x0D;
        [ProductID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_WorkOrder_ScrapReason_ScrapReasonID] FOREIGN KEY &#x0D;
    (&#x0D;
        [ScrapReasonID]&#x0D;
    ) REFERENCES [Production].[ScrapReason](&#x0D;
        [ScrapReasonID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
341;14/10/2005 01:59:49;"dbo";"CREATE_STATISTICS";"Production";"_WA_Sys_00000004_1D7B6025";"--ENCRYPTED--";"<EVENT_INSTANCE><EventType>CREATE_STATISTICS</EventType><PostTime>2005-10-14T01:59:49.960</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>_WA_Sys_00000004_1D7B6025</ObjectName><ObjectType>STATISTICS</ObjectType><TargetObjectName>WorkOrderRouting</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""TRUE""/><CommandText>--ENCRYPTED--</CommandText></TSQLCommand></EVENT_INSTANCE>"
342;14/10/2005 01:59:50;"dbo";"ALTER_TABLE";"Production";"WorkOrderRouting";"ALTER TABLE [Production].[WorkOrderRouting] ADD 
    CONSTRAINT [FK_WorkOrderRouting_Location_LocationID] FOREIGN KEY 
    (
        [LocationID]
    ) REFERENCES [Production].[Location](
        [LocationID]
    ),
    CONSTRAINT [FK_WorkOrderRouting_WorkOrder_WorkOrderID] FOREIGN KEY 
    (
        [WorkOrderID]
    ) REFERENCES [Production].[WorkOrder](
        [WorkOrderID]
    );
";"<EVENT_INSTANCE><EventType>ALTER_TABLE</EventType><PostTime>2005-10-14T01:59:50.100</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>WorkOrderRouting</ObjectName><ObjectType>TABLE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>ALTER TABLE [Production].[WorkOrderRouting] ADD &#x0D;
    CONSTRAINT [FK_WorkOrderRouting_Location_LocationID] FOREIGN KEY &#x0D;
    (&#x0D;
        [LocationID]&#x0D;
    ) REFERENCES [Production].[Location](&#x0D;
        [LocationID]&#x0D;
    ),&#x0D;
    CONSTRAINT [FK_WorkOrderRouting_WorkOrder_WorkOrderID] FOREIGN KEY &#x0D;
    (&#x0D;
        [WorkOrderID]&#x0D;
    ) REFERENCES [Production].[WorkOrder](&#x0D;
        [WorkOrderID]&#x0D;
    );&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
343;14/10/2005 01:59:50;"dbo";"CREATE_TRIGGER";"Person";"uAddress";"
CREATE TRIGGER [Person].[uAddress] ON [Person].[Address] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Person].[Address]
    SET [Person].[Address].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[AddressID] = [Person].[Address].[AddressID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:50.320</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>uAddress</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Address</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Person].[uAddress] ON [Person].[Address] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Person].[Address]&#x0D;
    SET [Person].[Address].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[AddressID] = [Person].[Address].[AddressID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
344;14/10/2005 01:59:50;"dbo";"CREATE_TRIGGER";"Person";"uAddressType";"
CREATE TRIGGER [Person].[uAddressType] ON [Person].[AddressType] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Person].[AddressType]
    SET [Person].[AddressType].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[AddressTypeID] = [Person].[AddressType].[AddressTypeID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:50.430</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>uAddressType</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>AddressType</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Person].[uAddressType] ON [Person].[AddressType] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Person].[AddressType]&#x0D;
    SET [Person].[AddressType].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[AddressTypeID] = [Person].[AddressType].[AddressTypeID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
345;14/10/2005 01:59:50;"dbo";"CREATE_TRIGGER";"dbo";"uAWBuildVersion";"
CREATE TRIGGER [dbo].[uAWBuildVersion] ON [dbo].[AWBuildVersion] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [dbo].[AWBuildVersion]
    SET [dbo].[AWBuildVersion].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[SystemInformationID] = [dbo].[AWBuildVersion].[SystemInformationID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:50.537</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>uAWBuildVersion</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>AWBuildVersion</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [dbo].[uAWBuildVersion] ON [dbo].[AWBuildVersion] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [dbo].[AWBuildVersion]&#x0D;
    SET [dbo].[AWBuildVersion].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[SystemInformationID] = [dbo].[AWBuildVersion].[SystemInformationID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
346;14/10/2005 01:59:50;"dbo";"CREATE_TRIGGER";"Production";"uBillOfMaterials";"
CREATE TRIGGER [Production].[uBillOfMaterials] ON [Production].[BillOfMaterials] 
AFTER UPDATE NOT FOR REPLICATION  AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[BillOfMaterials]
    SET [Production].[BillOfMaterials].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[BillOfMaterialsID] = [Production].[BillOfMaterials].[BillOfMaterialsID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:50.647</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uBillOfMaterials</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>BillOfMaterials</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uBillOfMaterials] ON [Production].[BillOfMaterials] &#x0D;
AFTER UPDATE NOT FOR REPLICATION  AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[BillOfMaterials]&#x0D;
    SET [Production].[BillOfMaterials].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[BillOfMaterialsID] = [Production].[BillOfMaterials].[BillOfMaterialsID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
347;14/10/2005 01:59:50;"dbo";"CREATE_TRIGGER";"Person";"uContact";"
CREATE TRIGGER [Person].[uContact] ON [Person].[Contact] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Person].[Contact] 
    SET [Person].[Contact].[ModifiedDate] = GETDATE() 
    FROM inserted 
    WHERE inserted.[ContactID] = [Person].[Contact].[ContactID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:50.757</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>uContact</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Contact</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Person].[uContact] ON [Person].[Contact] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Person].[Contact] &#x0D;
    SET [Person].[Contact].[ModifiedDate] = GETDATE() &#x0D;
    FROM inserted &#x0D;
    WHERE inserted.[ContactID] = [Person].[Contact].[ContactID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
348;14/10/2005 01:59:50;"dbo";"CREATE_TRIGGER";"Sales";"uContactCreditCard";"
CREATE TRIGGER [Sales].[uContactCreditCard] ON [Sales].[ContactCreditCard] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Sales].[ContactCreditCard]
    SET [Sales].[ContactCreditCard].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[ContactID] = [Sales].[ContactCreditCard].[ContactID]
        AND inserted.[CreditCardID] = [Sales].[ContactCreditCard].[CreditCardID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:50.867</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uContactCreditCard</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ContactCreditCard</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uContactCreditCard] ON [Sales].[ContactCreditCard] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Sales].[ContactCreditCard]&#x0D;
    SET [Sales].[ContactCreditCard].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[ContactID] = [Sales].[ContactCreditCard].[ContactID]&#x0D;
        AND inserted.[CreditCardID] = [Sales].[ContactCreditCard].[CreditCardID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
349;14/10/2005 01:59:50;"dbo";"CREATE_TRIGGER";"Person";"uContactType";"
CREATE TRIGGER [Person].[uContactType] ON [Person].[ContactType] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Person].[ContactType]
    SET [Person].[ContactType].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[ContactTypeID] = [Person].[ContactType].[ContactTypeID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:50.977</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>uContactType</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ContactType</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Person].[uContactType] ON [Person].[ContactType] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Person].[ContactType]&#x0D;
    SET [Person].[ContactType].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[ContactTypeID] = [Person].[ContactType].[ContactTypeID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
350;14/10/2005 01:59:51;"dbo";"CREATE_TRIGGER";"Sales";"uCountryRegionCurrency";"
CREATE TRIGGER [Sales].[uCountryRegionCurrency] ON [Sales].[CountryRegionCurrency] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Sales].[CountryRegionCurrency]
    SET [Sales].[CountryRegionCurrency].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[CountryRegionCode] = [Sales].[CountryRegionCurrency].[CountryRegionCode]
        AND inserted.[CurrencyCode] = [Sales].[CountryRegionCurrency].[CurrencyCode];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:51.087</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uCountryRegionCurrency</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>CountryRegionCurrency</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uCountryRegionCurrency] ON [Sales].[CountryRegionCurrency] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Sales].[CountryRegionCurrency]&#x0D;
    SET [Sales].[CountryRegionCurrency].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[CountryRegionCode] = [Sales].[CountryRegionCurrency].[CountryRegionCode]&#x0D;
        AND inserted.[CurrencyCode] = [Sales].[CountryRegionCurrency].[CurrencyCode];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
351;14/10/2005 01:59:51;"dbo";"CREATE_TRIGGER";"Person";"uCountryRegion";"
CREATE TRIGGER [Person].[uCountryRegion] ON [Person].[CountryRegion] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Person].[CountryRegion]
    SET [Person].[CountryRegion].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[CountryRegionCode] = [Person].[CountryRegion].[CountryRegionCode];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:51.193</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>uCountryRegion</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>CountryRegion</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Person].[uCountryRegion] ON [Person].[CountryRegion] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Person].[CountryRegion]&#x0D;
    SET [Person].[CountryRegion].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[CountryRegionCode] = [Person].[CountryRegion].[CountryRegionCode];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
352;14/10/2005 01:59:51;"dbo";"CREATE_TRIGGER";"Sales";"uCreditCard";"
CREATE TRIGGER [Sales].[uCreditCard] ON [Sales].[CreditCard] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Sales].[CreditCard]
    SET [Sales].[CreditCard].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[CreditCardID] = [Sales].[CreditCard].[CreditCardID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:51.303</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uCreditCard</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>CreditCard</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uCreditCard] ON [Sales].[CreditCard] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Sales].[CreditCard]&#x0D;
    SET [Sales].[CreditCard].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[CreditCardID] = [Sales].[CreditCard].[CreditCardID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
353;14/10/2005 01:59:51;"dbo";"CREATE_TRIGGER";"Production";"uCulture";"
CREATE TRIGGER [Production].[uCulture] ON [Production].[Culture] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[Culture]
    SET [Production].[Culture].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[CultureID] = [Production].[Culture].[CultureID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:51.413</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uCulture</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Culture</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uCulture] ON [Production].[Culture] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[Culture]&#x0D;
    SET [Production].[Culture].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[CultureID] = [Production].[Culture].[CultureID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
354;14/10/2005 01:59:51;"dbo";"CREATE_TRIGGER";"Sales";"uCurrency";"
CREATE TRIGGER [Sales].[uCurrency] ON [Sales].[Currency] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Sales].[Currency]
    SET [Sales].[Currency].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[CurrencyCode] = [Sales].[Currency].[CurrencyCode];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:51.523</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uCurrency</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Currency</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uCurrency] ON [Sales].[Currency] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Sales].[Currency]&#x0D;
    SET [Sales].[Currency].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[CurrencyCode] = [Sales].[Currency].[CurrencyCode];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
355;14/10/2005 01:59:51;"dbo";"CREATE_TRIGGER";"Sales";"uCurrencyRate";"
CREATE TRIGGER [Sales].[uCurrencyRate] ON [Sales].[CurrencyRate] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Sales].[CurrencyRate]
    SET [Sales].[CurrencyRate].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[CurrencyRateID] = [Sales].[CurrencyRate].[CurrencyRateID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:51.633</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uCurrencyRate</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>CurrencyRate</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uCurrencyRate] ON [Sales].[CurrencyRate] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Sales].[CurrencyRate]&#x0D;
    SET [Sales].[CurrencyRate].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[CurrencyRateID] = [Sales].[CurrencyRate].[CurrencyRateID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
356;14/10/2005 01:59:51;"dbo";"CREATE_TRIGGER";"Sales";"uCustomer";"
CREATE TRIGGER [Sales].[uCustomer] ON [Sales].[Customer] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Sales].[Customer]
    SET [Sales].[Customer].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[CustomerID] = [Sales].[Customer].[CustomerID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:51.740</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uCustomer</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Customer</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uCustomer] ON [Sales].[Customer] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Sales].[Customer]&#x0D;
    SET [Sales].[Customer].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[CustomerID] = [Sales].[Customer].[CustomerID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
357;14/10/2005 01:59:51;"dbo";"CREATE_TRIGGER";"Sales";"uCustomerAddress";"
CREATE TRIGGER [Sales].[uCustomerAddress] ON [Sales].[CustomerAddress] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Sales].[CustomerAddress]
    SET [Sales].[CustomerAddress].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[CustomerID] = [Sales].[CustomerAddress].[CustomerID]
        AND inserted.[AddressID] = [Sales].[CustomerAddress].[AddressID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:51.850</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uCustomerAddress</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>CustomerAddress</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uCustomerAddress] ON [Sales].[CustomerAddress] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Sales].[CustomerAddress]&#x0D;
    SET [Sales].[CustomerAddress].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[CustomerID] = [Sales].[CustomerAddress].[CustomerID]&#x0D;
        AND inserted.[AddressID] = [Sales].[CustomerAddress].[AddressID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
358;14/10/2005 01:59:51;"dbo";"CREATE_TRIGGER";"HumanResources";"uDepartment";"
CREATE TRIGGER [HumanResources].[uDepartment] ON [HumanResources].[Department] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [HumanResources].[Department]
    SET [HumanResources].[Department].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[DepartmentID] = [HumanResources].[Department].[DepartmentID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:51.960</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>uDepartment</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Department</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [HumanResources].[uDepartment] ON [HumanResources].[Department] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [HumanResources].[Department]&#x0D;
    SET [HumanResources].[Department].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[DepartmentID] = [HumanResources].[Department].[DepartmentID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
359;14/10/2005 01:59:52;"dbo";"CREATE_TRIGGER";"Production";"uDocument";"
CREATE TRIGGER [Production].[uDocument] ON [Production].[Document] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[Document]
    SET [Production].[Document].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[DocumentID] = [Production].[Document].[DocumentID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:52.070</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uDocument</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Document</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uDocument] ON [Production].[Document] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[Document]&#x0D;
    SET [Production].[Document].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[DocumentID] = [Production].[Document].[DocumentID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
360;14/10/2005 01:59:52;"dbo";"CREATE_TRIGGER";"HumanResources";"dEmployee";"
CREATE TRIGGER [HumanResources].[dEmployee] ON [HumanResources].[Employee] 
INSTEAD OF DELETE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    DECLARE @DeleteCount int;

    SELECT @DeleteCount = COUNT(*) FROM deleted;
    IF @DeleteCount > 0 
    BEGIN
        RAISERROR
            (N'Employees cannot be deleted. They can only be marked as not current.', -- Message
            10, -- Severity.
            1); -- State.

        -- Rollback any active or uncommittable transactions
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END
    END;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:52.180</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>dEmployee</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Employee</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [HumanResources].[dEmployee] ON [HumanResources].[Employee] &#x0D;
INSTEAD OF DELETE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    DECLARE @DeleteCount int;&#x0D;
&#x0D;
    SELECT @DeleteCount = COUNT(*) FROM deleted;&#x0D;
    IF @DeleteCount &gt; 0 &#x0D;
    BEGIN&#x0D;
        RAISERROR&#x0D;
            (N'Employees cannot be deleted. They can only be marked as not current.', -- Message&#x0D;
            10, -- Severity.&#x0D;
            1); -- State.&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
    END;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
361;14/10/2005 01:59:52;"dbo";"CREATE_TRIGGER";"HumanResources";"uEmployee";"
CREATE TRIGGER [HumanResources].[uEmployee] ON [HumanResources].[Employee] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [HumanResources].[Employee]
    SET [HumanResources].[Employee].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[EmployeeID] = [HumanResources].[Employee].[EmployeeID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:52.287</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>uEmployee</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Employee</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [HumanResources].[uEmployee] ON [HumanResources].[Employee] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [HumanResources].[Employee]&#x0D;
    SET [HumanResources].[Employee].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[EmployeeID] = [HumanResources].[Employee].[EmployeeID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
362;14/10/2005 01:59:52;"dbo";"CREATE_TRIGGER";"HumanResources";"uEmployeeAddress";"
CREATE TRIGGER [HumanResources].[uEmployeeAddress] ON [HumanResources].[EmployeeAddress] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [HumanResources].[EmployeeAddress]
    SET [HumanResources].[EmployeeAddress].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[EmployeeID] = [HumanResources].[EmployeeAddress].[EmployeeID]
        AND inserted.[AddressID] = [HumanResources].[EmployeeAddress].[AddressID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:52.397</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>uEmployeeAddress</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>EmployeeAddress</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [HumanResources].[uEmployeeAddress] ON [HumanResources].[EmployeeAddress] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [HumanResources].[EmployeeAddress]&#x0D;
    SET [HumanResources].[EmployeeAddress].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[EmployeeID] = [HumanResources].[EmployeeAddress].[EmployeeID]&#x0D;
        AND inserted.[AddressID] = [HumanResources].[EmployeeAddress].[AddressID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
363;14/10/2005 01:59:52;"dbo";"CREATE_TRIGGER";"HumanResources";"uEmployeeDepartmentHistory";"
CREATE TRIGGER [HumanResources].[uEmployeeDepartmentHistory] ON [HumanResources].[EmployeeDepartmentHistory] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [HumanResources].[EmployeeDepartmentHistory]
    SET [HumanResources].[EmployeeDepartmentHistory].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[EmployeeID] = [HumanResources].[EmployeeDepartmentHistory].[EmployeeID]
        AND inserted.[DepartmentID] = [HumanResources].[EmployeeDepartmentHistory].[DepartmentID]
        AND inserted.[StartDate] = [HumanResources].[EmployeeDepartmentHistory].[StartDate]
        AND inserted.[ShiftID] = [HumanResources].[EmployeeDepartmentHistory].[ShiftID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:52.507</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>uEmployeeDepartmentHistory</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>EmployeeDepartmentHistory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [HumanResources].[uEmployeeDepartmentHistory] ON [HumanResources].[EmployeeDepartmentHistory] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [HumanResources].[EmployeeDepartmentHistory]&#x0D;
    SET [HumanResources].[EmployeeDepartmentHistory].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[EmployeeID] = [HumanResources].[EmployeeDepartmentHistory].[EmployeeID]&#x0D;
        AND inserted.[DepartmentID] = [HumanResources].[EmployeeDepartmentHistory].[DepartmentID]&#x0D;
        AND inserted.[StartDate] = [HumanResources].[EmployeeDepartmentHistory].[StartDate]&#x0D;
        AND inserted.[ShiftID] = [HumanResources].[EmployeeDepartmentHistory].[ShiftID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
364;14/10/2005 01:59:52;"dbo";"CREATE_TRIGGER";"HumanResources";"uEmployeePayHistory";"
CREATE TRIGGER [HumanResources].[uEmployeePayHistory] ON [HumanResources].[EmployeePayHistory] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [HumanResources].[EmployeePayHistory]
    SET [HumanResources].[EmployeePayHistory].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[EmployeeID] = [HumanResources].[EmployeePayHistory].[EmployeeID]
        AND inserted.[RateChangeDate] = [HumanResources].[EmployeePayHistory].[RateChangeDate];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:52.617</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>uEmployeePayHistory</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>EmployeePayHistory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [HumanResources].[uEmployeePayHistory] ON [HumanResources].[EmployeePayHistory] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [HumanResources].[EmployeePayHistory]&#x0D;
    SET [HumanResources].[EmployeePayHistory].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[EmployeeID] = [HumanResources].[EmployeePayHistory].[EmployeeID]&#x0D;
        AND inserted.[RateChangeDate] = [HumanResources].[EmployeePayHistory].[RateChangeDate];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
365;14/10/2005 01:59:52;"dbo";"CREATE_TRIGGER";"Production";"uIllustration";"
CREATE TRIGGER [Production].[uIllustration] ON [Production].[Illustration] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[Illustration]
    SET [Production].[Illustration].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[IllustrationID] = [Production].[Illustration].[IllustrationID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:52.727</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uIllustration</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Illustration</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uIllustration] ON [Production].[Illustration] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[Illustration]&#x0D;
    SET [Production].[Illustration].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[IllustrationID] = [Production].[Illustration].[IllustrationID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
366;14/10/2005 01:59:52;"dbo";"CREATE_TRIGGER";"Sales";"iuIndividual";"
CREATE TRIGGER [Sales].[iuIndividual] ON [Sales].[Individual] 
AFTER INSERT, UPDATE NOT FOR REPLICATION 
AS 
BEGIN
    SET NOCOUNT ON;

    -- Only allow the Customer to be a Store OR Individual
    IF EXISTS (SELECT * FROM inserted INNER JOIN [Sales].[Store] 
        ON inserted.[CustomerID] = [Sales].[Store].[CustomerID]) 
    BEGIN
        -- Rollback any active or uncommittable transactions
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END
    END;

    IF UPDATE([CustomerID]) OR UPDATE([Demographics]) 
    BEGIN
        UPDATE [Sales].[Individual] 
        SET [Sales].[Individual].[Demographics] = N'<IndividualSurvey xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""> 
            <TotalPurchaseYTD>0.00</TotalPurchaseYTD> 
            </IndividualSurvey>' 
        FROM inserted 
        WHERE [Sales].[Individual].[CustomerID] = inserted.[CustomerID] 
            AND inserted.[Demographics] IS NULL;
        
        UPDATE [Sales].[Individual] 
        SET [Demographics].modify(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; 
            insert <TotalPurchaseYTD>0.00</TotalPurchaseYTD> 
            as first 
            into (/IndividualSurvey)[1]') 
        FROM inserted 
        WHERE [Sales].[Individual].[CustomerID] = inserted.[CustomerID] 
            AND inserted.[Demographics] IS NOT NULL 
            AND inserted.[Demographics].exist(N'declare default element namespace 
                ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; 
                /IndividualSurvey/TotalPurchaseYTD') <> 1;
    END;

    UPDATE [Sales].[Individual]
    SET [Sales].[Individual].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[CustomerID] = [Sales].[Individual].[CustomerID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:52.850</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>iuIndividual</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Individual</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[iuIndividual] ON [Sales].[Individual] &#x0D;
AFTER INSERT, UPDATE NOT FOR REPLICATION &#x0D;
AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    -- Only allow the Customer to be a Store OR Individual&#x0D;
    IF EXISTS (SELECT * FROM inserted INNER JOIN [Sales].[Store] &#x0D;
        ON inserted.[CustomerID] = [Sales].[Store].[CustomerID]) &#x0D;
    BEGIN&#x0D;
        -- Rollback any active or uncommittable transactions&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
    END;&#x0D;
&#x0D;
    IF UPDATE([CustomerID]) OR UPDATE([Demographics]) &#x0D;
    BEGIN&#x0D;
        UPDATE [Sales].[Individual] &#x0D;
        SET [Sales].[Individual].[Demographics] = N'&lt;IndividualSurvey xmlns=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""&gt; &#x0D;
            &lt;TotalPurchaseYTD&gt;0.00&lt;/TotalPurchaseYTD&gt; &#x0D;
            &lt;/IndividualSurvey&gt;' &#x0D;
        FROM inserted &#x0D;
        WHERE [Sales].[Individual].[CustomerID] = inserted.[CustomerID] &#x0D;
            AND inserted.[Demographics] IS NULL;&#x0D;
        &#x0D;
        UPDATE [Sales].[Individual] &#x0D;
        SET [Demographics].modify(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; &#x0D;
            insert &lt;TotalPurchaseYTD&gt;0.00&lt;/TotalPurchaseYTD&gt; &#x0D;
            as first &#x0D;
            into (/IndividualSurvey)[1]') &#x0D;
        FROM inserted &#x0D;
        WHERE [Sales].[Individual].[CustomerID] = inserted.[CustomerID] &#x0D;
            AND inserted.[Demographics] IS NOT NULL &#x0D;
            AND inserted.[Demographics].exist(N'declare default element namespace &#x0D;
                ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; &#x0D;
                /IndividualSurvey/TotalPurchaseYTD') &lt;&gt; 1;&#x0D;
    END;&#x0D;
&#x0D;
    UPDATE [Sales].[Individual]&#x0D;
    SET [Sales].[Individual].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[CustomerID] = [Sales].[Individual].[CustomerID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
367;14/10/2005 01:59:52;"dbo";"CREATE_TRIGGER";"HumanResources";"uJobCandidate";"
CREATE TRIGGER [HumanResources].[uJobCandidate] ON [HumanResources].[JobCandidate] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [HumanResources].[JobCandidate]
    SET [HumanResources].[JobCandidate].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[JobCandidateID] = [HumanResources].[JobCandidate].[JobCandidateID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:52.943</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>uJobCandidate</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>JobCandidate</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [HumanResources].[uJobCandidate] ON [HumanResources].[JobCandidate] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [HumanResources].[JobCandidate]&#x0D;
    SET [HumanResources].[JobCandidate].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[JobCandidateID] = [HumanResources].[JobCandidate].[JobCandidateID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
368;14/10/2005 01:59:53;"dbo";"CREATE_TRIGGER";"Production";"uLocation";"
CREATE TRIGGER [Production].[uLocation] ON [Production].[Location] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[Location]
    SET [Production].[Location].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[LocationID] = [Production].[Location].[LocationID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:53.053</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uLocation</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Location</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uLocation] ON [Production].[Location] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[Location]&#x0D;
    SET [Production].[Location].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[LocationID] = [Production].[Location].[LocationID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
369;14/10/2005 01:59:53;"dbo";"CREATE_TRIGGER";"Production";"uProduct";"
CREATE TRIGGER [Production].[uProduct] ON [Production].[Product] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[Product]
    SET [Production].[Product].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[ProductID] = [Production].[Product].[ProductID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:53.163</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uProduct</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Product</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uProduct] ON [Production].[Product] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[Product]&#x0D;
    SET [Production].[Product].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[ProductID] = [Production].[Product].[ProductID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
370;14/10/2005 01:59:53;"dbo";"CREATE_TRIGGER";"Production";"uProductCategory";"
CREATE TRIGGER [Production].[uProductCategory] ON [Production].[ProductCategory] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[ProductCategory]
    SET [Production].[ProductCategory].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[ProductCategoryID] = [Production].[ProductCategory].[ProductCategoryID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:53.273</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uProductCategory</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ProductCategory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uProductCategory] ON [Production].[ProductCategory] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[ProductCategory]&#x0D;
    SET [Production].[ProductCategory].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[ProductCategoryID] = [Production].[ProductCategory].[ProductCategoryID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
371;14/10/2005 01:59:53;"dbo";"CREATE_TRIGGER";"Production";"uProductCostHistory";"
CREATE TRIGGER [Production].[uProductCostHistory] ON [Production].[ProductCostHistory] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[ProductCostHistory]
    SET [Production].[ProductCostHistory].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[ProductID] = [Production].[ProductCostHistory].[ProductID]
        AND inserted.[StartDate] = [Production].[ProductCostHistory].[StartDate];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:53.383</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uProductCostHistory</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ProductCostHistory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uProductCostHistory] ON [Production].[ProductCostHistory] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[ProductCostHistory]&#x0D;
    SET [Production].[ProductCostHistory].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[ProductID] = [Production].[ProductCostHistory].[ProductID]&#x0D;
        AND inserted.[StartDate] = [Production].[ProductCostHistory].[StartDate];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
372;14/10/2005 01:59:53;"dbo";"CREATE_TRIGGER";"Production";"uProductDescription";"
CREATE TRIGGER [Production].[uProductDescription] ON [Production].[ProductDescription] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[ProductDescription]
    SET [Production].[ProductDescription].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[ProductDescriptionID] = [Production].[ProductDescription].[ProductDescriptionID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:53.490</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uProductDescription</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ProductDescription</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uProductDescription] ON [Production].[ProductDescription] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[ProductDescription]&#x0D;
    SET [Production].[ProductDescription].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[ProductDescriptionID] = [Production].[ProductDescription].[ProductDescriptionID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
373;14/10/2005 01:59:53;"dbo";"CREATE_TRIGGER";"Production";"uProductDocument";"
CREATE TRIGGER [Production].[uProductDocument] ON [Production].[ProductDocument] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[ProductDocument]
    SET [Production].[ProductDocument].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[ProductID] = [Production].[ProductDocument].[ProductID]
        AND inserted.[DocumentID] = [Production].[ProductDocument].[DocumentID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:53.600</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uProductDocument</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ProductDocument</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uProductDocument] ON [Production].[ProductDocument] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[ProductDocument]&#x0D;
    SET [Production].[ProductDocument].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[ProductID] = [Production].[ProductDocument].[ProductID]&#x0D;
        AND inserted.[DocumentID] = [Production].[ProductDocument].[DocumentID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
374;14/10/2005 01:59:53;"dbo";"CREATE_TRIGGER";"Production";"uProductInventory";"
CREATE TRIGGER [Production].[uProductInventory] ON [Production].[ProductInventory] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[ProductInventory]
    SET [Production].[ProductInventory].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[ProductID] = [Production].[ProductInventory].[ProductID]
        AND inserted.[LocationID] = [Production].[ProductInventory].[LocationID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:53.710</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uProductInventory</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ProductInventory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uProductInventory] ON [Production].[ProductInventory] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[ProductInventory]&#x0D;
    SET [Production].[ProductInventory].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[ProductID] = [Production].[ProductInventory].[ProductID]&#x0D;
        AND inserted.[LocationID] = [Production].[ProductInventory].[LocationID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
375;14/10/2005 01:59:53;"dbo";"CREATE_TRIGGER";"Production";"uProductListPriceHistory";"
CREATE TRIGGER [Production].[uProductListPriceHistory] ON [Production].[ProductListPriceHistory] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[ProductListPriceHistory]
    SET [Production].[ProductListPriceHistory].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[ProductID] = [Production].[ProductListPriceHistory].[ProductID]
        AND inserted.[StartDate] = [Production].[ProductListPriceHistory].[StartDate];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:53.820</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uProductListPriceHistory</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ProductListPriceHistory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uProductListPriceHistory] ON [Production].[ProductListPriceHistory] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[ProductListPriceHistory]&#x0D;
    SET [Production].[ProductListPriceHistory].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[ProductID] = [Production].[ProductListPriceHistory].[ProductID]&#x0D;
        AND inserted.[StartDate] = [Production].[ProductListPriceHistory].[StartDate];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
376;14/10/2005 01:59:53;"dbo";"CREATE_TRIGGER";"Production";"uProductModel";"
CREATE TRIGGER [Production].[uProductModel] ON [Production].[ProductModel] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[ProductModel]
    SET [Production].[ProductModel].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[ProductModelID] = [Production].[ProductModel].[ProductModelID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:53.930</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uProductModel</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ProductModel</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uProductModel] ON [Production].[ProductModel] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[ProductModel]&#x0D;
    SET [Production].[ProductModel].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[ProductModelID] = [Production].[ProductModel].[ProductModelID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
377;14/10/2005 01:59:54;"dbo";"CREATE_TRIGGER";"Production";"uProductModelIllustration";"
CREATE TRIGGER [Production].[uProductModelIllustration] ON [Production].[ProductModelIllustration] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[ProductModelIllustration]
    SET [Production].[ProductModelIllustration].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[ProductModelID] = [Production].[ProductModelIllustration].[ProductModelID]
        AND inserted.[IllustrationID] = [Production].[ProductModelIllustration].[IllustrationID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:54.037</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uProductModelIllustration</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ProductModelIllustration</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uProductModelIllustration] ON [Production].[ProductModelIllustration] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[ProductModelIllustration]&#x0D;
    SET [Production].[ProductModelIllustration].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[ProductModelID] = [Production].[ProductModelIllustration].[ProductModelID]&#x0D;
        AND inserted.[IllustrationID] = [Production].[ProductModelIllustration].[IllustrationID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
378;14/10/2005 01:59:54;"dbo";"CREATE_TRIGGER";"Production";"uProductModelProductDescriptionCulture";"
CREATE TRIGGER [Production].[uProductModelProductDescriptionCulture] ON [Production].[ProductModelProductDescriptionCulture] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[ProductModelProductDescriptionCulture]
    SET [Production].[ProductModelProductDescriptionCulture].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[ProductModelID] = [Production].[ProductModelProductDescriptionCulture].[ProductModelID]
        AND inserted.[ProductDescriptionID] = [Production].[ProductModelProductDescriptionCulture].[ProductDescriptionID]
        AND inserted.[CultureID] = [Production].[ProductModelProductDescriptionCulture].[CultureID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:54.147</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uProductModelProductDescriptionCulture</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ProductModelProductDescriptionCulture</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uProductModelProductDescriptionCulture] ON [Production].[ProductModelProductDescriptionCulture] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[ProductModelProductDescriptionCulture]&#x0D;
    SET [Production].[ProductModelProductDescriptionCulture].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[ProductModelID] = [Production].[ProductModelProductDescriptionCulture].[ProductModelID]&#x0D;
        AND inserted.[ProductDescriptionID] = [Production].[ProductModelProductDescriptionCulture].[ProductDescriptionID]&#x0D;
        AND inserted.[CultureID] = [Production].[ProductModelProductDescriptionCulture].[CultureID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
379;14/10/2005 01:59:54;"dbo";"CREATE_TRIGGER";"Production";"uProductPhoto";"
CREATE TRIGGER [Production].[uProductPhoto] ON [Production].[ProductPhoto] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[ProductPhoto]
    SET [Production].[ProductPhoto].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[ProductPhotoID] = [Production].[ProductPhoto].[ProductPhotoID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:54.257</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uProductPhoto</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ProductPhoto</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uProductPhoto] ON [Production].[ProductPhoto] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[ProductPhoto]&#x0D;
    SET [Production].[ProductPhoto].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[ProductPhotoID] = [Production].[ProductPhoto].[ProductPhotoID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
380;14/10/2005 01:59:54;"dbo";"CREATE_TRIGGER";"Production";"uProductProductPhoto";"
CREATE TRIGGER [Production].[uProductProductPhoto] ON [Production].[ProductProductPhoto] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[ProductProductPhoto]
    SET [Production].[ProductProductPhoto].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[ProductID] = [Production].[ProductProductPhoto].[ProductID]
        AND inserted.[ProductPhotoID] = [Production].[ProductProductPhoto].[ProductPhotoID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:54.367</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uProductProductPhoto</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ProductProductPhoto</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uProductProductPhoto] ON [Production].[ProductProductPhoto] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[ProductProductPhoto]&#x0D;
    SET [Production].[ProductProductPhoto].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[ProductID] = [Production].[ProductProductPhoto].[ProductID]&#x0D;
        AND inserted.[ProductPhotoID] = [Production].[ProductProductPhoto].[ProductPhotoID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
381;14/10/2005 01:59:54;"dbo";"CREATE_TRIGGER";"Production";"uProductReview";"
CREATE TRIGGER [Production].[uProductReview] ON [Production].[ProductReview] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[ProductReview]
    SET [Production].[ProductReview].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[ProductReviewID] = [Production].[ProductReview].[ProductReviewID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:54.477</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uProductReview</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ProductReview</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uProductReview] ON [Production].[ProductReview] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[ProductReview]&#x0D;
    SET [Production].[ProductReview].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[ProductReviewID] = [Production].[ProductReview].[ProductReviewID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
382;14/10/2005 01:59:54;"dbo";"CREATE_TRIGGER";"Production";"uProductSubcategory";"
CREATE TRIGGER [Production].[uProductSubcategory] ON [Production].[ProductSubcategory] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Production].[ProductSubcategory]
    SET [Production].[ProductSubcategory].[ModifiedDate] = GETDATE()
    FROM inserted
    WHERE inserted.[ProductSubcategoryID] = [Production].[ProductSubcategory].[ProductSubcategoryID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:54.587</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uProductSubcategory</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ProductSubcategory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uProductSubcategory] ON [Production].[ProductSubcategory] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Production].[ProductSubcategory]&#x0D;
    SET [Production].[ProductSubcategory].[ModifiedDate] = GETDATE()&#x0D;
    FROM inserted&#x0D;
    WHERE inserted.[ProductSubcategoryID] = [Production].[ProductSubcategory].[ProductSubcategoryID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
383;14/10/2005 01:59:54;"dbo";"CREATE_TRIGGER";"Purchasing";"uProductVendor";"
CREATE TRIGGER [Purchasing].[uProductVendor] ON [Purchasing].[ProductVendor] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE [Purchasing].[ProductVendor] 
    SET [Purchasing].[ProductVendor].[ModifiedDate] = GETDATE() 
    FROM inserted 
    WHERE inserted.[ProductID] = [Purchasing].[ProductVendor].[ProductID] 
        AND inserted.[VendorID] = [Purchasing].[ProductVendor].[VendorID];
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:54.693</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>uProductVendor</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ProductVendor</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Purchasing].[uProductVendor] ON [Purchasing].[ProductVendor] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    UPDATE [Purchasing].[ProductVendor] &#x0D;
    SET [Purchasing].[ProductVendor].[ModifiedDate] = GETDATE() &#x0D;
    FROM inserted &#x0D;
    WHERE inserted.[ProductID] = [Purchasing].[ProductVendor].[ProductID] &#x0D;
        AND inserted.[VendorID] = [Purchasing].[ProductVendor].[VendorID];&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
384;14/10/2005 01:59:54;"dbo";"CREATE_TRIGGER";"Purchasing";"iPurchaseOrderDetail";"
CREATE TRIGGER [Purchasing].[iPurchaseOrderDetail] ON [Purchasing].[PurchaseOrderDetail] 
AFTER INSERT AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        INSERT INTO [Production].[TransactionHistory]
            ([ProductID]
            ,[ReferenceOrderID]
            ,[ReferenceOrderLineID]
            ,[TransactionType]
            ,[TransactionDate]
            ,[Quantity]
            ,[ActualCost])
        SELECT 
            inserted.[ProductID]
            ,inserted.[PurchaseOrderID]
            ,inserted.[PurchaseOrderDetailID]
            ,'P'
            ,GETDATE()
            ,inserted.[OrderQty]
            ,inserted.[UnitPrice]
        FROM inserted 
            INNER JOIN [Purchasing].[PurchaseOrderHeader] 
            ON inserted.[PurchaseOrderID] = [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID];

        -- Update SubTotal in PurchaseOrderHeader record. Note that this causes the 
        -- PurchaseOrderHeader trigger to fire which will update the RevisionNumber.
        UPDATE [Purchasing].[PurchaseOrderHeader]
        SET [Purchasing].[PurchaseOrderHeader].[SubTotal] = 
            (SELECT SUM([Purchasing].[PurchaseOrderDetail].[LineTotal])
                FROM [Purchasing].[PurchaseOrderDetail]
                WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID])
        WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] IN (SELECT inserted.[PurchaseOrderID] FROM inserted);
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:54.803</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>iPurchaseOrderDetail</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>PurchaseOrderDetail</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Purchasing].[iPurchaseOrderDetail] ON [Purchasing].[PurchaseOrderDetail] &#x0D;
AFTER INSERT AS&#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        INSERT INTO [Production].[TransactionHistory]&#x0D;
            ([ProductID]&#x0D;
            ,[ReferenceOrderID]&#x0D;
            ,[ReferenceOrderLineID]&#x0D;
            ,[TransactionType]&#x0D;
            ,[TransactionDate]&#x0D;
            ,[Quantity]&#x0D;
            ,[ActualCost])&#x0D;
        SELECT &#x0D;
            inserted.[ProductID]&#x0D;
            ,inserted.[PurchaseOrderID]&#x0D;
            ,inserted.[PurchaseOrderDetailID]&#x0D;
            ,'P'&#x0D;
            ,GETDATE()&#x0D;
            ,inserted.[OrderQty]&#x0D;
            ,inserted.[UnitPrice]&#x0D;
        FROM inserted &#x0D;
            INNER JOIN [Purchasing].[PurchaseOrderHeader] &#x0D;
            ON inserted.[PurchaseOrderID] = [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID];&#x0D;
&#x0D;
        -- Update SubTotal in PurchaseOrderHeader record. Note that this causes the &#x0D;
        -- PurchaseOrderHeader trigger to fire which will update the RevisionNumber.&#x0D;
        UPDATE [Purchasing].[PurchaseOrderHeader]&#x0D;
        SET [Purchasing].[PurchaseOrderHeader].[SubTotal] = &#x0D;
            (SELECT SUM([Purchasing].[PurchaseOrderDetail].[LineTotal])&#x0D;
                FROM [Purchasing].[PurchaseOrderDetail]&#x0D;
                WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID])&#x0D;
        WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] IN (SELECT inserted.[PurchaseOrderID] FROM inserted);&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
385;14/10/2005 01:59:54;"dbo";"CREATE_TRIGGER";"Purchasing";"uPurchaseOrderDetail";"
CREATE TRIGGER [Purchasing].[uPurchaseOrderDetail] ON [Purchasing].[PurchaseOrderDetail] 
AFTER UPDATE AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        IF UPDATE([ProductID]) OR UPDATE([OrderQty]) OR UPDATE([UnitPrice])
        -- Insert record into TransactionHistory 
        BEGIN
            INSERT INTO [Production].[TransactionHistory]
                ([ProductID]
                ,[ReferenceOrderID]
                ,[ReferenceOrderLineID]
                ,[TransactionType]
                ,[TransactionDate]
                ,[Quantity]
                ,[ActualCost])
            SELECT 
                inserted.[ProductID]
                ,inserted.[PurchaseOrderID]
                ,inserted.[PurchaseOrderDetailID]
                ,'P'
                ,GETDATE()
                ,inserted.[OrderQty]
                ,inserted.[UnitPrice]
            FROM inserted 
                INNER JOIN [Purchasing].[PurchaseOrderDetail] 
                ON inserted.[PurchaseOrderID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID];

            -- Update SubTotal in PurchaseOrderHeader record. Note that this causes the 
            -- PurchaseOrderHeader trigger to fire which will update the RevisionNumber.
            UPDATE [Purchasing].[PurchaseOrderHeader]
            SET [Purchasing].[PurchaseOrderHeader].[SubTotal] = 
                (SELECT SUM([Purchasing].[PurchaseOrderDetail].[LineTotal])
                    FROM [Purchasing].[PurchaseOrderDetail]
                    WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] 
                        = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID])
            WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] 
                IN (SELECT inserted.[PurchaseOrderID] FROM inserted);

            UPDATE [Purchasing].[PurchaseOrderDetail]
            SET [Purchasing].[PurchaseOrderDetail].[ModifiedDate] = GETDATE()
            FROM inserted
            WHERE inserted.[PurchaseOrderID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID]
                AND inserted.[PurchaseOrderDetailID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderDetailID];
        END;
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:54.913</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>uPurchaseOrderDetail</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>PurchaseOrderDetail</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Purchasing].[uPurchaseOrderDetail] ON [Purchasing].[PurchaseOrderDetail] &#x0D;
AFTER UPDATE AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        IF UPDATE([ProductID]) OR UPDATE([OrderQty]) OR UPDATE([UnitPrice])&#x0D;
        -- Insert record into TransactionHistory &#x0D;
        BEGIN&#x0D;
            INSERT INTO [Production].[TransactionHistory]&#x0D;
                ([ProductID]&#x0D;
                ,[ReferenceOrderID]&#x0D;
                ,[ReferenceOrderLineID]&#x0D;
                ,[TransactionType]&#x0D;
                ,[TransactionDate]&#x0D;
                ,[Quantity]&#x0D;
                ,[ActualCost])&#x0D;
            SELECT &#x0D;
                inserted.[ProductID]&#x0D;
                ,inserted.[PurchaseOrderID]&#x0D;
                ,inserted.[PurchaseOrderDetailID]&#x0D;
                ,'P'&#x0D;
                ,GETDATE()&#x0D;
                ,inserted.[OrderQty]&#x0D;
                ,inserted.[UnitPrice]&#x0D;
            FROM inserted &#x0D;
                INNER JOIN [Purchasing].[PurchaseOrderDetail] &#x0D;
                ON inserted.[PurchaseOrderID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID];&#x0D;
&#x0D;
            -- Update SubTotal in PurchaseOrderHeader record. Note that this causes the &#x0D;
            -- PurchaseOrderHeader trigger to fire which will update the RevisionNumber.&#x0D;
            UPDATE [Purchasing].[PurchaseOrderHeader]&#x0D;
            SET [Purchasing].[PurchaseOrderHeader].[SubTotal] = &#x0D;
                (SELECT SUM([Purchasing].[PurchaseOrderDetail].[LineTotal])&#x0D;
                    FROM [Purchasing].[PurchaseOrderDetail]&#x0D;
                    WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] &#x0D;
                        = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID])&#x0D;
            WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] &#x0D;
                IN (SELECT inserted.[PurchaseOrderID] FROM inserted);&#x0D;
&#x0D;
            UPDATE [Purchasing].[PurchaseOrderDetail]&#x0D;
            SET [Purchasing].[PurchaseOrderDetail].[ModifiedDate] = GETDATE()&#x0D;
            FROM inserted&#x0D;
            WHERE inserted.[PurchaseOrderID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderID]&#x0D;
                AND inserted.[PurchaseOrderDetailID] = [Purchasing].[PurchaseOrderDetail].[PurchaseOrderDetailID];&#x0D;
        END;&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
386;14/10/2005 01:59:55;"dbo";"CREATE_TRIGGER";"Purchasing";"uPurchaseOrderHeader";"
CREATE TRIGGER [Purchasing].[uPurchaseOrderHeader] ON [Purchasing].[PurchaseOrderHeader] 
AFTER UPDATE AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        -- Update RevisionNumber for modification of any field EXCEPT the Status.
        IF NOT UPDATE([Status])
        BEGIN
            UPDATE [Purchasing].[PurchaseOrderHeader]
            SET [Purchasing].[PurchaseOrderHeader].[RevisionNumber] = 
                [Purchasing].[PurchaseOrderHeader].[RevisionNumber] + 1
            WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] IN 
                (SELECT inserted.[PurchaseOrderID] FROM inserted);

            UPDATE [Purchasing].[PurchaseOrderHeader] 
            SET [Purchasing].[PurchaseOrderHeader].[ModifiedDate] = GETDATE() 
            FROM inserted 
            WHERE inserted.[PurchaseOrderID] = [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID];
        END;
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:55.023</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>uPurchaseOrderHeader</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>PurchaseOrderHeader</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Purchasing].[uPurchaseOrderHeader] ON [Purchasing].[PurchaseOrderHeader] &#x0D;
AFTER UPDATE AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        -- Update RevisionNumber for modification of any field EXCEPT the Status.&#x0D;
        IF NOT UPDATE([Status])&#x0D;
        BEGIN&#x0D;
            UPDATE [Purchasing].[PurchaseOrderHeader]&#x0D;
            SET [Purchasing].[PurchaseOrderHeader].[RevisionNumber] = &#x0D;
                [Purchasing].[PurchaseOrderHeader].[RevisionNumber] + 1&#x0D;
            WHERE [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID] IN &#x0D;
                (SELECT inserted.[PurchaseOrderID] FROM inserted);&#x0D;
&#x0D;
            UPDATE [Purchasing].[PurchaseOrderHeader] &#x0D;
            SET [Purchasing].[PurchaseOrderHeader].[ModifiedDate] = GETDATE() &#x0D;
            FROM inserted &#x0D;
            WHERE inserted.[PurchaseOrderID] = [Purchasing].[PurchaseOrderHeader].[PurchaseOrderID];&#x0D;
        END;&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
387;14/10/2005 01:59:55;"dbo";"CREATE_TRIGGER";"Sales";"iduSalesOrderDetail";"
CREATE TRIGGER [Sales].[iduSalesOrderDetail] ON [Sales].[SalesOrderDetail] 
AFTER INSERT, DELETE, UPDATE 
AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        -- If inserting or updating these columns
        IF UPDATE([ProductID]) OR UPDATE([OrderQty]) OR UPDATE([UnitPrice]) OR UPDATE([UnitPriceDiscount]) 
        -- Insert record into TransactionHistory
        BEGIN
            INSERT INTO [Production].[TransactionHistory]
                ([ProductID]
                ,[ReferenceOrderID]
                ,[ReferenceOrderLineID]
                ,[TransactionType]
                ,[TransactionDate]
                ,[Quantity]
                ,[ActualCost])
            SELECT 
                inserted.[ProductID]
                ,inserted.[SalesOrderID]
                ,inserted.[SalesOrderDetailID]
                ,'S'
                ,GETDATE()
                ,inserted.[OrderQty]
                ,inserted.[UnitPrice]
            FROM inserted 
                INNER JOIN [Sales].[SalesOrderHeader] 
                ON inserted.[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID];

            UPDATE [Sales].[Individual] 
            SET [Demographics].modify('declare default element namespace 
                ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; 
                replace value of (/IndividualSurvey/TotalPurchaseYTD)[1] 
                with data(/IndividualSurvey/TotalPurchaseYTD)[1] + sql:column (""inserted.LineTotal"")') 
            FROM inserted 
                INNER JOIN [Sales].[SalesOrderHeader] 
                ON inserted.[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID] 
            WHERE [Sales].[SalesOrderHeader].[CustomerID] = [Sales].[Individual].[CustomerID];
        END;

        UPDATE [Sales].[SalesOrderDetail]
        SET [Sales].[SalesOrderDetail].[ModifiedDate] = GETDATE() 
        FROM inserted
        WHERE inserted.[SalesOrderID] = [Sales].[SalesOrderDetail].[SalesOrderID]
            AND inserted.[SalesOrderDetailID] = [Sales].[SalesOrderDetail].[SalesOrderDetailID];

        -- Update SubTotal in SalesOrderHeader record. Note that this causes the 
        -- SalesOrderHeader trigger to fire which will update the RevisionNumber.
        UPDATE [Sales].[SalesOrderHeader]
        SET [Sales].[SalesOrderHeader].[SubTotal] = 
            (SELECT SUM([Sales].[SalesOrderDetail].[LineTotal])
                FROM [Sales].[SalesOrderDetail]
                WHERE [Sales].[SalesOrderHeader].[SalesOrderID] = [Sales].[SalesOrderDetail].[SalesOrderID])
        WHERE [Sales].[SalesOrderHeader].[SalesOrderID] IN (SELECT inserted.[SalesOrderID] FROM inserted);

        UPDATE [Sales].[Individual] 
        SET [Demographics].modify('declare default element namespace 
            ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; 
            replace value of (/IndividualSurvey/TotalPurchaseYTD)[1] 
            with data(/IndividualSurvey/TotalPurchaseYTD)[1] - sql:column(""deleted.LineTotal"")') 
        FROM deleted 
            INNER JOIN [Sales].[SalesOrderHeader] 
            ON deleted.[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID] 
        WHERE [Sales].[SalesOrderHeader].[CustomerID] = [Sales].[Individual].[CustomerID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:55.133</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>iduSalesOrderDetail</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>SalesOrderDetail</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[iduSalesOrderDetail] ON [Sales].[SalesOrderDetail] &#x0D;
AFTER INSERT, DELETE, UPDATE &#x0D;
AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        -- If inserting or updating these columns&#x0D;
        IF UPDATE([ProductID]) OR UPDATE([OrderQty]) OR UPDATE([UnitPrice]) OR UPDATE([UnitPriceDiscount]) &#x0D;
        -- Insert record into TransactionHistory&#x0D;
        BEGIN&#x0D;
            INSERT INTO [Production].[TransactionHistory]&#x0D;
                ([ProductID]&#x0D;
                ,[ReferenceOrderID]&#x0D;
                ,[ReferenceOrderLineID]&#x0D;
                ,[TransactionType]&#x0D;
                ,[TransactionDate]&#x0D;
                ,[Quantity]&#x0D;
                ,[ActualCost])&#x0D;
            SELECT &#x0D;
                inserted.[ProductID]&#x0D;
                ,inserted.[SalesOrderID]&#x0D;
                ,inserted.[SalesOrderDetailID]&#x0D;
                ,'S'&#x0D;
                ,GETDATE()&#x0D;
                ,inserted.[OrderQty]&#x0D;
                ,inserted.[UnitPrice]&#x0D;
            FROM inserted &#x0D;
                INNER JOIN [Sales].[SalesOrderHeader] &#x0D;
                ON inserted.[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID];&#x0D;
&#x0D;
            UPDATE [Sales].[Individual] &#x0D;
            SET [Demographics].modify('declare default element namespace &#x0D;
                ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; &#x0D;
                replace value of (/IndividualSurvey/TotalPurchaseYTD)[1] &#x0D;
                with data(/IndividualSurvey/TotalPurchaseYTD)[1] + sql:column (""inserted.LineTotal"")') &#x0D;
            FROM inserted &#x0D;
                INNER JOIN [Sales].[SalesOrderHeader] &#x0D;
                ON inserted.[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID] &#x0D;
            WHERE [Sales].[SalesOrderHeader].[CustomerID] = [Sales].[Individual].[CustomerID];&#x0D;
        END;&#x0D;
&#x0D;
        UPDATE [Sales].[SalesOrderDetail]&#x0D;
        SET [Sales].[SalesOrderDetail].[ModifiedDate] = GETDATE() &#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[SalesOrderID] = [Sales].[SalesOrderDetail].[SalesOrderID]&#x0D;
            AND inserted.[SalesOrderDetailID] = [Sales].[SalesOrderDetail].[SalesOrderDetailID];&#x0D;
&#x0D;
        -- Update SubTotal in SalesOrderHeader record. Note that this causes the &#x0D;
        -- SalesOrderHeader trigger to fire which will update the RevisionNumber.&#x0D;
        UPDATE [Sales].[SalesOrderHeader]&#x0D;
        SET [Sales].[SalesOrderHeader].[SubTotal] = &#x0D;
            (SELECT SUM([Sales].[SalesOrderDetail].[LineTotal])&#x0D;
                FROM [Sales].[SalesOrderDetail]&#x0D;
                WHERE [Sales].[SalesOrderHeader].[SalesOrderID] = [Sales].[SalesOrderDetail].[SalesOrderID])&#x0D;
        WHERE [Sales].[SalesOrderHeader].[SalesOrderID] IN (SELECT inserted.[SalesOrderID] FROM inserted);&#x0D;
&#x0D;
        UPDATE [Sales].[Individual] &#x0D;
        SET [Demographics].modify('declare default element namespace &#x0D;
            ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; &#x0D;
            replace value of (/IndividualSurvey/TotalPurchaseYTD)[1] &#x0D;
            with data(/IndividualSurvey/TotalPurchaseYTD)[1] - sql:column(""deleted.LineTotal"")') &#x0D;
        FROM deleted &#x0D;
            INNER JOIN [Sales].[SalesOrderHeader] &#x0D;
            ON deleted.[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID] &#x0D;
        WHERE [Sales].[SalesOrderHeader].[CustomerID] = [Sales].[Individual].[CustomerID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
388;14/10/2005 01:59:55;"dbo";"CREATE_TRIGGER";"Sales";"uSalesOrderHeader";"
CREATE TRIGGER [Sales].[uSalesOrderHeader] ON [Sales].[SalesOrderHeader] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        -- Update RevisionNumber for modification of any field EXCEPT the Status.
        IF NOT UPDATE([Status])
        BEGIN
            UPDATE [Sales].[SalesOrderHeader]
            SET [Sales].[SalesOrderHeader].[RevisionNumber] = 
                [Sales].[SalesOrderHeader].[RevisionNumber] + 1
            WHERE [Sales].[SalesOrderHeader].[SalesOrderID] IN 
                (SELECT inserted.[SalesOrderID] FROM inserted);
        END;

        -- Update the SalesPerson SalesYTD when SubTotal is updated
        IF UPDATE([SubTotal])
        BEGIN
            DECLARE @StartDate datetime,
                    @EndDate datetime

            SET @StartDate = [dbo].[ufnGetAccountingStartDate]();
            SET @EndDate = [dbo].[ufnGetAccountingEndDate]();

            UPDATE [Sales].[SalesPerson]
            SET [Sales].[SalesPerson].[SalesYTD] = 
                (SELECT SUM([Sales].[SalesOrderHeader].[SubTotal])
                FROM [Sales].[SalesOrderHeader] 
                WHERE [Sales].[SalesPerson].[SalesPersonID] = [Sales].[SalesOrderHeader].[SalesPersonID]
                    AND ([Sales].[SalesOrderHeader].[Status] = 5) -- Shipped
                    AND [Sales].[SalesOrderHeader].[OrderDate] BETWEEN @StartDate AND @EndDate)
            WHERE [Sales].[SalesPerson].[SalesPersonID] 
                IN (SELECT DISTINCT inserted.[SalesPersonID] FROM inserted 
                    WHERE inserted.[OrderDate] BETWEEN @StartDate AND @EndDate);

            -- Update the SalesTerritory SalesYTD when SubTotal is updated
            UPDATE [Sales].[SalesTerritory]
            SET [Sales].[SalesTerritory].[SalesYTD] = 
                (SELECT SUM([Sales].[SalesOrderHeader].[SubTotal])
                FROM [Sales].[SalesOrderHeader] 
                WHERE [Sales].[SalesTerritory].[TerritoryID] = [Sales].[SalesOrderHeader].[TerritoryID]
                    AND ([Sales].[SalesOrderHeader].[Status] = 5) -- Shipped
                    AND [Sales].[SalesOrderHeader].[OrderDate] BETWEEN @StartDate AND @EndDate)
            WHERE [Sales].[SalesTerritory].[TerritoryID] 
                IN (SELECT DISTINCT inserted.[TerritoryID] FROM inserted 
                    WHERE inserted.[OrderDate] BETWEEN @StartDate AND @EndDate);
        END;

        UPDATE [Sales].[SalesOrderHeader]
        SET [Sales].[SalesOrderHeader].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:55.240</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uSalesOrderHeader</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>SalesOrderHeader</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uSalesOrderHeader] ON [Sales].[SalesOrderHeader] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        -- Update RevisionNumber for modification of any field EXCEPT the Status.&#x0D;
        IF NOT UPDATE([Status])&#x0D;
        BEGIN&#x0D;
            UPDATE [Sales].[SalesOrderHeader]&#x0D;
            SET [Sales].[SalesOrderHeader].[RevisionNumber] = &#x0D;
                [Sales].[SalesOrderHeader].[RevisionNumber] + 1&#x0D;
            WHERE [Sales].[SalesOrderHeader].[SalesOrderID] IN &#x0D;
                (SELECT inserted.[SalesOrderID] FROM inserted);&#x0D;
        END;&#x0D;
&#x0D;
        -- Update the SalesPerson SalesYTD when SubTotal is updated&#x0D;
        IF UPDATE([SubTotal])&#x0D;
        BEGIN&#x0D;
            DECLARE @StartDate datetime,&#x0D;
                    @EndDate datetime&#x0D;
&#x0D;
            SET @StartDate = [dbo].[ufnGetAccountingStartDate]();&#x0D;
            SET @EndDate = [dbo].[ufnGetAccountingEndDate]();&#x0D;
&#x0D;
            UPDATE [Sales].[SalesPerson]&#x0D;
            SET [Sales].[SalesPerson].[SalesYTD] = &#x0D;
                (SELECT SUM([Sales].[SalesOrderHeader].[SubTotal])&#x0D;
                FROM [Sales].[SalesOrderHeader] &#x0D;
                WHERE [Sales].[SalesPerson].[SalesPersonID] = [Sales].[SalesOrderHeader].[SalesPersonID]&#x0D;
                    AND ([Sales].[SalesOrderHeader].[Status] = 5) -- Shipped&#x0D;
                    AND [Sales].[SalesOrderHeader].[OrderDate] BETWEEN @StartDate AND @EndDate)&#x0D;
            WHERE [Sales].[SalesPerson].[SalesPersonID] &#x0D;
                IN (SELECT DISTINCT inserted.[SalesPersonID] FROM inserted &#x0D;
                    WHERE inserted.[OrderDate] BETWEEN @StartDate AND @EndDate);&#x0D;
&#x0D;
            -- Update the SalesTerritory SalesYTD when SubTotal is updated&#x0D;
            UPDATE [Sales].[SalesTerritory]&#x0D;
            SET [Sales].[SalesTerritory].[SalesYTD] = &#x0D;
                (SELECT SUM([Sales].[SalesOrderHeader].[SubTotal])&#x0D;
                FROM [Sales].[SalesOrderHeader] &#x0D;
                WHERE [Sales].[SalesTerritory].[TerritoryID] = [Sales].[SalesOrderHeader].[TerritoryID]&#x0D;
                    AND ([Sales].[SalesOrderHeader].[Status] = 5) -- Shipped&#x0D;
                    AND [Sales].[SalesOrderHeader].[OrderDate] BETWEEN @StartDate AND @EndDate)&#x0D;
            WHERE [Sales].[SalesTerritory].[TerritoryID] &#x0D;
                IN (SELECT DISTINCT inserted.[TerritoryID] FROM inserted &#x0D;
                    WHERE inserted.[OrderDate] BETWEEN @StartDate AND @EndDate);&#x0D;
        END;&#x0D;
&#x0D;
        UPDATE [Sales].[SalesOrderHeader]&#x0D;
        SET [Sales].[SalesOrderHeader].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[SalesOrderID] = [Sales].[SalesOrderHeader].[SalesOrderID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
389;14/10/2005 01:59:55;"dbo";"CREATE_TRIGGER";"Sales";"uSalesOrderHeaderSalesReason";"
CREATE TRIGGER [Sales].[uSalesOrderHeaderSalesReason] ON [Sales].[SalesOrderHeaderSalesReason] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Sales].[SalesOrderHeaderSalesReason]
        SET [Sales].[SalesOrderHeaderSalesReason].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[SalesOrderID] = [Sales].[SalesOrderHeaderSalesReason].[SalesOrderID]
            AND inserted.[SalesReasonID] = [Sales].[SalesOrderHeaderSalesReason].[SalesReasonID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:55.350</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uSalesOrderHeaderSalesReason</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>SalesOrderHeaderSalesReason</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uSalesOrderHeaderSalesReason] ON [Sales].[SalesOrderHeaderSalesReason] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Sales].[SalesOrderHeaderSalesReason]&#x0D;
        SET [Sales].[SalesOrderHeaderSalesReason].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[SalesOrderID] = [Sales].[SalesOrderHeaderSalesReason].[SalesOrderID]&#x0D;
            AND inserted.[SalesReasonID] = [Sales].[SalesOrderHeaderSalesReason].[SalesReasonID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
390;14/10/2005 01:59:55;"dbo";"CREATE_TRIGGER";"Sales";"uSalesPerson";"
CREATE TRIGGER [Sales].[uSalesPerson] ON [Sales].[SalesPerson] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Sales].[SalesPerson]
        SET [Sales].[SalesPerson].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[SalesPersonID] = [Sales].[SalesPerson].[SalesPersonID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:55.460</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uSalesPerson</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>SalesPerson</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uSalesPerson] ON [Sales].[SalesPerson] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Sales].[SalesPerson]&#x0D;
        SET [Sales].[SalesPerson].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[SalesPersonID] = [Sales].[SalesPerson].[SalesPersonID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
391;14/10/2005 01:59:55;"dbo";"CREATE_TRIGGER";"Sales";"uSalesPersonQuotaHistory";"
CREATE TRIGGER [Sales].[uSalesPersonQuotaHistory] ON [Sales].[SalesPersonQuotaHistory] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Sales].[SalesPersonQuotaHistory]
        SET [Sales].[SalesPersonQuotaHistory].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[SalesPersonID] = [Sales].[SalesPersonQuotaHistory].[SalesPersonID]
            AND inserted.[QuotaDate] = [Sales].[SalesPersonQuotaHistory].[QuotaDate];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:55.570</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uSalesPersonQuotaHistory</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>SalesPersonQuotaHistory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uSalesPersonQuotaHistory] ON [Sales].[SalesPersonQuotaHistory] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Sales].[SalesPersonQuotaHistory]&#x0D;
        SET [Sales].[SalesPersonQuotaHistory].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[SalesPersonID] = [Sales].[SalesPersonQuotaHistory].[SalesPersonID]&#x0D;
            AND inserted.[QuotaDate] = [Sales].[SalesPersonQuotaHistory].[QuotaDate];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
392;14/10/2005 01:59:55;"dbo";"CREATE_TRIGGER";"Sales";"uSalesReason";"
CREATE TRIGGER [Sales].[uSalesReason] ON [Sales].[SalesReason] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Sales].[SalesReason]
        SET [Sales].[SalesReason].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[SalesReasonID] = [Sales].[SalesReason].[SalesReasonID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:55.680</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uSalesReason</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>SalesReason</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uSalesReason] ON [Sales].[SalesReason] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Sales].[SalesReason]&#x0D;
        SET [Sales].[SalesReason].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[SalesReasonID] = [Sales].[SalesReason].[SalesReasonID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
393;14/10/2005 01:59:55;"dbo";"CREATE_TRIGGER";"Sales";"uSalesTaxRate";"
CREATE TRIGGER [Sales].[uSalesTaxRate] ON [Sales].[SalesTaxRate] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Sales].[SalesTaxRate]
        SET [Sales].[SalesTaxRate].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[SalesTaxRateID] = [Sales].[SalesTaxRate].[SalesTaxRateID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:55.787</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uSalesTaxRate</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>SalesTaxRate</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uSalesTaxRate] ON [Sales].[SalesTaxRate] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Sales].[SalesTaxRate]&#x0D;
        SET [Sales].[SalesTaxRate].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[SalesTaxRateID] = [Sales].[SalesTaxRate].[SalesTaxRateID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
394;14/10/2005 01:59:55;"dbo";"CREATE_TRIGGER";"Sales";"uSalesTerritory";"
CREATE TRIGGER [Sales].[uSalesTerritory] ON [Sales].[SalesTerritory] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Sales].[SalesTerritory]
        SET [Sales].[SalesTerritory].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:55.897</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uSalesTerritory</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>SalesTerritory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uSalesTerritory] ON [Sales].[SalesTerritory] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Sales].[SalesTerritory]&#x0D;
        SET [Sales].[SalesTerritory].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[TerritoryID] = [Sales].[SalesTerritory].[TerritoryID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
395;14/10/2005 01:59:56;"dbo";"CREATE_TRIGGER";"Sales";"uSalesTerritoryHistory";"
CREATE TRIGGER [Sales].[uSalesTerritoryHistory] ON [Sales].[SalesTerritoryHistory] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Sales].[SalesTerritoryHistory]
        SET [Sales].[SalesTerritoryHistory].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[SalesPersonID] = [Sales].[SalesTerritoryHistory].[SalesPersonID]
            AND inserted.[StartDate] = [Sales].[SalesTerritoryHistory].[StartDate]
            AND inserted.[TerritoryID] = [Sales].[SalesTerritoryHistory].[TerritoryID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:56.007</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uSalesTerritoryHistory</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>SalesTerritoryHistory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uSalesTerritoryHistory] ON [Sales].[SalesTerritoryHistory] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Sales].[SalesTerritoryHistory]&#x0D;
        SET [Sales].[SalesTerritoryHistory].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[SalesPersonID] = [Sales].[SalesTerritoryHistory].[SalesPersonID]&#x0D;
            AND inserted.[StartDate] = [Sales].[SalesTerritoryHistory].[StartDate]&#x0D;
            AND inserted.[TerritoryID] = [Sales].[SalesTerritoryHistory].[TerritoryID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
396;14/10/2005 01:59:56;"dbo";"CREATE_TRIGGER";"Production";"uScrapReason";"
CREATE TRIGGER [Production].[uScrapReason] ON [Production].[ScrapReason] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Production].[ScrapReason]
        SET [Production].[ScrapReason].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[ScrapReasonID] = [Production].[ScrapReason].[ScrapReasonID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:56.117</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uScrapReason</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ScrapReason</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uScrapReason] ON [Production].[ScrapReason] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Production].[ScrapReason]&#x0D;
        SET [Production].[ScrapReason].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[ScrapReasonID] = [Production].[ScrapReason].[ScrapReasonID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
397;14/10/2005 01:59:56;"dbo";"CREATE_TRIGGER";"HumanResources";"uShift";"
CREATE TRIGGER [HumanResources].[uShift] ON [HumanResources].[Shift] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [HumanResources].[Shift]
        SET [HumanResources].[Shift].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[ShiftID] = [HumanResources].[Shift].[ShiftID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:56.227</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>uShift</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Shift</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [HumanResources].[uShift] ON [HumanResources].[Shift] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [HumanResources].[Shift]&#x0D;
        SET [HumanResources].[Shift].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[ShiftID] = [HumanResources].[Shift].[ShiftID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
398;14/10/2005 01:59:56;"dbo";"CREATE_TRIGGER";"Purchasing";"uShipMethod";"
CREATE TRIGGER [Purchasing].[uShipMethod] ON [Purchasing].[ShipMethod] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Purchasing].[ShipMethod]
        SET [Purchasing].[ShipMethod].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[ShipMethodID] = [Purchasing].[ShipMethod].[ShipMethodID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:56.337</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>uShipMethod</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ShipMethod</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Purchasing].[uShipMethod] ON [Purchasing].[ShipMethod] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Purchasing].[ShipMethod]&#x0D;
        SET [Purchasing].[ShipMethod].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[ShipMethodID] = [Purchasing].[ShipMethod].[ShipMethodID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
399;14/10/2005 01:59:56;"dbo";"CREATE_TRIGGER";"Sales";"uShoppingCartItem";"
CREATE TRIGGER [Sales].[uShoppingCartItem] ON [Sales].[ShoppingCartItem] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Sales].[ShoppingCartItem]
        SET [Sales].[ShoppingCartItem].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[ShoppingCartItemID] = [Sales].[ShoppingCartItem].[ShoppingCartItemID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:56.443</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uShoppingCartItem</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>ShoppingCartItem</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uShoppingCartItem] ON [Sales].[ShoppingCartItem] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Sales].[ShoppingCartItem]&#x0D;
        SET [Sales].[ShoppingCartItem].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[ShoppingCartItemID] = [Sales].[ShoppingCartItem].[ShoppingCartItemID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
400;14/10/2005 01:59:56;"dbo";"CREATE_TRIGGER";"Sales";"uSpecialOffer";"
CREATE TRIGGER [Sales].[uSpecialOffer] ON [Sales].[SpecialOffer] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Sales].[SpecialOffer]
        SET [Sales].[SpecialOffer].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[SpecialOfferID] = [Sales].[SpecialOffer].[SpecialOfferID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:56.553</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uSpecialOffer</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>SpecialOffer</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uSpecialOffer] ON [Sales].[SpecialOffer] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Sales].[SpecialOffer]&#x0D;
        SET [Sales].[SpecialOffer].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[SpecialOfferID] = [Sales].[SpecialOffer].[SpecialOfferID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
401;14/10/2005 01:59:56;"dbo";"CREATE_TRIGGER";"Sales";"uSpecialOfferProduct";"
CREATE TRIGGER [Sales].[uSpecialOfferProduct] ON [Sales].[SpecialOfferProduct] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Sales].[SpecialOfferProduct]
        SET [Sales].[SpecialOfferProduct].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[SpecialOfferID] = [Sales].[SpecialOfferProduct].[SpecialOfferID]
            AND inserted.[ProductID] = [Sales].[SpecialOfferProduct].[ProductID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:56.663</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uSpecialOfferProduct</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>SpecialOfferProduct</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uSpecialOfferProduct] ON [Sales].[SpecialOfferProduct] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Sales].[SpecialOfferProduct]&#x0D;
        SET [Sales].[SpecialOfferProduct].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[SpecialOfferID] = [Sales].[SpecialOfferProduct].[SpecialOfferID]&#x0D;
            AND inserted.[ProductID] = [Sales].[SpecialOfferProduct].[ProductID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
402;14/10/2005 01:59:56;"dbo";"CREATE_TRIGGER";"Person";"uStateProvince";"
CREATE TRIGGER [Person].[uStateProvince] ON [Person].[StateProvince] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Person].[StateProvince]
        SET [Person].[StateProvince].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[StateProvinceID] = [Person].[StateProvince].[StateProvinceID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:56.773</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>uStateProvince</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>StateProvince</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Person].[uStateProvince] ON [Person].[StateProvince] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Person].[StateProvince]&#x0D;
        SET [Person].[StateProvince].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[StateProvinceID] = [Person].[StateProvince].[StateProvinceID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
403;14/10/2005 01:59:56;"dbo";"CREATE_TRIGGER";"Sales";"iStore";"
CREATE TRIGGER [Sales].[iStore] ON [Sales].[Store] 
AFTER INSERT AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        -- Only allow the Customer to be a Store OR Individual
        IF EXISTS (SELECT * FROM inserted INNER JOIN [Sales].[Individual] 
            ON inserted.[CustomerID] = [Sales].[Individual].[CustomerID]) 
        BEGIN
            -- Rollback any active or uncommittable transactions
            IF @@TRANCOUNT > 0
            BEGIN
                ROLLBACK TRANSACTION;
            END
        END;
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:56.883</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>iStore</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Store</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[iStore] ON [Sales].[Store] &#x0D;
AFTER INSERT AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        -- Only allow the Customer to be a Store OR Individual&#x0D;
        IF EXISTS (SELECT * FROM inserted INNER JOIN [Sales].[Individual] &#x0D;
            ON inserted.[CustomerID] = [Sales].[Individual].[CustomerID]) &#x0D;
        BEGIN&#x0D;
            -- Rollback any active or uncommittable transactions&#x0D;
            IF @@TRANCOUNT &gt; 0&#x0D;
            BEGIN&#x0D;
                ROLLBACK TRANSACTION;&#x0D;
            END&#x0D;
        END;&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
404;14/10/2005 01:59:56;"dbo";"CREATE_TRIGGER";"Sales";"uStore";"
CREATE TRIGGER [Sales].[uStore] ON [Sales].[Store] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Sales].[Store]
        SET [Sales].[Store].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[CustomerID] = [Sales].[Store].[CustomerID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:56.990</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uStore</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Store</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uStore] ON [Sales].[Store] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Sales].[Store]&#x0D;
        SET [Sales].[Store].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[CustomerID] = [Sales].[Store].[CustomerID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
405;14/10/2005 01:59:57;"dbo";"CREATE_TRIGGER";"Sales";"uStoreContact";"
CREATE TRIGGER [Sales].[uStoreContact] ON [Sales].[StoreContact] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Sales].[StoreContact]
        SET [Sales].[StoreContact].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[CustomerID] = [Sales].[StoreContact].[CustomerID]
            AND inserted.[ContactID] = [Sales].[StoreContact].[ContactID];
    END TRY
    BEGIN CATCH
        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:57.100</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>uStoreContact</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>StoreContact</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Sales].[uStoreContact] ON [Sales].[StoreContact] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Sales].[StoreContact]&#x0D;
        SET [Sales].[StoreContact].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[CustomerID] = [Sales].[StoreContact].[CustomerID]&#x0D;
            AND inserted.[ContactID] = [Sales].[StoreContact].[ContactID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
406;14/10/2005 01:59:57;"dbo";"CREATE_TRIGGER";"Production";"uTransactionHistory";"
CREATE TRIGGER [Production].[uTransactionHistory] ON [Production].[TransactionHistory] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Production].[TransactionHistory]
        SET [Production].[TransactionHistory].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[TransactionID] = [Production].[TransactionHistory].[TransactionID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:57.210</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uTransactionHistory</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>TransactionHistory</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uTransactionHistory] ON [Production].[TransactionHistory] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Production].[TransactionHistory]&#x0D;
        SET [Production].[TransactionHistory].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[TransactionID] = [Production].[TransactionHistory].[TransactionID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
407;14/10/2005 01:59:57;"dbo";"CREATE_TRIGGER";"Production";"uTransactionHistoryArchive";"
CREATE TRIGGER [Production].[uTransactionHistoryArchive] ON [Production].[TransactionHistoryArchive] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Production].[TransactionHistoryArchive]
        SET [Production].[TransactionHistoryArchive].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[TransactionID] = [Production].[TransactionHistoryArchive].[TransactionID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:57.320</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uTransactionHistoryArchive</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>TransactionHistoryArchive</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uTransactionHistoryArchive] ON [Production].[TransactionHistoryArchive] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Production].[TransactionHistoryArchive]&#x0D;
        SET [Production].[TransactionHistoryArchive].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[TransactionID] = [Production].[TransactionHistoryArchive].[TransactionID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
408;14/10/2005 01:59:57;"dbo";"CREATE_TRIGGER";"Production";"uUnitMeasure";"
CREATE TRIGGER [Production].[uUnitMeasure] ON [Production].[UnitMeasure] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Production].[UnitMeasure]
        SET [Production].[UnitMeasure].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[UnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:57.430</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uUnitMeasure</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>UnitMeasure</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uUnitMeasure] ON [Production].[UnitMeasure] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Production].[UnitMeasure]&#x0D;
        SET [Production].[UnitMeasure].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[UnitMeasureCode] = [Production].[UnitMeasure].[UnitMeasureCode];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
409;14/10/2005 01:59:57;"dbo";"CREATE_TRIGGER";"Purchasing";"dVendor";"
CREATE TRIGGER [Purchasing].[dVendor] ON [Purchasing].[Vendor] 
INSTEAD OF DELETE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        DECLARE @DeleteCount int;

        SELECT @DeleteCount = COUNT(*) FROM deleted;
        IF @DeleteCount > 0 
        BEGIN
            RAISERROR
                (N'Vendors cannot be deleted. They can only be marked as not active.', -- Message
                10, -- Severity.
                1); -- State.

        -- Rollback any active or uncommittable transactions
            IF @@TRANCOUNT > 0
            BEGIN
                ROLLBACK TRANSACTION;
            END
        END;
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:57.537</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>dVendor</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Vendor</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Purchasing].[dVendor] ON [Purchasing].[Vendor] &#x0D;
INSTEAD OF DELETE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        DECLARE @DeleteCount int;&#x0D;
&#x0D;
        SELECT @DeleteCount = COUNT(*) FROM deleted;&#x0D;
        IF @DeleteCount &gt; 0 &#x0D;
        BEGIN&#x0D;
            RAISERROR&#x0D;
                (N'Vendors cannot be deleted. They can only be marked as not active.', -- Message&#x0D;
                10, -- Severity.&#x0D;
                1); -- State.&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions&#x0D;
            IF @@TRANCOUNT &gt; 0&#x0D;
            BEGIN&#x0D;
                ROLLBACK TRANSACTION;&#x0D;
            END&#x0D;
        END;&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
410;14/10/2005 01:59:57;"dbo";"CREATE_TRIGGER";"Purchasing";"uVendor";"
CREATE TRIGGER [Purchasing].[uVendor] ON [Purchasing].[Vendor] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Purchasing].[Vendor]
        SET [Purchasing].[Vendor].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[VendorID] = [Purchasing].[Vendor].[VendorID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:57.647</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>uVendor</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>Vendor</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Purchasing].[uVendor] ON [Purchasing].[Vendor] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Purchasing].[Vendor]&#x0D;
        SET [Purchasing].[Vendor].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[VendorID] = [Purchasing].[Vendor].[VendorID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
411;14/10/2005 01:59:57;"dbo";"CREATE_TRIGGER";"Purchasing";"uVendorAddress";"
CREATE TRIGGER [Purchasing].[uVendorAddress] ON [Purchasing].[VendorAddress] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Purchasing].[VendorAddress]
        SET [Purchasing].[VendorAddress].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[VendorID] = [Purchasing].[VendorAddress].[VendorID]
            AND inserted.[AddressID] = [Purchasing].[VendorAddress].[AddressID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:57.757</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>uVendorAddress</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>VendorAddress</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Purchasing].[uVendorAddress] ON [Purchasing].[VendorAddress] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Purchasing].[VendorAddress]&#x0D;
        SET [Purchasing].[VendorAddress].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[VendorID] = [Purchasing].[VendorAddress].[VendorID]&#x0D;
            AND inserted.[AddressID] = [Purchasing].[VendorAddress].[AddressID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
412;14/10/2005 01:59:57;"dbo";"CREATE_TRIGGER";"Purchasing";"uVendorContact";"
CREATE TRIGGER [Purchasing].[uVendorContact] ON [Purchasing].[VendorContact] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Purchasing].[VendorContact]
        SET [Purchasing].[VendorContact].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[VendorID] = [Purchasing].[VendorContact].[VendorID]
            AND inserted.[ContactID] = [Purchasing].[VendorContact].[ContactID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:57.867</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>uVendorContact</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>VendorContact</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Purchasing].[uVendorContact] ON [Purchasing].[VendorContact] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Purchasing].[VendorContact]&#x0D;
        SET [Purchasing].[VendorContact].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[VendorID] = [Purchasing].[VendorContact].[VendorID]&#x0D;
            AND inserted.[ContactID] = [Purchasing].[VendorContact].[ContactID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
413;14/10/2005 01:59:57;"dbo";"CREATE_TRIGGER";"Production";"iWorkOrder";"
CREATE TRIGGER [Production].[iWorkOrder] ON [Production].[WorkOrder] 
AFTER INSERT AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        INSERT INTO [Production].[TransactionHistory](
            [ProductID]
            ,[ReferenceOrderID]
            ,[TransactionType]
            ,[TransactionDate]
            ,[Quantity]
            ,[ActualCost])
        SELECT 
            inserted.[ProductID]
            ,inserted.[WorkOrderID]
            ,'W'
            ,GETDATE()
            ,inserted.[OrderQty]
            ,0
        FROM inserted;
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:57.977</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>iWorkOrder</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>WorkOrder</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[iWorkOrder] ON [Production].[WorkOrder] &#x0D;
AFTER INSERT AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        INSERT INTO [Production].[TransactionHistory](&#x0D;
            [ProductID]&#x0D;
            ,[ReferenceOrderID]&#x0D;
            ,[TransactionType]&#x0D;
            ,[TransactionDate]&#x0D;
            ,[Quantity]&#x0D;
            ,[ActualCost])&#x0D;
        SELECT &#x0D;
            inserted.[ProductID]&#x0D;
            ,inserted.[WorkOrderID]&#x0D;
            ,'W'&#x0D;
            ,GETDATE()&#x0D;
            ,inserted.[OrderQty]&#x0D;
            ,0&#x0D;
        FROM inserted;&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
414;14/10/2005 01:59:58;"dbo";"CREATE_TRIGGER";"Production";"uWorkOrder";"
CREATE TRIGGER [Production].[uWorkOrder] ON [Production].[WorkOrder] 
AFTER UPDATE AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        IF UPDATE([ProductID]) OR UPDATE([OrderQty])
        BEGIN
            INSERT INTO [Production].[TransactionHistory](
                [ProductID]
                ,[ReferenceOrderID]
                ,[TransactionType]
                ,[TransactionDate]
                ,[Quantity])
            SELECT 
                inserted.[ProductID]
                ,inserted.[WorkOrderID]
                ,'W'
                ,GETDATE()
                ,inserted.[OrderQty]
            FROM inserted;
        END;

        UPDATE [Production].[WorkOrder]
        SET [Production].[WorkOrder].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[WorkOrderID] = [Production].[WorkOrder].[WorkOrderID];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:58.087</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uWorkOrder</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>WorkOrder</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uWorkOrder] ON [Production].[WorkOrder] &#x0D;
AFTER UPDATE AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        IF UPDATE([ProductID]) OR UPDATE([OrderQty])&#x0D;
        BEGIN&#x0D;
            INSERT INTO [Production].[TransactionHistory](&#x0D;
                [ProductID]&#x0D;
                ,[ReferenceOrderID]&#x0D;
                ,[TransactionType]&#x0D;
                ,[TransactionDate]&#x0D;
                ,[Quantity])&#x0D;
            SELECT &#x0D;
                inserted.[ProductID]&#x0D;
                ,inserted.[WorkOrderID]&#x0D;
                ,'W'&#x0D;
                ,GETDATE()&#x0D;
                ,inserted.[OrderQty]&#x0D;
            FROM inserted;&#x0D;
        END;&#x0D;
&#x0D;
        UPDATE [Production].[WorkOrder]&#x0D;
        SET [Production].[WorkOrder].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[WorkOrderID] = [Production].[WorkOrder].[WorkOrderID];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
415;14/10/2005 01:59:58;"dbo";"CREATE_TRIGGER";"Production";"uWorkOrderRouting";"
CREATE TRIGGER [Production].[uWorkOrderRouting] ON [Production].[WorkOrderRouting] 
AFTER UPDATE NOT FOR REPLICATION AS 
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [Production].[WorkOrderRouting]
        SET [Production].[WorkOrderRouting].[ModifiedDate] = GETDATE()
        FROM inserted
        WHERE inserted.[WorkOrderID] = [Production].[WorkOrderRouting].[WorkOrderID]
            AND inserted.[ProductID] = [Production].[WorkOrderRouting].[ProductID]
            AND inserted.[OperationSequence] = [Production].[WorkOrderRouting].[OperationSequence];
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspPrintError];

        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_TRIGGER</EventType><PostTime>2005-10-14T01:59:58.193</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>uWorkOrderRouting</ObjectName><ObjectType>TRIGGER</ObjectType><TargetObjectName>WorkOrderRouting</TargetObjectName><TargetObjectType>TABLE</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE TRIGGER [Production].[uWorkOrderRouting] ON [Production].[WorkOrderRouting] &#x0D;
AFTER UPDATE NOT FOR REPLICATION AS &#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [Production].[WorkOrderRouting]&#x0D;
        SET [Production].[WorkOrderRouting].[ModifiedDate] = GETDATE()&#x0D;
        FROM inserted&#x0D;
        WHERE inserted.[WorkOrderID] = [Production].[WorkOrderRouting].[WorkOrderID]&#x0D;
            AND inserted.[ProductID] = [Production].[WorkOrderRouting].[ProductID]&#x0D;
            AND inserted.[OperationSequence] = [Production].[WorkOrderRouting].[OperationSequence];&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspPrintError];&#x0D;
&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
416;14/10/2005 01:59:58;"dbo";"CREATE_VIEW";"Person";"vAdditionalContactInfo";"
CREATE VIEW [Person].[vAdditionalContactInfo] 
AS 
SELECT 
    [ContactID] 
    ,[FirstName]
    ,[MiddleName]
    ,[LastName]
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; 
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; 
        (act:telephoneNumber)[1]/act:number', 'nvarchar(50)') AS [TelephoneNumber] 
    ,LTRIM(RTRIM([ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; 
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; 
        (act:telephoneNumber/act:SpecialInstructions/text())[1]', 'nvarchar(max)'))) AS [TelephoneSpecialInstructions] 
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; 
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes"";
        (act:homePostalAddress/act:Street)[1]', 'nvarchar(50)') AS [Street] 
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; 
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; 
        (act:homePostalAddress/act:City)[1]', 'nvarchar(50)') AS [City] 
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; 
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; 
        (act:homePostalAddress/act:StateProvince)[1]', 'nvarchar(50)') AS [StateProvince] 
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; 
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; 
        (act:homePostalAddress/act:PostalCode)[1]', 'nvarchar(50)') AS [PostalCode] 
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; 
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; 
        (act:homePostalAddress/act:CountryRegion)[1]', 'nvarchar(50)') AS [CountryRegion] 
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; 
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; 
        (act:homePostalAddress/act:SpecialInstructions/text())[1]', 'nvarchar(max)') AS [HomeAddressSpecialInstructions] 
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; 
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; 
        (act:eMail/act:eMailAddress)[1]', 'nvarchar(128)') AS [EMailAddress] 
    ,LTRIM(RTRIM([ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; 
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; 
        (act:eMail/act:SpecialInstructions/text())[1]', 'nvarchar(max)'))) AS [EMailSpecialInstructions] 
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; 
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; 
        (act:eMail/act:SpecialInstructions/act:telephoneNumber/act:number)[1]', 'nvarchar(50)') AS [EMailTelephoneNumber] 
    ,[rowguid] 
    ,[ModifiedDate]
FROM [Person].[Contact]
OUTER APPLY [AdditionalContactInfo].nodes(
    'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; 
    /ci:AdditionalContactInfo') AS ContactInfo(ref) 
WHERE [AdditionalContactInfo] IS NOT NULL;
";"<EVENT_INSTANCE><EventType>CREATE_VIEW</EventType><PostTime>2005-10-14T01:59:58.460</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>vAdditionalContactInfo</ObjectName><ObjectType>VIEW</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE VIEW [Person].[vAdditionalContactInfo] &#x0D;
AS &#x0D;
SELECT &#x0D;
    [ContactID] &#x0D;
    ,[FirstName]&#x0D;
    ,[MiddleName]&#x0D;
    ,[LastName]&#x0D;
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; &#x0D;
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; &#x0D;
        (act:telephoneNumber)[1]/act:number', 'nvarchar(50)') AS [TelephoneNumber] &#x0D;
    ,LTRIM(RTRIM([ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; &#x0D;
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; &#x0D;
        (act:telephoneNumber/act:SpecialInstructions/text())[1]', 'nvarchar(max)'))) AS [TelephoneSpecialInstructions] &#x0D;
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; &#x0D;
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes"";&#x0D;
        (act:homePostalAddress/act:Street)[1]', 'nvarchar(50)') AS [Street] &#x0D;
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; &#x0D;
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; &#x0D;
        (act:homePostalAddress/act:City)[1]', 'nvarchar(50)') AS [City] &#x0D;
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; &#x0D;
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; &#x0D;
        (act:homePostalAddress/act:StateProvince)[1]', 'nvarchar(50)') AS [StateProvince] &#x0D;
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; &#x0D;
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; &#x0D;
        (act:homePostalAddress/act:PostalCode)[1]', 'nvarchar(50)') AS [PostalCode] &#x0D;
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; &#x0D;
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; &#x0D;
        (act:homePostalAddress/act:CountryRegion)[1]', 'nvarchar(50)') AS [CountryRegion] &#x0D;
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; &#x0D;
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; &#x0D;
        (act:homePostalAddress/act:SpecialInstructions/text())[1]', 'nvarchar(max)') AS [HomeAddressSpecialInstructions] &#x0D;
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; &#x0D;
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; &#x0D;
        (act:eMail/act:eMailAddress)[1]', 'nvarchar(128)') AS [EMailAddress] &#x0D;
    ,LTRIM(RTRIM([ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; &#x0D;
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; &#x0D;
        (act:eMail/act:SpecialInstructions/text())[1]', 'nvarchar(max)'))) AS [EMailSpecialInstructions] &#x0D;
    ,[ContactInfo].ref.value(N'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; &#x0D;
        declare namespace act=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes""; &#x0D;
        (act:eMail/act:SpecialInstructions/act:telephoneNumber/act:number)[1]', 'nvarchar(50)') AS [EMailTelephoneNumber] &#x0D;
    ,[rowguid] &#x0D;
    ,[ModifiedDate]&#x0D;
FROM [Person].[Contact]&#x0D;
OUTER APPLY [AdditionalContactInfo].nodes(&#x0D;
    'declare namespace ci=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo""; &#x0D;
    /ci:AdditionalContactInfo') AS ContactInfo(ref) &#x0D;
WHERE [AdditionalContactInfo] IS NOT NULL;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
417;14/10/2005 01:59:58;"dbo";"CREATE_VIEW";"HumanResources";"vEmployee";"
CREATE VIEW [HumanResources].[vEmployee] 
AS 
SELECT 
    e.[EmployeeID]
    ,c.[Title]
    ,c.[FirstName]
    ,c.[MiddleName]
    ,c.[LastName]
    ,c.[Suffix]
    ,e.[Title] AS [JobTitle] 
    ,c.[Phone]
    ,c.[EmailAddress]
    ,c.[EmailPromotion]
    ,a.[AddressLine1]
    ,a.[AddressLine2]
    ,a.[City]
    ,sp.[Name] AS [StateProvinceName] 
    ,a.[PostalCode]
    ,cr.[Name] AS [CountryRegionName] 
    ,c.[AdditionalContactInfo]
FROM [HumanResources].[Employee] e
    INNER JOIN [Person].[Contact] c 
    ON c.[ContactID] = e.[ContactID]
    INNER JOIN [HumanResources].[EmployeeAddress] ea 
    ON e.[EmployeeID] = ea.[EmployeeID] 
    INNER JOIN [Person].[Address] a 
    ON ea.[AddressID] = a.[AddressID]
    INNER JOIN [Person].[StateProvince] sp 
    ON sp.[StateProvinceID] = a.[StateProvinceID]
    INNER JOIN [Person].[CountryRegion] cr 
    ON cr.[CountryRegionCode] = sp.[CountryRegionCode];
";"<EVENT_INSTANCE><EventType>CREATE_VIEW</EventType><PostTime>2005-10-14T01:59:58.523</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>vEmployee</ObjectName><ObjectType>VIEW</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE VIEW [HumanResources].[vEmployee] &#x0D;
AS &#x0D;
SELECT &#x0D;
    e.[EmployeeID]&#x0D;
    ,c.[Title]&#x0D;
    ,c.[FirstName]&#x0D;
    ,c.[MiddleName]&#x0D;
    ,c.[LastName]&#x0D;
    ,c.[Suffix]&#x0D;
    ,e.[Title] AS [JobTitle] &#x0D;
    ,c.[Phone]&#x0D;
    ,c.[EmailAddress]&#x0D;
    ,c.[EmailPromotion]&#x0D;
    ,a.[AddressLine1]&#x0D;
    ,a.[AddressLine2]&#x0D;
    ,a.[City]&#x0D;
    ,sp.[Name] AS [StateProvinceName] &#x0D;
    ,a.[PostalCode]&#x0D;
    ,cr.[Name] AS [CountryRegionName] &#x0D;
    ,c.[AdditionalContactInfo]&#x0D;
FROM [HumanResources].[Employee] e&#x0D;
    INNER JOIN [Person].[Contact] c &#x0D;
    ON c.[ContactID] = e.[ContactID]&#x0D;
    INNER JOIN [HumanResources].[EmployeeAddress] ea &#x0D;
    ON e.[EmployeeID] = ea.[EmployeeID] &#x0D;
    INNER JOIN [Person].[Address] a &#x0D;
    ON ea.[AddressID] = a.[AddressID]&#x0D;
    INNER JOIN [Person].[StateProvince] sp &#x0D;
    ON sp.[StateProvinceID] = a.[StateProvinceID]&#x0D;
    INNER JOIN [Person].[CountryRegion] cr &#x0D;
    ON cr.[CountryRegionCode] = sp.[CountryRegionCode];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
418;14/10/2005 01:59:58;"dbo";"CREATE_VIEW";"HumanResources";"vEmployeeDepartment";"
CREATE VIEW [HumanResources].[vEmployeeDepartment] 
AS 
SELECT 
    e.[EmployeeID] 
    ,c.[Title] 
    ,c.[FirstName] 
    ,c.[MiddleName] 
    ,c.[LastName] 
    ,c.[Suffix] 
    ,e.[Title] AS [JobTitle] 
    ,d.[Name] AS [Department] 
    ,d.[GroupName] 
    ,edh.[StartDate] 
FROM [HumanResources].[Employee] e
    INNER JOIN [Person].[Contact] c 
    ON c.[ContactID] = e.[ContactID]
    INNER JOIN [HumanResources].[EmployeeDepartmentHistory] edh 
    ON e.[EmployeeID] = edh.[EmployeeID] 
    INNER JOIN [HumanResources].[Department] d 
    ON edh.[DepartmentID] = d.[DepartmentID] 
WHERE GETDATE() BETWEEN edh.[StartDate] AND ISNULL(edh.[EndDate], GETDATE());
";"<EVENT_INSTANCE><EventType>CREATE_VIEW</EventType><PostTime>2005-10-14T01:59:58.633</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>vEmployeeDepartment</ObjectName><ObjectType>VIEW</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE VIEW [HumanResources].[vEmployeeDepartment] &#x0D;
AS &#x0D;
SELECT &#x0D;
    e.[EmployeeID] &#x0D;
    ,c.[Title] &#x0D;
    ,c.[FirstName] &#x0D;
    ,c.[MiddleName] &#x0D;
    ,c.[LastName] &#x0D;
    ,c.[Suffix] &#x0D;
    ,e.[Title] AS [JobTitle] &#x0D;
    ,d.[Name] AS [Department] &#x0D;
    ,d.[GroupName] &#x0D;
    ,edh.[StartDate] &#x0D;
FROM [HumanResources].[Employee] e&#x0D;
    INNER JOIN [Person].[Contact] c &#x0D;
    ON c.[ContactID] = e.[ContactID]&#x0D;
    INNER JOIN [HumanResources].[EmployeeDepartmentHistory] edh &#x0D;
    ON e.[EmployeeID] = edh.[EmployeeID] &#x0D;
    INNER JOIN [HumanResources].[Department] d &#x0D;
    ON edh.[DepartmentID] = d.[DepartmentID] &#x0D;
WHERE GETDATE() BETWEEN edh.[StartDate] AND ISNULL(edh.[EndDate], GETDATE());&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
419;14/10/2005 01:59:58;"dbo";"CREATE_VIEW";"HumanResources";"vEmployeeDepartmentHistory";"
CREATE VIEW [HumanResources].[vEmployeeDepartmentHistory] 
AS 
SELECT 
    e.[EmployeeID] 
    ,c.[Title] 
    ,c.[FirstName] 
    ,c.[MiddleName] 
    ,c.[LastName] 
    ,c.[Suffix] 
    ,s.[Name] AS [Shift]
    ,d.[Name] AS [Department] 
    ,d.[GroupName] 
    ,edh.[StartDate] 
    ,edh.[EndDate]
FROM [HumanResources].[Employee] e
    INNER JOIN [Person].[Contact] c 
    ON c.[ContactID] = e.[ContactID]
    INNER JOIN [HumanResources].[EmployeeDepartmentHistory] edh 
    ON e.[EmployeeID] = edh.[EmployeeID] 
    INNER JOIN [HumanResources].[Department] d 
    ON edh.[DepartmentID] = d.[DepartmentID] 
    INNER JOIN [HumanResources].[Shift] s
    ON s.[ShiftID] = edh.[ShiftID];
";"<EVENT_INSTANCE><EventType>CREATE_VIEW</EventType><PostTime>2005-10-14T01:59:58.740</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>vEmployeeDepartmentHistory</ObjectName><ObjectType>VIEW</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE VIEW [HumanResources].[vEmployeeDepartmentHistory] &#x0D;
AS &#x0D;
SELECT &#x0D;
    e.[EmployeeID] &#x0D;
    ,c.[Title] &#x0D;
    ,c.[FirstName] &#x0D;
    ,c.[MiddleName] &#x0D;
    ,c.[LastName] &#x0D;
    ,c.[Suffix] &#x0D;
    ,s.[Name] AS [Shift]&#x0D;
    ,d.[Name] AS [Department] &#x0D;
    ,d.[GroupName] &#x0D;
    ,edh.[StartDate] &#x0D;
    ,edh.[EndDate]&#x0D;
FROM [HumanResources].[Employee] e&#x0D;
    INNER JOIN [Person].[Contact] c &#x0D;
    ON c.[ContactID] = e.[ContactID]&#x0D;
    INNER JOIN [HumanResources].[EmployeeDepartmentHistory] edh &#x0D;
    ON e.[EmployeeID] = edh.[EmployeeID] &#x0D;
    INNER JOIN [HumanResources].[Department] d &#x0D;
    ON edh.[DepartmentID] = d.[DepartmentID] &#x0D;
    INNER JOIN [HumanResources].[Shift] s&#x0D;
    ON s.[ShiftID] = edh.[ShiftID];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
420;14/10/2005 01:59:58;"dbo";"CREATE_VIEW";"Sales";"vIndividualCustomer";"
CREATE VIEW [Sales].[vIndividualCustomer] 
AS 
SELECT 
    i.[CustomerID]
    ,c.[Title]
    ,c.[FirstName]
    ,c.[MiddleName]
    ,c.[LastName]
    ,c.[Suffix]
    ,c.[Phone]
    ,c.[EmailAddress]
    ,c.[EmailPromotion]
    ,at.[Name] AS [AddressType]
    ,a.[AddressLine1]
    ,a.[AddressLine2]
    ,a.[City]
    ,[StateProvinceName] = sp.[Name]
    ,a.[PostalCode]
    ,[CountryRegionName] = cr.[Name]
    ,i.[Demographics]
FROM [Sales].[Individual] i
    INNER JOIN [Person].[Contact] c 
    ON c.[ContactID] = i.[ContactID]
    INNER JOIN [Sales].[CustomerAddress] ca 
    ON ca.[CustomerID] = i.[CustomerID]
    INNER JOIN [Person].[Address] a 
    ON a.[AddressID] = ca.[AddressID]
    INNER JOIN [Person].[StateProvince] sp 
    ON sp.[StateProvinceID] = a.[StateProvinceID]
    INNER JOIN [Person].[CountryRegion] cr 
    ON cr.[CountryRegionCode] = sp.[CountryRegionCode]
    INNER JOIN [Person].[AddressType] at 
    ON ca.[AddressTypeID] = at.[AddressTypeID]
WHERE i.[CustomerID] IN (SELECT [Sales].[Customer].[CustomerID] 
    FROM [Sales].[Customer] WHERE UPPER([Sales].[Customer].[CustomerType]) = 'I');
";"<EVENT_INSTANCE><EventType>CREATE_VIEW</EventType><PostTime>2005-10-14T01:59:58.850</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>vIndividualCustomer</ObjectName><ObjectType>VIEW</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE VIEW [Sales].[vIndividualCustomer] &#x0D;
AS &#x0D;
SELECT &#x0D;
    i.[CustomerID]&#x0D;
    ,c.[Title]&#x0D;
    ,c.[FirstName]&#x0D;
    ,c.[MiddleName]&#x0D;
    ,c.[LastName]&#x0D;
    ,c.[Suffix]&#x0D;
    ,c.[Phone]&#x0D;
    ,c.[EmailAddress]&#x0D;
    ,c.[EmailPromotion]&#x0D;
    ,at.[Name] AS [AddressType]&#x0D;
    ,a.[AddressLine1]&#x0D;
    ,a.[AddressLine2]&#x0D;
    ,a.[City]&#x0D;
    ,[StateProvinceName] = sp.[Name]&#x0D;
    ,a.[PostalCode]&#x0D;
    ,[CountryRegionName] = cr.[Name]&#x0D;
    ,i.[Demographics]&#x0D;
FROM [Sales].[Individual] i&#x0D;
    INNER JOIN [Person].[Contact] c &#x0D;
    ON c.[ContactID] = i.[ContactID]&#x0D;
    INNER JOIN [Sales].[CustomerAddress] ca &#x0D;
    ON ca.[CustomerID] = i.[CustomerID]&#x0D;
    INNER JOIN [Person].[Address] a &#x0D;
    ON a.[AddressID] = ca.[AddressID]&#x0D;
    INNER JOIN [Person].[StateProvince] sp &#x0D;
    ON sp.[StateProvinceID] = a.[StateProvinceID]&#x0D;
    INNER JOIN [Person].[CountryRegion] cr &#x0D;
    ON cr.[CountryRegionCode] = sp.[CountryRegionCode]&#x0D;
    INNER JOIN [Person].[AddressType] at &#x0D;
    ON ca.[AddressTypeID] = at.[AddressTypeID]&#x0D;
WHERE i.[CustomerID] IN (SELECT [Sales].[Customer].[CustomerID] &#x0D;
    FROM [Sales].[Customer] WHERE UPPER([Sales].[Customer].[CustomerType]) = 'I');&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
421;14/10/2005 01:59:58;"dbo";"CREATE_VIEW";"Sales";"vIndividualDemographics";"
CREATE VIEW [Sales].[vIndividualDemographics] 
AS 
SELECT 
    i.[CustomerID] 
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; 
        TotalPurchaseYTD[1]', 'money') AS [TotalPurchaseYTD] 
    ,CONVERT(datetime, REPLACE([IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; 
        DateFirstPurchase[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [DateFirstPurchase] 
    ,CONVERT(datetime, REPLACE([IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; 
        BirthDate[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [BirthDate] 
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; 
        MaritalStatus[1]', 'nvarchar(1)') AS [MaritalStatus] 
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; 
        YearlyIncome[1]', 'nvarchar(30)') AS [YearlyIncome] 
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; 
        Gender[1]', 'nvarchar(1)') AS [Gender] 
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; 
        TotalChildren[1]', 'integer') AS [TotalChildren] 
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; 
        NumberChildrenAtHome[1]', 'integer') AS [NumberChildrenAtHome] 
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; 
        Education[1]', 'nvarchar(30)') AS [Education] 
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; 
        Occupation[1]', 'nvarchar(30)') AS [Occupation] 
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; 
        HomeOwnerFlag[1]', 'bit') AS [HomeOwnerFlag] 
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; 
        NumberCarsOwned[1]', 'integer') AS [NumberCarsOwned] 
FROM [Sales].[Individual] i 
CROSS APPLY i.[Demographics].nodes(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; 
    /IndividualSurvey') AS [IndividualSurvey](ref) 
WHERE [Demographics] IS NOT NULL;
";"<EVENT_INSTANCE><EventType>CREATE_VIEW</EventType><PostTime>2005-10-14T01:59:58.990</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>vIndividualDemographics</ObjectName><ObjectType>VIEW</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE VIEW [Sales].[vIndividualDemographics] &#x0D;
AS &#x0D;
SELECT &#x0D;
    i.[CustomerID] &#x0D;
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; &#x0D;
        TotalPurchaseYTD[1]', 'money') AS [TotalPurchaseYTD] &#x0D;
    ,CONVERT(datetime, REPLACE([IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; &#x0D;
        DateFirstPurchase[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [DateFirstPurchase] &#x0D;
    ,CONVERT(datetime, REPLACE([IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; &#x0D;
        BirthDate[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [BirthDate] &#x0D;
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; &#x0D;
        MaritalStatus[1]', 'nvarchar(1)') AS [MaritalStatus] &#x0D;
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; &#x0D;
        YearlyIncome[1]', 'nvarchar(30)') AS [YearlyIncome] &#x0D;
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; &#x0D;
        Gender[1]', 'nvarchar(1)') AS [Gender] &#x0D;
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; &#x0D;
        TotalChildren[1]', 'integer') AS [TotalChildren] &#x0D;
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; &#x0D;
        NumberChildrenAtHome[1]', 'integer') AS [NumberChildrenAtHome] &#x0D;
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; &#x0D;
        Education[1]', 'nvarchar(30)') AS [Education] &#x0D;
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; &#x0D;
        Occupation[1]', 'nvarchar(30)') AS [Occupation] &#x0D;
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; &#x0D;
        HomeOwnerFlag[1]', 'bit') AS [HomeOwnerFlag] &#x0D;
    ,[IndividualSurvey].[ref].[value](N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; &#x0D;
        NumberCarsOwned[1]', 'integer') AS [NumberCarsOwned] &#x0D;
FROM [Sales].[Individual] i &#x0D;
CROSS APPLY i.[Demographics].nodes(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey""; &#x0D;
    /IndividualSurvey') AS [IndividualSurvey](ref) &#x0D;
WHERE [Demographics] IS NOT NULL;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
422;14/10/2005 01:59:59;"dbo";"CREATE_VIEW";"HumanResources";"vJobCandidate";"
CREATE VIEW [HumanResources].[vJobCandidate] 
AS 
SELECT 
    jc.[JobCandidateID] 
    ,jc.[EmployeeID] 
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (/Resume/Name/Name.Prefix)[1]', 'nvarchar(30)') AS [Name.Prefix] 
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume"";
        (/Resume/Name/Name.First)[1]', 'nvarchar(30)') AS [Name.First] 
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (/Resume/Name/Name.Middle)[1]', 'nvarchar(30)') AS [Name.Middle] 
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (/Resume/Name/Name.Last)[1]', 'nvarchar(30)') AS [Name.Last] 
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (/Resume/Name/Name.Suffix)[1]', 'nvarchar(30)') AS [Name.Suffix] 
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (/Resume/Skills)[1]', 'nvarchar(max)') AS [Skills] 
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Address/Addr.Type)[1]', 'nvarchar(30)') AS [Addr.Type]
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Address/Addr.Location/Location/Loc.CountryRegion)[1]', 'nvarchar(100)') AS [Addr.Loc.CountryRegion]
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Address/Addr.Location/Location/Loc.State)[1]', 'nvarchar(100)') AS [Addr.Loc.State]
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Address/Addr.Location/Location/Loc.City)[1]', 'nvarchar(100)') AS [Addr.Loc.City]
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Address/Addr.PostalCode)[1]', 'nvarchar(20)') AS [Addr.PostalCode]
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (/Resume/EMail)[1]', 'nvarchar(max)') AS [EMail] 
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (/Resume/WebSite)[1]', 'nvarchar(max)') AS [WebSite] 
    ,jc.[ModifiedDate] 
FROM [HumanResources].[JobCandidate] jc 
CROSS APPLY jc.[Resume].nodes(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
    /Resume') AS Resume(ref);
";"<EVENT_INSTANCE><EventType>CREATE_VIEW</EventType><PostTime>2005-10-14T01:59:59.117</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>vJobCandidate</ObjectName><ObjectType>VIEW</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE VIEW [HumanResources].[vJobCandidate] &#x0D;
AS &#x0D;
SELECT &#x0D;
    jc.[JobCandidateID] &#x0D;
    ,jc.[EmployeeID] &#x0D;
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (/Resume/Name/Name.Prefix)[1]', 'nvarchar(30)') AS [Name.Prefix] &#x0D;
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume"";&#x0D;
        (/Resume/Name/Name.First)[1]', 'nvarchar(30)') AS [Name.First] &#x0D;
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (/Resume/Name/Name.Middle)[1]', 'nvarchar(30)') AS [Name.Middle] &#x0D;
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (/Resume/Name/Name.Last)[1]', 'nvarchar(30)') AS [Name.Last] &#x0D;
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (/Resume/Name/Name.Suffix)[1]', 'nvarchar(30)') AS [Name.Suffix] &#x0D;
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (/Resume/Skills)[1]', 'nvarchar(max)') AS [Skills] &#x0D;
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Address/Addr.Type)[1]', 'nvarchar(30)') AS [Addr.Type]&#x0D;
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Address/Addr.Location/Location/Loc.CountryRegion)[1]', 'nvarchar(100)') AS [Addr.Loc.CountryRegion]&#x0D;
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Address/Addr.Location/Location/Loc.State)[1]', 'nvarchar(100)') AS [Addr.Loc.State]&#x0D;
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Address/Addr.Location/Location/Loc.City)[1]', 'nvarchar(100)') AS [Addr.Loc.City]&#x0D;
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Address/Addr.PostalCode)[1]', 'nvarchar(20)') AS [Addr.PostalCode]&#x0D;
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (/Resume/EMail)[1]', 'nvarchar(max)') AS [EMail] &#x0D;
    ,[Resume].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (/Resume/WebSite)[1]', 'nvarchar(max)') AS [WebSite] &#x0D;
    ,jc.[ModifiedDate] &#x0D;
FROM [HumanResources].[JobCandidate] jc &#x0D;
CROSS APPLY jc.[Resume].nodes(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
    /Resume') AS Resume(ref);&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
423;14/10/2005 01:59:59;"dbo";"CREATE_VIEW";"HumanResources";"vJobCandidateEmployment";"
CREATE VIEW [HumanResources].[vJobCandidateEmployment] 
AS 
SELECT 
    jc.[JobCandidateID] 
    ,CONVERT(datetime, REPLACE([Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Emp.StartDate)[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [Emp.StartDate] 
    ,CONVERT(datetime, REPLACE([Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Emp.EndDate)[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [Emp.EndDate] 
    ,[Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Emp.OrgName)[1]', 'nvarchar(100)') AS [Emp.OrgName]
    ,[Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Emp.JobTitle)[1]', 'nvarchar(100)') AS [Emp.JobTitle]
    ,[Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Emp.Responsibility)[1]', 'nvarchar(max)') AS [Emp.Responsibility]
    ,[Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Emp.FunctionCategory)[1]', 'nvarchar(max)') AS [Emp.FunctionCategory]
    ,[Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Emp.IndustryCategory)[1]', 'nvarchar(max)') AS [Emp.IndustryCategory]
    ,[Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Emp.Location/Location/Loc.CountryRegion)[1]', 'nvarchar(max)') AS [Emp.Loc.CountryRegion]
    ,[Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Emp.Location/Location/Loc.State)[1]', 'nvarchar(max)') AS [Emp.Loc.State]
    ,[Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Emp.Location/Location/Loc.City)[1]', 'nvarchar(max)') AS [Emp.Loc.City]
FROM [HumanResources].[JobCandidate] jc 
CROSS APPLY jc.[Resume].nodes(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
    /Resume/Employment') AS Employment(ref);
";"<EVENT_INSTANCE><EventType>CREATE_VIEW</EventType><PostTime>2005-10-14T01:59:59.210</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>vJobCandidateEmployment</ObjectName><ObjectType>VIEW</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE VIEW [HumanResources].[vJobCandidateEmployment] &#x0D;
AS &#x0D;
SELECT &#x0D;
    jc.[JobCandidateID] &#x0D;
    ,CONVERT(datetime, REPLACE([Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Emp.StartDate)[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [Emp.StartDate] &#x0D;
    ,CONVERT(datetime, REPLACE([Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Emp.EndDate)[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [Emp.EndDate] &#x0D;
    ,[Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Emp.OrgName)[1]', 'nvarchar(100)') AS [Emp.OrgName]&#x0D;
    ,[Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Emp.JobTitle)[1]', 'nvarchar(100)') AS [Emp.JobTitle]&#x0D;
    ,[Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Emp.Responsibility)[1]', 'nvarchar(max)') AS [Emp.Responsibility]&#x0D;
    ,[Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Emp.FunctionCategory)[1]', 'nvarchar(max)') AS [Emp.FunctionCategory]&#x0D;
    ,[Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Emp.IndustryCategory)[1]', 'nvarchar(max)') AS [Emp.IndustryCategory]&#x0D;
    ,[Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Emp.Location/Location/Loc.CountryRegion)[1]', 'nvarchar(max)') AS [Emp.Loc.CountryRegion]&#x0D;
    ,[Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Emp.Location/Location/Loc.State)[1]', 'nvarchar(max)') AS [Emp.Loc.State]&#x0D;
    ,[Employment].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Emp.Location/Location/Loc.City)[1]', 'nvarchar(max)') AS [Emp.Loc.City]&#x0D;
FROM [HumanResources].[JobCandidate] jc &#x0D;
CROSS APPLY jc.[Resume].nodes(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
    /Resume/Employment') AS Employment(ref);&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
424;14/10/2005 01:59:59;"dbo";"CREATE_VIEW";"HumanResources";"vJobCandidateEducation";"
CREATE VIEW [HumanResources].[vJobCandidateEducation] 
AS 
SELECT 
    jc.[JobCandidateID] 
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Edu.Level)[1]', 'nvarchar(max)') AS [Edu.Level]
    ,CONVERT(datetime, REPLACE([Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Edu.StartDate)[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [Edu.StartDate] 
    ,CONVERT(datetime, REPLACE([Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Edu.EndDate)[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [Edu.EndDate] 
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Edu.Degree)[1]', 'nvarchar(50)') AS [Edu.Degree]
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Edu.Major)[1]', 'nvarchar(50)') AS [Edu.Major]
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Edu.Minor)[1]', 'nvarchar(50)') AS [Edu.Minor]
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Edu.GPA)[1]', 'nvarchar(5)') AS [Edu.GPA]
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Edu.GPAScale)[1]', 'nvarchar(5)') AS [Edu.GPAScale]
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Edu.School)[1]', 'nvarchar(100)') AS [Edu.School]
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Edu.Location/Location/Loc.CountryRegion)[1]', 'nvarchar(100)') AS [Edu.Loc.CountryRegion]
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Edu.Location/Location/Loc.State)[1]', 'nvarchar(100)') AS [Edu.Loc.State]
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
        (Edu.Location/Location/Loc.City)[1]', 'nvarchar(100)') AS [Edu.Loc.City]
FROM [HumanResources].[JobCandidate] jc 
CROSS APPLY jc.[Resume].nodes(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; 
    /Resume/Education') AS [Education](ref);
";"<EVENT_INSTANCE><EventType>CREATE_VIEW</EventType><PostTime>2005-10-14T01:59:59.337</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>vJobCandidateEducation</ObjectName><ObjectType>VIEW</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE VIEW [HumanResources].[vJobCandidateEducation] &#x0D;
AS &#x0D;
SELECT &#x0D;
    jc.[JobCandidateID] &#x0D;
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Edu.Level)[1]', 'nvarchar(max)') AS [Edu.Level]&#x0D;
    ,CONVERT(datetime, REPLACE([Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Edu.StartDate)[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [Edu.StartDate] &#x0D;
    ,CONVERT(datetime, REPLACE([Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Edu.EndDate)[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [Edu.EndDate] &#x0D;
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Edu.Degree)[1]', 'nvarchar(50)') AS [Edu.Degree]&#x0D;
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Edu.Major)[1]', 'nvarchar(50)') AS [Edu.Major]&#x0D;
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Edu.Minor)[1]', 'nvarchar(50)') AS [Edu.Minor]&#x0D;
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Edu.GPA)[1]', 'nvarchar(5)') AS [Edu.GPA]&#x0D;
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Edu.GPAScale)[1]', 'nvarchar(5)') AS [Edu.GPAScale]&#x0D;
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Edu.School)[1]', 'nvarchar(100)') AS [Edu.School]&#x0D;
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Edu.Location/Location/Loc.CountryRegion)[1]', 'nvarchar(100)') AS [Edu.Loc.CountryRegion]&#x0D;
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Edu.Location/Location/Loc.State)[1]', 'nvarchar(100)') AS [Edu.Loc.State]&#x0D;
    ,[Education].ref.value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
        (Edu.Location/Location/Loc.City)[1]', 'nvarchar(100)') AS [Edu.Loc.City]&#x0D;
FROM [HumanResources].[JobCandidate] jc &#x0D;
CROSS APPLY jc.[Resume].nodes(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume""; &#x0D;
    /Resume/Education') AS [Education](ref);&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
425;14/10/2005 01:59:59;"dbo";"CREATE_VIEW";"Production";"vProductAndDescription";"
CREATE VIEW [Production].[vProductAndDescription] 
WITH SCHEMABINDING 
AS 
-- View (indexed or standard) to display products and product descriptions by language.
SELECT 
    p.[ProductID] 
    ,p.[Name] 
    ,pm.[Name] AS [ProductModel] 
    ,pmx.[CultureID] 
    ,pd.[Description] 
FROM [Production].[Product] p 
    INNER JOIN [Production].[ProductModel] pm 
    ON p.[ProductModelID] = pm.[ProductModelID] 
    INNER JOIN [Production].[ProductModelProductDescriptionCulture] pmx 
    ON pm.[ProductModelID] = pmx.[ProductModelID] 
    INNER JOIN [Production].[ProductDescription] pd 
    ON pmx.[ProductDescriptionID] = pd.[ProductDescriptionID];
";"<EVENT_INSTANCE><EventType>CREATE_VIEW</EventType><PostTime>2005-10-14T01:59:59.397</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>vProductAndDescription</ObjectName><ObjectType>VIEW</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE VIEW [Production].[vProductAndDescription] &#x0D;
WITH SCHEMABINDING &#x0D;
AS &#x0D;
-- View (indexed or standard) to display products and product descriptions by language.&#x0D;
SELECT &#x0D;
    p.[ProductID] &#x0D;
    ,p.[Name] &#x0D;
    ,pm.[Name] AS [ProductModel] &#x0D;
    ,pmx.[CultureID] &#x0D;
    ,pd.[Description] &#x0D;
FROM [Production].[Product] p &#x0D;
    INNER JOIN [Production].[ProductModel] pm &#x0D;
    ON p.[ProductModelID] = pm.[ProductModelID] &#x0D;
    INNER JOIN [Production].[ProductModelProductDescriptionCulture] pmx &#x0D;
    ON pm.[ProductModelID] = pmx.[ProductModelID] &#x0D;
    INNER JOIN [Production].[ProductDescription] pd &#x0D;
    ON pmx.[ProductDescriptionID] = pd.[ProductDescriptionID];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
426;14/10/2005 01:59:59;"dbo";"CREATE_INDEX";"Production";"IX_vProductAndDescription";"CREATE UNIQUE CLUSTERED INDEX [IX_vProductAndDescription] ON [Production].[vProductAndDescription]([CultureID], [ProductID]);
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T01:59:59.537</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>IX_vProductAndDescription</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>vProductAndDescription</TargetObjectName><TargetObjectType>VIEW</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE CLUSTERED INDEX [IX_vProductAndDescription] ON [Production].[vProductAndDescription]([CultureID], [ProductID]);&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
427;14/10/2005 01:59:59;"dbo";"CREATE_VIEW";"Production";"vProductModelCatalogDescription";"
CREATE VIEW [Production].[vProductModelCatalogDescription] 
AS 
SELECT 
    [ProductModelID] 
    ,[Name] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        declare namespace html=""http://www.w3.org/1999/xhtml""; 
        (/p1:ProductDescription/p1:Summary/html:p)[1]', 'nvarchar(max)') AS [Summary] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        (/p1:ProductDescription/p1:Manufacturer/p1:Name)[1]', 'nvarchar(max)') AS [Manufacturer] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        (/p1:ProductDescription/p1:Manufacturer/p1:Copyright)[1]', 'nvarchar(30)') AS [Copyright] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        (/p1:ProductDescription/p1:Manufacturer/p1:ProductURL)[1]', 'nvarchar(256)') AS [ProductURL] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        declare namespace wm=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain""; 
        (/p1:ProductDescription/p1:Features/wm:Warranty/wm:WarrantyPeriod)[1]', 'nvarchar(256)') AS [WarrantyPeriod] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        declare namespace wm=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain""; 
        (/p1:ProductDescription/p1:Features/wm:Warranty/wm:Description)[1]', 'nvarchar(256)') AS [WarrantyDescription] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        declare namespace wm=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain""; 
        (/p1:ProductDescription/p1:Features/wm:Maintenance/wm:NoOfYears)[1]', 'nvarchar(256)') AS [NoOfYears] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        declare namespace wm=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain""; 
        (/p1:ProductDescription/p1:Features/wm:Maintenance/wm:Description)[1]', 'nvarchar(256)') AS [MaintenanceDescription] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        declare namespace wf=""http://www.adventure-works.com/schemas/OtherFeatures""; 
        (/p1:ProductDescription/p1:Features/wf:wheel)[1]', 'nvarchar(256)') AS [Wheel] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        declare namespace wf=""http://www.adventure-works.com/schemas/OtherFeatures""; 
        (/p1:ProductDescription/p1:Features/wf:saddle)[1]', 'nvarchar(256)') AS [Saddle] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        declare namespace wf=""http://www.adventure-works.com/schemas/OtherFeatures""; 
        (/p1:ProductDescription/p1:Features/wf:pedal)[1]', 'nvarchar(256)') AS [Pedal] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        declare namespace wf=""http://www.adventure-works.com/schemas/OtherFeatures""; 
        (/p1:ProductDescription/p1:Features/wf:BikeFrame)[1]', 'nvarchar(max)') AS [BikeFrame] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        declare namespace wf=""http://www.adventure-works.com/schemas/OtherFeatures""; 
        (/p1:ProductDescription/p1:Features/wf:crankset)[1]', 'nvarchar(256)') AS [Crankset] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        (/p1:ProductDescription/p1:Picture/p1:Angle)[1]', 'nvarchar(256)') AS [PictureAngle] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        (/p1:ProductDescription/p1:Picture/p1:Size)[1]', 'nvarchar(256)') AS [PictureSize] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        (/p1:ProductDescription/p1:Picture/p1:ProductPhotoID)[1]', 'nvarchar(256)') AS [ProductPhotoID] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        (/p1:ProductDescription/p1:Specifications/Material)[1]', 'nvarchar(256)') AS [Material] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        (/p1:ProductDescription/p1:Specifications/Color)[1]', 'nvarchar(256)') AS [Color] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        (/p1:ProductDescription/p1:Specifications/ProductLine)[1]', 'nvarchar(256)') AS [ProductLine] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        (/p1:ProductDescription/p1:Specifications/Style)[1]', 'nvarchar(256)') AS [Style] 
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; 
        (/p1:ProductDescription/p1:Specifications/RiderExperience)[1]', 'nvarchar(1024)') AS [RiderExperience] 
    ,[rowguid] 
    ,[ModifiedDate]
FROM [Production].[ProductModel] 
WHERE [CatalogDescription] IS NOT NULL;
";"<EVENT_INSTANCE><EventType>CREATE_VIEW</EventType><PostTime>2005-10-14T01:59:59.693</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>vProductModelCatalogDescription</ObjectName><ObjectType>VIEW</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE VIEW [Production].[vProductModelCatalogDescription] &#x0D;
AS &#x0D;
SELECT &#x0D;
    [ProductModelID] &#x0D;
    ,[Name] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        declare namespace html=""http://www.w3.org/1999/xhtml""; &#x0D;
        (/p1:ProductDescription/p1:Summary/html:p)[1]', 'nvarchar(max)') AS [Summary] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        (/p1:ProductDescription/p1:Manufacturer/p1:Name)[1]', 'nvarchar(max)') AS [Manufacturer] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        (/p1:ProductDescription/p1:Manufacturer/p1:Copyright)[1]', 'nvarchar(30)') AS [Copyright] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        (/p1:ProductDescription/p1:Manufacturer/p1:ProductURL)[1]', 'nvarchar(256)') AS [ProductURL] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        declare namespace wm=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain""; &#x0D;
        (/p1:ProductDescription/p1:Features/wm:Warranty/wm:WarrantyPeriod)[1]', 'nvarchar(256)') AS [WarrantyPeriod] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        declare namespace wm=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain""; &#x0D;
        (/p1:ProductDescription/p1:Features/wm:Warranty/wm:Description)[1]', 'nvarchar(256)') AS [WarrantyDescription] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        declare namespace wm=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain""; &#x0D;
        (/p1:ProductDescription/p1:Features/wm:Maintenance/wm:NoOfYears)[1]', 'nvarchar(256)') AS [NoOfYears] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        declare namespace wm=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain""; &#x0D;
        (/p1:ProductDescription/p1:Features/wm:Maintenance/wm:Description)[1]', 'nvarchar(256)') AS [MaintenanceDescription] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        declare namespace wf=""http://www.adventure-works.com/schemas/OtherFeatures""; &#x0D;
        (/p1:ProductDescription/p1:Features/wf:wheel)[1]', 'nvarchar(256)') AS [Wheel] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        declare namespace wf=""http://www.adventure-works.com/schemas/OtherFeatures""; &#x0D;
        (/p1:ProductDescription/p1:Features/wf:saddle)[1]', 'nvarchar(256)') AS [Saddle] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        declare namespace wf=""http://www.adventure-works.com/schemas/OtherFeatures""; &#x0D;
        (/p1:ProductDescription/p1:Features/wf:pedal)[1]', 'nvarchar(256)') AS [Pedal] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        declare namespace wf=""http://www.adventure-works.com/schemas/OtherFeatures""; &#x0D;
        (/p1:ProductDescription/p1:Features/wf:BikeFrame)[1]', 'nvarchar(max)') AS [BikeFrame] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        declare namespace wf=""http://www.adventure-works.com/schemas/OtherFeatures""; &#x0D;
        (/p1:ProductDescription/p1:Features/wf:crankset)[1]', 'nvarchar(256)') AS [Crankset] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        (/p1:ProductDescription/p1:Picture/p1:Angle)[1]', 'nvarchar(256)') AS [PictureAngle] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        (/p1:ProductDescription/p1:Picture/p1:Size)[1]', 'nvarchar(256)') AS [PictureSize] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        (/p1:ProductDescription/p1:Picture/p1:ProductPhotoID)[1]', 'nvarchar(256)') AS [ProductPhotoID] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        (/p1:ProductDescription/p1:Specifications/Material)[1]', 'nvarchar(256)') AS [Material] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        (/p1:ProductDescription/p1:Specifications/Color)[1]', 'nvarchar(256)') AS [Color] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        (/p1:ProductDescription/p1:Specifications/ProductLine)[1]', 'nvarchar(256)') AS [ProductLine] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        (/p1:ProductDescription/p1:Specifications/Style)[1]', 'nvarchar(256)') AS [Style] &#x0D;
    ,[CatalogDescription].value(N'declare namespace p1=""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription""; &#x0D;
        (/p1:ProductDescription/p1:Specifications/RiderExperience)[1]', 'nvarchar(1024)') AS [RiderExperience] &#x0D;
    ,[rowguid] &#x0D;
    ,[ModifiedDate]&#x0D;
FROM [Production].[ProductModel] &#x0D;
WHERE [CatalogDescription] IS NOT NULL;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
428;14/10/2005 01:59:59;"dbo";"CREATE_VIEW";"Production";"vProductModelInstructions";"
CREATE VIEW [Production].[vProductModelInstructions] 
AS 
SELECT 
    [ProductModelID] 
    ,[Name] 
    ,[Instructions].value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions""; 
        (/root/text())[1]', 'nvarchar(max)') AS [Instructions] 
    ,[MfgInstructions].ref.value('@LocationID[1]', 'int') AS [LocationID] 
    ,[MfgInstructions].ref.value('@SetupHours[1]', 'decimal(9, 4)') AS [SetupHours] 
    ,[MfgInstructions].ref.value('@MachineHours[1]', 'decimal(9, 4)') AS [MachineHours] 
    ,[MfgInstructions].ref.value('@LaborHours[1]', 'decimal(9, 4)') AS [LaborHours] 
    ,[MfgInstructions].ref.value('@LotSize[1]', 'int') AS [LotSize] 
    ,[Steps].ref.value('string(.)[1]', 'nvarchar(1024)') AS [Step] 
    ,[rowguid] 
    ,[ModifiedDate]
FROM [Production].[ProductModel] 
CROSS APPLY [Instructions].nodes(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions""; 
    /root/Location') MfgInstructions(ref)
CROSS APPLY [MfgInstructions].ref.nodes('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions""; 
    step') Steps(ref);
";"<EVENT_INSTANCE><EventType>CREATE_VIEW</EventType><PostTime>2005-10-14T01:59:59.740</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Production</SchemaName><ObjectName>vProductModelInstructions</ObjectName><ObjectType>VIEW</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE VIEW [Production].[vProductModelInstructions] &#x0D;
AS &#x0D;
SELECT &#x0D;
    [ProductModelID] &#x0D;
    ,[Name] &#x0D;
    ,[Instructions].value(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions""; &#x0D;
        (/root/text())[1]', 'nvarchar(max)') AS [Instructions] &#x0D;
    ,[MfgInstructions].ref.value('@LocationID[1]', 'int') AS [LocationID] &#x0D;
    ,[MfgInstructions].ref.value('@SetupHours[1]', 'decimal(9, 4)') AS [SetupHours] &#x0D;
    ,[MfgInstructions].ref.value('@MachineHours[1]', 'decimal(9, 4)') AS [MachineHours] &#x0D;
    ,[MfgInstructions].ref.value('@LaborHours[1]', 'decimal(9, 4)') AS [LaborHours] &#x0D;
    ,[MfgInstructions].ref.value('@LotSize[1]', 'int') AS [LotSize] &#x0D;
    ,[Steps].ref.value('string(.)[1]', 'nvarchar(1024)') AS [Step] &#x0D;
    ,[rowguid] &#x0D;
    ,[ModifiedDate]&#x0D;
FROM [Production].[ProductModel] &#x0D;
CROSS APPLY [Instructions].nodes(N'declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions""; &#x0D;
    /root/Location') MfgInstructions(ref)&#x0D;
CROSS APPLY [MfgInstructions].ref.nodes('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions""; &#x0D;
    step') Steps(ref);&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
429;14/10/2005 01:59:59;"dbo";"CREATE_VIEW";"Sales";"vSalesPerson";"
CREATE VIEW [Sales].[vSalesPerson] 
AS 
SELECT 
    s.[SalesPersonID]
    ,c.[Title]
    ,c.[FirstName]
    ,c.[MiddleName]
    ,c.[LastName]
    ,c.[Suffix]
    ,[JobTitle] = e.[Title]
    ,c.[Phone]
    ,c.[EmailAddress]
    ,c.[EmailPromotion]
    ,a.[AddressLine1]
    ,a.[AddressLine2]
    ,a.[City]
    ,[StateProvinceName] = sp.[Name]
    ,a.[PostalCode]
    ,[CountryRegionName] = cr.[Name]
    ,[TerritoryName] = st.[Name]
    ,[TerritoryGroup] = st.[Group]
    ,s.[SalesQuota]
    ,s.[SalesYTD]
    ,s.[SalesLastYear]
FROM [Sales].[SalesPerson] s
    INNER JOIN [HumanResources].[Employee] e 
    ON e.[EmployeeID] = s.[SalesPersonID]
    LEFT OUTER JOIN [Sales].[SalesTerritory] st 
    ON st.[TerritoryID] = s.[TerritoryID]
    INNER JOIN [Person].[Contact] c 
    ON c.[ContactID] = e.[ContactID]
    INNER JOIN [HumanResources].[EmployeeAddress] ea 
    ON e.[EmployeeID] = ea.[EmployeeID] 
    INNER JOIN [Person].[Address] a 
    ON ea.[AddressID] = a.[AddressID]
    INNER JOIN [Person].[StateProvince] sp 
    ON sp.[StateProvinceID] = a.[StateProvinceID]
    INNER JOIN [Person].[CountryRegion] cr 
    ON cr.[CountryRegionCode] = sp.[CountryRegionCode];
";"<EVENT_INSTANCE><EventType>CREATE_VIEW</EventType><PostTime>2005-10-14T01:59:59.837</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>vSalesPerson</ObjectName><ObjectType>VIEW</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE VIEW [Sales].[vSalesPerson] &#x0D;
AS &#x0D;
SELECT &#x0D;
    s.[SalesPersonID]&#x0D;
    ,c.[Title]&#x0D;
    ,c.[FirstName]&#x0D;
    ,c.[MiddleName]&#x0D;
    ,c.[LastName]&#x0D;
    ,c.[Suffix]&#x0D;
    ,[JobTitle] = e.[Title]&#x0D;
    ,c.[Phone]&#x0D;
    ,c.[EmailAddress]&#x0D;
    ,c.[EmailPromotion]&#x0D;
    ,a.[AddressLine1]&#x0D;
    ,a.[AddressLine2]&#x0D;
    ,a.[City]&#x0D;
    ,[StateProvinceName] = sp.[Name]&#x0D;
    ,a.[PostalCode]&#x0D;
    ,[CountryRegionName] = cr.[Name]&#x0D;
    ,[TerritoryName] = st.[Name]&#x0D;
    ,[TerritoryGroup] = st.[Group]&#x0D;
    ,s.[SalesQuota]&#x0D;
    ,s.[SalesYTD]&#x0D;
    ,s.[SalesLastYear]&#x0D;
FROM [Sales].[SalesPerson] s&#x0D;
    INNER JOIN [HumanResources].[Employee] e &#x0D;
    ON e.[EmployeeID] = s.[SalesPersonID]&#x0D;
    LEFT OUTER JOIN [Sales].[SalesTerritory] st &#x0D;
    ON st.[TerritoryID] = s.[TerritoryID]&#x0D;
    INNER JOIN [Person].[Contact] c &#x0D;
    ON c.[ContactID] = e.[ContactID]&#x0D;
    INNER JOIN [HumanResources].[EmployeeAddress] ea &#x0D;
    ON e.[EmployeeID] = ea.[EmployeeID] &#x0D;
    INNER JOIN [Person].[Address] a &#x0D;
    ON ea.[AddressID] = a.[AddressID]&#x0D;
    INNER JOIN [Person].[StateProvince] sp &#x0D;
    ON sp.[StateProvinceID] = a.[StateProvinceID]&#x0D;
    INNER JOIN [Person].[CountryRegion] cr &#x0D;
    ON cr.[CountryRegionCode] = sp.[CountryRegionCode];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
430;14/10/2005 01:59:59;"dbo";"CREATE_VIEW";"Sales";"vSalesPersonSalesByFiscalYears";"
CREATE VIEW [Sales].[vSalesPersonSalesByFiscalYears] 
AS 
SELECT 
    pvt.[SalesPersonID]
    ,pvt.[FullName]
    ,pvt.[Title]
    ,pvt.[SalesTerritory]
    ,pvt.[2002]
    ,pvt.[2003]
    ,pvt.[2004] 
FROM (SELECT 
        soh.[SalesPersonID]
        ,c.[FirstName] + ' ' + COALESCE(c.[MiddleName], '') + ' ' + c.[LastName] AS [FullName]
        ,e.[Title]
        ,st.[Name] AS [SalesTerritory]
        ,soh.[SubTotal]
        ,YEAR(DATEADD(m, 6, soh.[OrderDate])) AS [FiscalYear] 
    FROM [Sales].[SalesPerson] sp 
        INNER JOIN [Sales].[SalesOrderHeader] soh 
        ON sp.[SalesPersonID] = soh.[SalesPersonID]
        INNER JOIN [Sales].[SalesTerritory] st 
        ON sp.[TerritoryID] = st.[TerritoryID] 
        INNER JOIN [HumanResources].[Employee] e 
        ON soh.[SalesPersonID] = e.[EmployeeID] 
        INNER JOIN [Person].[Contact] c 
        ON e.[ContactID] = c.ContactID 
    ) AS soh 
PIVOT 
(
    SUM([SubTotal]) 
    FOR [FiscalYear] 
    IN ([2002], [2003], [2004])
) AS pvt;
";"<EVENT_INSTANCE><EventType>CREATE_VIEW</EventType><PostTime>2005-10-14T01:59:59.943</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>vSalesPersonSalesByFiscalYears</ObjectName><ObjectType>VIEW</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE VIEW [Sales].[vSalesPersonSalesByFiscalYears] &#x0D;
AS &#x0D;
SELECT &#x0D;
    pvt.[SalesPersonID]&#x0D;
    ,pvt.[FullName]&#x0D;
    ,pvt.[Title]&#x0D;
    ,pvt.[SalesTerritory]&#x0D;
    ,pvt.[2002]&#x0D;
    ,pvt.[2003]&#x0D;
    ,pvt.[2004] &#x0D;
FROM (SELECT &#x0D;
        soh.[SalesPersonID]&#x0D;
        ,c.[FirstName] + ' ' + COALESCE(c.[MiddleName], '') + ' ' + c.[LastName] AS [FullName]&#x0D;
        ,e.[Title]&#x0D;
        ,st.[Name] AS [SalesTerritory]&#x0D;
        ,soh.[SubTotal]&#x0D;
        ,YEAR(DATEADD(m, 6, soh.[OrderDate])) AS [FiscalYear] &#x0D;
    FROM [Sales].[SalesPerson] sp &#x0D;
        INNER JOIN [Sales].[SalesOrderHeader] soh &#x0D;
        ON sp.[SalesPersonID] = soh.[SalesPersonID]&#x0D;
        INNER JOIN [Sales].[SalesTerritory] st &#x0D;
        ON sp.[TerritoryID] = st.[TerritoryID] &#x0D;
        INNER JOIN [HumanResources].[Employee] e &#x0D;
        ON soh.[SalesPersonID] = e.[EmployeeID] &#x0D;
        INNER JOIN [Person].[Contact] c &#x0D;
        ON e.[ContactID] = c.ContactID &#x0D;
    ) AS soh &#x0D;
PIVOT &#x0D;
(&#x0D;
    SUM([SubTotal]) &#x0D;
    FOR [FiscalYear] &#x0D;
    IN ([2002], [2003], [2004])&#x0D;
) AS pvt;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
431;14/10/2005 02:00:00;"dbo";"CREATE_VIEW";"Person";"vStateProvinceCountryRegion";"
CREATE VIEW [Person].[vStateProvinceCountryRegion] 
WITH SCHEMABINDING 
AS 
SELECT 
    sp.[StateProvinceID] 
    ,sp.[StateProvinceCode] 
    ,sp.[IsOnlyStateProvinceFlag] 
    ,sp.[Name] AS [StateProvinceName] 
    ,sp.[TerritoryID] 
    ,cr.[CountryRegionCode] 
    ,cr.[Name] AS [CountryRegionName]
FROM [Person].[StateProvince] sp 
    INNER JOIN [Person].[CountryRegion] cr 
    ON sp.[CountryRegionCode] = cr.[CountryRegionCode];
";"<EVENT_INSTANCE><EventType>CREATE_VIEW</EventType><PostTime>2005-10-14T02:00:00.053</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>vStateProvinceCountryRegion</ObjectName><ObjectType>VIEW</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE VIEW [Person].[vStateProvinceCountryRegion] &#x0D;
WITH SCHEMABINDING &#x0D;
AS &#x0D;
SELECT &#x0D;
    sp.[StateProvinceID] &#x0D;
    ,sp.[StateProvinceCode] &#x0D;
    ,sp.[IsOnlyStateProvinceFlag] &#x0D;
    ,sp.[Name] AS [StateProvinceName] &#x0D;
    ,sp.[TerritoryID] &#x0D;
    ,cr.[CountryRegionCode] &#x0D;
    ,cr.[Name] AS [CountryRegionName]&#x0D;
FROM [Person].[StateProvince] sp &#x0D;
    INNER JOIN [Person].[CountryRegion] cr &#x0D;
    ON sp.[CountryRegionCode] = cr.[CountryRegionCode];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
432;14/10/2005 02:00:00;"dbo";"CREATE_INDEX";"Person";"IX_vStateProvinceCountryRegion";"CREATE UNIQUE CLUSTERED INDEX [IX_vStateProvinceCountryRegion] ON [Person].[vStateProvinceCountryRegion]([StateProvinceID], [CountryRegionCode]);
";"<EVENT_INSTANCE><EventType>CREATE_INDEX</EventType><PostTime>2005-10-14T02:00:00.163</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Person</SchemaName><ObjectName>IX_vStateProvinceCountryRegion</ObjectName><ObjectType>INDEX</ObjectType><TargetObjectName>vStateProvinceCountryRegion</TargetObjectName><TargetObjectType>VIEW</TargetObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>CREATE UNIQUE CLUSTERED INDEX [IX_vStateProvinceCountryRegion] ON [Person].[vStateProvinceCountryRegion]([StateProvinceID], [CountryRegionCode]);&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
433;14/10/2005 02:00:00;"dbo";"CREATE_VIEW";"Sales";"vStoreWithDemographics";"
CREATE VIEW [Sales].[vStoreWithDemographics] AS 
SELECT 
    s.[CustomerID] 
    ,s.[Name] 
    ,ct.[Name] AS [ContactType] 
    ,c.[Title] 
    ,c.[FirstName] 
    ,c.[MiddleName] 
    ,c.[LastName] 
    ,c.[Suffix] 
    ,c.[Phone] 
    ,c.[EmailAddress] 
    ,c.[EmailPromotion] 
    ,at.[Name] AS [AddressType]
    ,a.[AddressLine1] 
    ,a.[AddressLine2] 
    ,a.[City] 
    ,sp.[Name] AS [StateProvinceName] 
    ,a.[PostalCode] 
    ,cr.[Name] AS [CountryRegionName] 
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; 
        (/StoreSurvey/AnnualSales)[1]', 'money') AS [AnnualSales] 
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; 
        (/StoreSurvey/AnnualRevenue)[1]', 'money') AS [AnnualRevenue] 
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; 
        (/StoreSurvey/BankName)[1]', 'nvarchar(50)') AS [BankName] 
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; 
        (/StoreSurvey/BusinessType)[1]', 'nvarchar(5)') AS [BusinessType] 
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; 
        (/StoreSurvey/YearOpened)[1]', 'integer') AS [YearOpened] 
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; 
        (/StoreSurvey/Specialty)[1]', 'nvarchar(50)') AS [Specialty] 
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; 
        (/StoreSurvey/SquareFeet)[1]', 'integer') AS [SquareFeet] 
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; 
        (/StoreSurvey/Brands)[1]', 'nvarchar(30)') AS [Brands] 
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; 
        (/StoreSurvey/Internet)[1]', 'nvarchar(30)') AS [Internet] 
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; 
        (/StoreSurvey/NumberEmployees)[1]', 'integer') AS [NumberEmployees] 
FROM [Sales].[Store] s
    INNER JOIN [Sales].[StoreContact] sc 
    ON sc.[CustomerID] = s.[CustomerID]
    INNER JOIN [Person].[Contact] c 
    ON c.[ContactID] = sc.[ContactID]
    INNER JOIN [Person].[ContactType] ct 
    ON sc.[ContactTypeID] = ct.[ContactTypeID]
    INNER JOIN [Sales].[CustomerAddress] ca 
    ON ca.[CustomerID] = s.[CustomerID]
    INNER JOIN [Person].[Address] a 
    ON a.[AddressID] = ca.[AddressID]
    INNER JOIN [Person].[StateProvince] sp 
    ON sp.[StateProvinceID] = a.[StateProvinceID]
    INNER JOIN [Person].[CountryRegion] cr 
    ON cr.[CountryRegionCode] = sp.[CountryRegionCode]
    INNER JOIN [Person].[AddressType] at 
    ON ca.[AddressTypeID] = at.[AddressTypeID]
WHERE s.[CustomerID] IN (SELECT [Sales].[Customer].[CustomerID] 
    FROM [Sales].[Customer] WHERE UPPER([Sales].[Customer].[CustomerType]) = 'S');
";"<EVENT_INSTANCE><EventType>CREATE_VIEW</EventType><PostTime>2005-10-14T02:00:00.303</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Sales</SchemaName><ObjectName>vStoreWithDemographics</ObjectName><ObjectType>VIEW</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE VIEW [Sales].[vStoreWithDemographics] AS &#x0D;
SELECT &#x0D;
    s.[CustomerID] &#x0D;
    ,s.[Name] &#x0D;
    ,ct.[Name] AS [ContactType] &#x0D;
    ,c.[Title] &#x0D;
    ,c.[FirstName] &#x0D;
    ,c.[MiddleName] &#x0D;
    ,c.[LastName] &#x0D;
    ,c.[Suffix] &#x0D;
    ,c.[Phone] &#x0D;
    ,c.[EmailAddress] &#x0D;
    ,c.[EmailPromotion] &#x0D;
    ,at.[Name] AS [AddressType]&#x0D;
    ,a.[AddressLine1] &#x0D;
    ,a.[AddressLine2] &#x0D;
    ,a.[City] &#x0D;
    ,sp.[Name] AS [StateProvinceName] &#x0D;
    ,a.[PostalCode] &#x0D;
    ,cr.[Name] AS [CountryRegionName] &#x0D;
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; &#x0D;
        (/StoreSurvey/AnnualSales)[1]', 'money') AS [AnnualSales] &#x0D;
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; &#x0D;
        (/StoreSurvey/AnnualRevenue)[1]', 'money') AS [AnnualRevenue] &#x0D;
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; &#x0D;
        (/StoreSurvey/BankName)[1]', 'nvarchar(50)') AS [BankName] &#x0D;
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; &#x0D;
        (/StoreSurvey/BusinessType)[1]', 'nvarchar(5)') AS [BusinessType] &#x0D;
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; &#x0D;
        (/StoreSurvey/YearOpened)[1]', 'integer') AS [YearOpened] &#x0D;
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; &#x0D;
        (/StoreSurvey/Specialty)[1]', 'nvarchar(50)') AS [Specialty] &#x0D;
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; &#x0D;
        (/StoreSurvey/SquareFeet)[1]', 'integer') AS [SquareFeet] &#x0D;
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; &#x0D;
        (/StoreSurvey/Brands)[1]', 'nvarchar(30)') AS [Brands] &#x0D;
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; &#x0D;
        (/StoreSurvey/Internet)[1]', 'nvarchar(30)') AS [Internet] &#x0D;
    ,s.[Demographics].value('declare default element namespace ""http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey""; &#x0D;
        (/StoreSurvey/NumberEmployees)[1]', 'integer') AS [NumberEmployees] &#x0D;
FROM [Sales].[Store] s&#x0D;
    INNER JOIN [Sales].[StoreContact] sc &#x0D;
    ON sc.[CustomerID] = s.[CustomerID]&#x0D;
    INNER JOIN [Person].[Contact] c &#x0D;
    ON c.[ContactID] = sc.[ContactID]&#x0D;
    INNER JOIN [Person].[ContactType] ct &#x0D;
    ON sc.[ContactTypeID] = ct.[ContactTypeID]&#x0D;
    INNER JOIN [Sales].[CustomerAddress] ca &#x0D;
    ON ca.[CustomerID] = s.[CustomerID]&#x0D;
    INNER JOIN [Person].[Address] a &#x0D;
    ON a.[AddressID] = ca.[AddressID]&#x0D;
    INNER JOIN [Person].[StateProvince] sp &#x0D;
    ON sp.[StateProvinceID] = a.[StateProvinceID]&#x0D;
    INNER JOIN [Person].[CountryRegion] cr &#x0D;
    ON cr.[CountryRegionCode] = sp.[CountryRegionCode]&#x0D;
    INNER JOIN [Person].[AddressType] at &#x0D;
    ON ca.[AddressTypeID] = at.[AddressTypeID]&#x0D;
WHERE s.[CustomerID] IN (SELECT [Sales].[Customer].[CustomerID] &#x0D;
    FROM [Sales].[Customer] WHERE UPPER([Sales].[Customer].[CustomerType]) = 'S');&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
434;14/10/2005 02:00:00;"dbo";"CREATE_VIEW";"Purchasing";"vVendor";"
CREATE VIEW [Purchasing].[vVendor] AS 
SELECT 
    v.[VendorID]
    ,v.[Name]
    ,ct.[Name] AS [ContactType]
    ,c.[Title]
    ,c.[FirstName]
    ,c.[MiddleName]
    ,c.[LastName]
    ,c.[Suffix]
    ,c.[Phone]
    ,c.[EmailAddress]
    ,c.[EmailPromotion]
    ,a.[AddressLine1]
    ,a.[AddressLine2]
    ,a.[City]
    ,[StateProvinceName] = sp.[Name]
    ,a.[PostalCode]
    ,[CountryRegionName] = cr.[Name]
FROM [Purchasing].[Vendor] v
    INNER JOIN [Purchasing].[VendorContact] vc 
    ON vc.[VendorID] = v.[VendorID]
    INNER JOIN [Person].[Contact] c 
    ON c.[ContactID] = vc.[ContactID]
    INNER JOIN [Person].[ContactType] ct 
    ON vc.[ContactTypeID] = ct.[ContactTypeID]
    INNER JOIN [Purchasing].[VendorAddress] va 
    ON va.[VendorID] = v.[VendorID]
    INNER JOIN [Person].[Address] a 
    ON a.[AddressID] = va.[AddressID]
    INNER JOIN [Person].[StateProvince] sp 
    ON sp.[StateProvinceID] = a.[StateProvinceID]
    INNER JOIN [Person].[CountryRegion] cr 
    ON cr.[CountryRegionCode] = sp.[CountryRegionCode];
";"<EVENT_INSTANCE><EventType>CREATE_VIEW</EventType><PostTime>2005-10-14T02:00:00.383</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>Purchasing</SchemaName><ObjectName>vVendor</ObjectName><ObjectType>VIEW</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE VIEW [Purchasing].[vVendor] AS &#x0D;
SELECT &#x0D;
    v.[VendorID]&#x0D;
    ,v.[Name]&#x0D;
    ,ct.[Name] AS [ContactType]&#x0D;
    ,c.[Title]&#x0D;
    ,c.[FirstName]&#x0D;
    ,c.[MiddleName]&#x0D;
    ,c.[LastName]&#x0D;
    ,c.[Suffix]&#x0D;
    ,c.[Phone]&#x0D;
    ,c.[EmailAddress]&#x0D;
    ,c.[EmailPromotion]&#x0D;
    ,a.[AddressLine1]&#x0D;
    ,a.[AddressLine2]&#x0D;
    ,a.[City]&#x0D;
    ,[StateProvinceName] = sp.[Name]&#x0D;
    ,a.[PostalCode]&#x0D;
    ,[CountryRegionName] = cr.[Name]&#x0D;
FROM [Purchasing].[Vendor] v&#x0D;
    INNER JOIN [Purchasing].[VendorContact] vc &#x0D;
    ON vc.[VendorID] = v.[VendorID]&#x0D;
    INNER JOIN [Person].[Contact] c &#x0D;
    ON c.[ContactID] = vc.[ContactID]&#x0D;
    INNER JOIN [Person].[ContactType] ct &#x0D;
    ON vc.[ContactTypeID] = ct.[ContactTypeID]&#x0D;
    INNER JOIN [Purchasing].[VendorAddress] va &#x0D;
    ON va.[VendorID] = v.[VendorID]&#x0D;
    INNER JOIN [Person].[Address] a &#x0D;
    ON a.[AddressID] = va.[AddressID]&#x0D;
    INNER JOIN [Person].[StateProvince] sp &#x0D;
    ON sp.[StateProvinceID] = a.[StateProvinceID]&#x0D;
    INNER JOIN [Person].[CountryRegion] cr &#x0D;
    ON cr.[CountryRegionCode] = sp.[CountryRegionCode];&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
435;14/10/2005 02:00:00;"dbo";"CREATE_FUNCTION";"dbo";"ufnGetAccountingStartDate";"
CREATE FUNCTION [dbo].[ufnGetAccountingStartDate]()
RETURNS [datetime] 
AS 
BEGIN
    RETURN '2003-07-01';
END;
";"<EVENT_INSTANCE><EventType>CREATE_FUNCTION</EventType><PostTime>2005-10-14T02:00:00.600</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>ufnGetAccountingStartDate</ObjectName><ObjectType>FUNCTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE FUNCTION [dbo].[ufnGetAccountingStartDate]()&#x0D;
RETURNS [datetime] &#x0D;
AS &#x0D;
BEGIN&#x0D;
    RETURN '2003-07-01';&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
436;14/10/2005 02:00:00;"dbo";"CREATE_FUNCTION";"dbo";"ufnGetAccountingEndDate";"
CREATE FUNCTION [dbo].[ufnGetAccountingEndDate]()
RETURNS [datetime] 
AS 
BEGIN
    RETURN DATEADD(millisecond, -2, CONVERT(datetime, '2004-07-01', 101));
END;
";"<EVENT_INSTANCE><EventType>CREATE_FUNCTION</EventType><PostTime>2005-10-14T02:00:00.710</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>ufnGetAccountingEndDate</ObjectName><ObjectType>FUNCTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE FUNCTION [dbo].[ufnGetAccountingEndDate]()&#x0D;
RETURNS [datetime] &#x0D;
AS &#x0D;
BEGIN&#x0D;
    RETURN DATEADD(millisecond, -2, CONVERT(datetime, '2004-07-01', 101));&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
437;14/10/2005 02:00:00;"dbo";"CREATE_FUNCTION";"dbo";"ufnGetContactInformation";"
CREATE FUNCTION [dbo].[ufnGetContactInformation](@ContactID int)
RETURNS @retContactInformation TABLE 
(
    -- Columns returned by the function
    [ContactID] int PRIMARY KEY NOT NULL, 
    [FirstName] [nvarchar](50) NULL, 
    [LastName] [nvarchar](50) NULL, 
    [JobTitle] [nvarchar](50) NULL, 
    [ContactType] [nvarchar](50) NULL
)
AS 
-- Returns the first name, last name, job title and contact type for the specified contact.
BEGIN
    DECLARE 
        @FirstName [nvarchar](50), 
        @LastName [nvarchar](50), 
        @JobTitle [nvarchar](50), 
        @ContactType [nvarchar](50);


    -- Get common contact information
    SELECT 
        @ContactID = ContactID, 
        @FirstName = FirstName, 
        @LastName = LastName
    FROM [Person].[Contact] 
    WHERE [ContactID] = @ContactID;

    SET @JobTitle = 
        CASE 
            -- Check for employee
            WHEN EXISTS(SELECT * FROM [HumanResources].[Employee] e 
                WHERE e.[ContactID] = @ContactID) 
                THEN (SELECT [Title] 
                    FROM [HumanResources].[Employee] 
                    WHERE [ContactID] = @ContactID)

            -- Check for vendor
            WHEN EXISTS(SELECT * FROM [Purchasing].[VendorContact] vc 
                    INNER JOIN [Person].[ContactType] ct 
                    ON vc.[ContactTypeID] = ct.[ContactTypeID] 
                WHERE vc.[ContactID] = @ContactID) 
                THEN (SELECT ct.[Name] 
                    FROM [Purchasing].[VendorContact] vc 
                        INNER JOIN [Person].[ContactType] ct 
                        ON vc.[ContactTypeID] = ct.[ContactTypeID] 
                    WHERE vc.[ContactID] = @ContactID)

            -- Check for store
            WHEN EXISTS(SELECT * FROM [Sales].[StoreContact] sc 
                    INNER JOIN [Person].[ContactType] ct 
                    ON sc.[ContactTypeID] = ct.[ContactTypeID] 
                WHERE sc.[ContactID] = @ContactID) 
                THEN (SELECT ct.[Name] 
                    FROM [Sales].[StoreContact] sc 
                        INNER JOIN [Person].[ContactType] ct 
                        ON sc.[ContactTypeID] = ct.[ContactTypeID] 
                    WHERE [ContactID] = @ContactID)

            ELSE NULL 
        END;

    SET @ContactType = 
        CASE 
            -- Check for employee
            WHEN EXISTS(SELECT * FROM [HumanResources].[Employee] e 
                WHERE e.[ContactID] = @ContactID) 
                THEN 'Employee'

            -- Check for vendor
            WHEN EXISTS(SELECT * FROM [Purchasing].[VendorContact] vc 
                    INNER JOIN [Person].[ContactType] ct 
                    ON vc.[ContactTypeID] = ct.[ContactTypeID] 
                WHERE vc.[ContactID] = @ContactID) 
                THEN 'Vendor Contact'

            -- Check for store
            WHEN EXISTS(SELECT * FROM [Sales].[StoreContact] sc 
                    INNER JOIN [Person].[ContactType] ct 
                    ON sc.[ContactTypeID] = ct.[ContactTypeID] 
                WHERE sc.[ContactID] = @ContactID) 
                THEN 'Store Contact'

            -- Check for individual consumer
            WHEN EXISTS(SELECT * FROM [Sales].[Individual] i 
                WHERE i.[ContactID] = @ContactID) 
                THEN 'Consumer'
        END;

    -- Return the information to the caller
    IF @ContactID IS NOT NULL 
    BEGIN
        INSERT @retContactInformation
        SELECT @ContactID, @FirstName, @LastName, @JobTitle, @ContactType;
    END;

    RETURN;
END;
";"<EVENT_INSTANCE><EventType>CREATE_FUNCTION</EventType><PostTime>2005-10-14T02:00:00.820</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>ufnGetContactInformation</ObjectName><ObjectType>FUNCTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE FUNCTION [dbo].[ufnGetContactInformation](@ContactID int)&#x0D;
RETURNS @retContactInformation TABLE &#x0D;
(&#x0D;
    -- Columns returned by the function&#x0D;
    [ContactID] int PRIMARY KEY NOT NULL, &#x0D;
    [FirstName] [nvarchar](50) NULL, &#x0D;
    [LastName] [nvarchar](50) NULL, &#x0D;
    [JobTitle] [nvarchar](50) NULL, &#x0D;
    [ContactType] [nvarchar](50) NULL&#x0D;
)&#x0D;
AS &#x0D;
-- Returns the first name, last name, job title and contact type for the specified contact.&#x0D;
BEGIN&#x0D;
    DECLARE &#x0D;
        @FirstName [nvarchar](50), &#x0D;
        @LastName [nvarchar](50), &#x0D;
        @JobTitle [nvarchar](50), &#x0D;
        @ContactType [nvarchar](50);
&#x0D;
&#x0D;
    -- Get common contact information&#x0D;
    SELECT &#x0D;
        @ContactID = ContactID, &#x0D;
        @FirstName = FirstName, &#x0D;
        @LastName = LastName&#x0D;
    FROM [Person].[Contact] &#x0D;
    WHERE [ContactID] = @ContactID;&#x0D;
&#x0D;
    SET @JobTitle = &#x0D;
        CASE &#x0D;
            -- Check for employee&#x0D;
            WHEN EXISTS(SELECT * FROM [HumanResources].[Employee] e &#x0D;
                WHERE e.[ContactID] = @ContactID) &#x0D;
                THEN (SELECT [Title] &#x0D;
                    FROM [HumanResources].[Employee] &#x0D;
                    WHERE [ContactID] = @ContactID)&#x0D;
&#x0D;
            -- Check for vendor&#x0D;
            WHEN EXISTS(SELECT * FROM [Purchasing].[VendorContact] vc &#x0D;
                    INNER JOIN [Person].[ContactType] ct &#x0D;
                    ON vc.[ContactTypeID] = ct.[ContactTypeID] &#x0D;
                WHERE vc.[ContactID] = @ContactID) &#x0D;
                THEN (SELECT ct.[Name] &#x0D;
                    FROM [Purchasing].[VendorContact] vc &#x0D;
                        INNER JOIN [Person].[ContactType] ct &#x0D;
                        ON vc.[ContactTypeID] = ct.[ContactTypeID] &#x0D;
                    WHERE vc.[ContactID] = @ContactID)&#x0D;
&#x0D;
            -- Check for store&#x0D;
            WHEN EXISTS(SELECT * FROM [Sales].[StoreContact] sc &#x0D;
                    INNER JOIN [Person].[ContactType] ct &#x0D;
                    ON sc.[ContactTypeID] = ct.[ContactTypeID] &#x0D;
                WHERE sc.[ContactID] = @ContactID) &#x0D;
                THEN (SELECT ct.[Name] &#x0D;
                    FROM [Sales].[StoreContact] sc &#x0D;
                        INNER JOIN [Person].[ContactType] ct &#x0D;
                        ON sc.[ContactTypeID] = ct.[ContactTypeID] &#x0D;
                    WHERE [ContactID] = @ContactID)&#x0D;
&#x0D;
            ELSE NULL &#x0D;
        END;&#x0D;
&#x0D;
    SET @ContactType = &#x0D;
        CASE &#x0D;
            -- Check for employee&#x0D;
            WHEN EXISTS(SELECT * FROM [HumanResources].[Employee] e &#x0D;
                WHERE e.[ContactID] = @ContactID) &#x0D;
                THEN 'Employee'&#x0D;
&#x0D;
            -- Check for vendor&#x0D;
            WHEN EXISTS(SELECT * FROM [Purchasing].[VendorContact] vc &#x0D;
                    INNER JOIN [Person].[ContactType] ct &#x0D;
                    ON vc.[ContactTypeID] = ct.[ContactTypeID] &#x0D;
                WHERE vc.[ContactID] = @ContactID) &#x0D;
                THEN 'Vendor Contact'&#x0D;
&#x0D;
            -- Check for store&#x0D;
            WHEN EXISTS(SELECT * FROM [Sales].[StoreContact] sc &#x0D;
                    INNER JOIN [Person].[ContactType] ct &#x0D;
                    ON sc.[ContactTypeID] = ct.[ContactTypeID] &#x0D;
                WHERE sc.[ContactID] = @ContactID) &#x0D;
                THEN 'Store Contact'&#x0D;
&#x0D;
            -- Check for individual consumer&#x0D;
            WHEN EXISTS(SELECT * FROM [Sales].[Individual] i &#x0D;
                WHERE i.[ContactID] = @ContactID) &#x0D;
                THEN 'Consumer'&#x0D;
        END;&#x0D;
&#x0D;
    -- Return the information to the caller&#x0D;
    IF @ContactID IS NOT NULL &#x0D;
    BEGIN&#x0D;
        INSERT @retContactInformation&#x0D;
        SELECT @ContactID, @FirstName, @LastName, @JobTitle, @ContactType;&#x0D;
    END;&#x0D;
&#x0D;
    RETURN;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
438;14/10/2005 02:00:00;"dbo";"CREATE_FUNCTION";"dbo";"ufnGetProductDealerPrice";"
CREATE FUNCTION [dbo].[ufnGetProductDealerPrice](@ProductID [int], @OrderDate [datetime])
RETURNS [money] 
AS 
-- Returns the dealer price for the product on a specific date.
BEGIN
    DECLARE @DealerPrice money;
    DECLARE @DealerDiscount money;

    SET @DealerDiscount = 0.60  -- 60% of list price

    SELECT @DealerPrice = plph.[ListPrice] * @DealerDiscount 
    FROM [Production].[Product] p 
        INNER JOIN [Production].[ProductListPriceHistory] plph 
        ON p.[ProductID] = plph.[ProductID] 
            AND p.[ProductID] = @ProductID 
            AND @OrderDate BETWEEN plph.[StartDate] AND COALESCE(plph.[EndDate], '12-31-9999'); -- Make sure we get all the prices!

    RETURN @DealerPrice;
END;
";"<EVENT_INSTANCE><EventType>CREATE_FUNCTION</EventType><PostTime>2005-10-14T02:00:00.930</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>ufnGetProductDealerPrice</ObjectName><ObjectType>FUNCTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE FUNCTION [dbo].[ufnGetProductDealerPrice](@ProductID [int], @OrderDate [datetime])&#x0D;
RETURNS [money] &#x0D;
AS &#x0D;
-- Returns the dealer price for the product on a specific date.&#x0D;
BEGIN&#x0D;
    DECLARE @DealerPrice money;&#x0D;
    DECLARE @DealerDiscount money;&#x0D;
&#x0D;
    SET @DealerDiscount = 0.60  -- 60% of list price&#x0D;
&#x0D;
    SELECT @DealerPrice = plph.[ListPrice] * @DealerDiscount &#x0D;
    FROM [Production].[Product] p &#x0D;
        INNER JOIN [Production].[ProductListPriceHistory] plph &#x0D;
        ON p.[ProductID] = plph.[ProductID] &#x0D;
            AND p.[ProductID] = @ProductID &#x0D;
            AND @OrderDate BETWEEN plph.[StartDate] AND COALESCE(plph.[EndDate], '12-31-9999'); -- Make sure we get all the prices!&#x0D;
&#x0D;
    RETURN @DealerPrice;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
439;14/10/2005 02:00:01;"dbo";"CREATE_FUNCTION";"dbo";"ufnGetProductListPrice";"
CREATE FUNCTION [dbo].[ufnGetProductListPrice](@ProductID [int], @OrderDate [datetime])
RETURNS [money] 
AS 
BEGIN
    DECLARE @ListPrice money;

    SELECT @ListPrice = plph.[ListPrice] 
    FROM [Production].[Product] p 
        INNER JOIN [Production].[ProductListPriceHistory] plph 
        ON p.[ProductID] = plph.[ProductID] 
            AND p.[ProductID] = @ProductID 
            AND @OrderDate BETWEEN plph.[StartDate] AND COALESCE(plph.[EndDate], '12-31-9999'); -- Make sure we get all the prices!

    RETURN @ListPrice;
END;
";"<EVENT_INSTANCE><EventType>CREATE_FUNCTION</EventType><PostTime>2005-10-14T02:00:01.037</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>ufnGetProductListPrice</ObjectName><ObjectType>FUNCTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE FUNCTION [dbo].[ufnGetProductListPrice](@ProductID [int], @OrderDate [datetime])&#x0D;
RETURNS [money] &#x0D;
AS &#x0D;
BEGIN&#x0D;
    DECLARE @ListPrice money;&#x0D;
&#x0D;
    SELECT @ListPrice = plph.[ListPrice] &#x0D;
    FROM [Production].[Product] p &#x0D;
        INNER JOIN [Production].[ProductListPriceHistory] plph &#x0D;
        ON p.[ProductID] = plph.[ProductID] &#x0D;
            AND p.[ProductID] = @ProductID &#x0D;
            AND @OrderDate BETWEEN plph.[StartDate] AND COALESCE(plph.[EndDate], '12-31-9999'); -- Make sure we get all the prices!&#x0D;
&#x0D;
    RETURN @ListPrice;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
440;14/10/2005 02:00:01;"dbo";"CREATE_FUNCTION";"dbo";"ufnGetProductStandardCost";"
CREATE FUNCTION [dbo].[ufnGetProductStandardCost](@ProductID [int], @OrderDate [datetime])
RETURNS [money] 
AS 
-- Returns the standard cost for the product on a specific date.
BEGIN
    DECLARE @StandardCost money;

    SELECT @StandardCost = pch.[StandardCost] 
    FROM [Production].[Product] p 
        INNER JOIN [Production].[ProductCostHistory] pch 
        ON p.[ProductID] = pch.[ProductID] 
            AND p.[ProductID] = @ProductID 
            AND @OrderDate BETWEEN pch.[StartDate] AND COALESCE(pch.[EndDate], '12-31-9999'); -- Make sure we get all the prices!

    RETURN @StandardCost;
END;
";"<EVENT_INSTANCE><EventType>CREATE_FUNCTION</EventType><PostTime>2005-10-14T02:00:01.147</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>ufnGetProductStandardCost</ObjectName><ObjectType>FUNCTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE FUNCTION [dbo].[ufnGetProductStandardCost](@ProductID [int], @OrderDate [datetime])&#x0D;
RETURNS [money] &#x0D;
AS &#x0D;
-- Returns the standard cost for the product on a specific date.&#x0D;
BEGIN&#x0D;
    DECLARE @StandardCost money;&#x0D;
&#x0D;
    SELECT @StandardCost = pch.[StandardCost] &#x0D;
    FROM [Production].[Product] p &#x0D;
        INNER JOIN [Production].[ProductCostHistory] pch &#x0D;
        ON p.[ProductID] = pch.[ProductID] &#x0D;
            AND p.[ProductID] = @ProductID &#x0D;
            AND @OrderDate BETWEEN pch.[StartDate] AND COALESCE(pch.[EndDate], '12-31-9999'); -- Make sure we get all the prices!&#x0D;
&#x0D;
    RETURN @StandardCost;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
441;14/10/2005 02:00:01;"dbo";"CREATE_FUNCTION";"dbo";"ufnGetStock";"
CREATE FUNCTION [dbo].[ufnGetStock](@ProductID [int])
RETURNS [int] 
AS 
-- Returns the stock level for the product. This function is used internally only
BEGIN
    DECLARE @ret int;
    
    SELECT @ret = SUM(p.[Quantity]) 
    FROM [Production].[ProductInventory] p 
    WHERE p.[ProductID] = @ProductID 
        AND p.[LocationID] = '6'; -- Only look at inventory in the misc storage
    
    IF (@ret IS NULL) 
        SET @ret = 0
    
    RETURN @ret
END;
";"<EVENT_INSTANCE><EventType>CREATE_FUNCTION</EventType><PostTime>2005-10-14T02:00:01.257</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>ufnGetStock</ObjectName><ObjectType>FUNCTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE FUNCTION [dbo].[ufnGetStock](@ProductID [int])&#x0D;
RETURNS [int] &#x0D;
AS &#x0D;
-- Returns the stock level for the product. This function is used internally only&#x0D;
BEGIN&#x0D;
    DECLARE @ret int;&#x0D;
    &#x0D;
    SELECT @ret = SUM(p.[Quantity]) &#x0D;
    FROM [Production].[ProductInventory] p &#x0D;
    WHERE p.[ProductID] = @ProductID &#x0D;
        AND p.[LocationID] = '6'; -- Only look at inventory in the misc storage&#x0D;
    &#x0D;
    IF (@ret IS NULL) &#x0D;
        SET @ret = 0&#x0D;
    &#x0D;
    RETURN @ret&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
442;14/10/2005 02:00:01;"dbo";"CREATE_FUNCTION";"dbo";"ufnGetDocumentStatusText";"
CREATE FUNCTION [dbo].[ufnGetDocumentStatusText](@Status [tinyint])
RETURNS [nvarchar](15) 
AS 
-- Returns the sales order status text representation for the status value.
BEGIN
    DECLARE @ret [nvarchar](15);

    SET @ret = 
        CASE @Status
            WHEN 1 THEN 'Pending approval'
            WHEN 2 THEN 'Approved'
            WHEN 3 THEN 'Obsolete'
            ELSE '** Invalid **'
        END;
    
    RETURN @ret
END;
";"<EVENT_INSTANCE><EventType>CREATE_FUNCTION</EventType><PostTime>2005-10-14T02:00:01.367</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>ufnGetDocumentStatusText</ObjectName><ObjectType>FUNCTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE FUNCTION [dbo].[ufnGetDocumentStatusText](@Status [tinyint])&#x0D;
RETURNS [nvarchar](15) &#x0D;
AS &#x0D;
-- Returns the sales order status text representation for the status value.&#x0D;
BEGIN&#x0D;
    DECLARE @ret [nvarchar](15);&#x0D;
&#x0D;
    SET @ret = &#x0D;
        CASE @Status&#x0D;
            WHEN 1 THEN 'Pending approval'&#x0D;
            WHEN 2 THEN 'Approved'&#x0D;
            WHEN 3 THEN 'Obsolete'&#x0D;
            ELSE '** Invalid **'&#x0D;
        END;&#x0D;
    &#x0D;
    RETURN @ret&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
443;14/10/2005 02:00:01;"dbo";"CREATE_FUNCTION";"dbo";"ufnGetPurchaseOrderStatusText";"
CREATE FUNCTION [dbo].[ufnGetPurchaseOrderStatusText](@Status [tinyint])
RETURNS [nvarchar](15) 
AS 
-- Returns the sales order status text representation for the status value.
BEGIN
    DECLARE @ret [nvarchar](15);

    SET @ret = 
        CASE @Status
            WHEN 1 THEN 'Pending'
            WHEN 2 THEN 'Approved'
            WHEN 3 THEN 'Rejected'
            WHEN 4 THEN 'Complete'
            ELSE '** Invalid **'
        END;
    
    RETURN @ret
END;
";"<EVENT_INSTANCE><EventType>CREATE_FUNCTION</EventType><PostTime>2005-10-14T02:00:01.477</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>ufnGetPurchaseOrderStatusText</ObjectName><ObjectType>FUNCTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE FUNCTION [dbo].[ufnGetPurchaseOrderStatusText](@Status [tinyint])&#x0D;
RETURNS [nvarchar](15) &#x0D;
AS &#x0D;
-- Returns the sales order status text representation for the status value.&#x0D;
BEGIN&#x0D;
    DECLARE @ret [nvarchar](15);&#x0D;
&#x0D;
    SET @ret = &#x0D;
        CASE @Status&#x0D;
            WHEN 1 THEN 'Pending'&#x0D;
            WHEN 2 THEN 'Approved'&#x0D;
            WHEN 3 THEN 'Rejected'&#x0D;
            WHEN 4 THEN 'Complete'&#x0D;
            ELSE '** Invalid **'&#x0D;
        END;&#x0D;
    &#x0D;
    RETURN @ret&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
444;14/10/2005 02:00:01;"dbo";"CREATE_FUNCTION";"dbo";"ufnGetSalesOrderStatusText";"
CREATE FUNCTION [dbo].[ufnGetSalesOrderStatusText](@Status [tinyint])
RETURNS [nvarchar](15) 
AS 
-- Returns the sales order status text representation for the status value.
BEGIN
    DECLARE @ret [nvarchar](15);

    SET @ret = 
        CASE @Status
            WHEN 1 THEN 'In process'
            WHEN 2 THEN 'Approved'
            WHEN 3 THEN 'Backordered'
            WHEN 4 THEN 'Rejected'
            WHEN 5 THEN 'Shipped'
            WHEN 6 THEN 'Cancelled'
            ELSE '** Invalid **'
        END;
    
    RETURN @ret
END;
";"<EVENT_INSTANCE><EventType>CREATE_FUNCTION</EventType><PostTime>2005-10-14T02:00:01.587</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>ufnGetSalesOrderStatusText</ObjectName><ObjectType>FUNCTION</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE FUNCTION [dbo].[ufnGetSalesOrderStatusText](@Status [tinyint])&#x0D;
RETURNS [nvarchar](15) &#x0D;
AS &#x0D;
-- Returns the sales order status text representation for the status value.&#x0D;
BEGIN&#x0D;
    DECLARE @ret [nvarchar](15);&#x0D;
&#x0D;
    SET @ret = &#x0D;
        CASE @Status&#x0D;
            WHEN 1 THEN 'In process'&#x0D;
            WHEN 2 THEN 'Approved'&#x0D;
            WHEN 3 THEN 'Backordered'&#x0D;
            WHEN 4 THEN 'Rejected'&#x0D;
            WHEN 5 THEN 'Shipped'&#x0D;
            WHEN 6 THEN 'Cancelled'&#x0D;
            ELSE '** Invalid **'&#x0D;
        END;&#x0D;
    &#x0D;
    RETURN @ret&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
445;14/10/2005 02:00:01;"dbo";"CREATE_PROCEDURE";"dbo";"uspGetBillOfMaterials";"
CREATE PROCEDURE [dbo].[uspGetBillOfMaterials]
    @StartProductID [int],
    @CheckDate [datetime]
AS
BEGIN
    SET NOCOUNT ON;

    -- Use recursive query to generate a multi-level Bill of Material (i.e. all level 1 
    -- components of a level 0 assembly, all level 2 components of a level 1 assembly)
    -- The CheckDate eliminates any components that are no longer used in the product on this date.
    WITH [BOM_cte]([ProductAssemblyID], [ComponentID], [ComponentDesc], [PerAssemblyQty], [StandardCost], [ListPrice], [BOMLevel], [RecursionLevel]) -- CTE name and columns
    AS (
        SELECT b.[ProductAssemblyID], b.[ComponentID], p.[Name], b.[PerAssemblyQty], p.[StandardCost], p.[ListPrice], b.[BOMLevel], 0 -- Get the initial list of components for the bike assembly
        FROM [Production].[BillOfMaterials] b
            INNER JOIN [Production].[Product] p 
            ON b.[ComponentID] = p.[ProductID] 
        WHERE b.[ProductAssemblyID] = @StartProductID 
            AND @CheckDate >= b.[StartDate] 
            AND @CheckDate <= ISNULL(b.[EndDate], @CheckDate)
        UNION ALL
        SELECT b.[ProductAssemblyID], b.[ComponentID], p.[Name], b.[PerAssemblyQty], p.[StandardCost], p.[ListPrice], b.[BOMLevel], [RecursionLevel] + 1 -- Join recursive member to anchor
        FROM [BOM_cte] cte
            INNER JOIN [Production].[BillOfMaterials] b 
            ON b.[ProductAssemblyID] = cte.[ComponentID]
            INNER JOIN [Production].[Product] p 
            ON b.[ComponentID] = p.[ProductID] 
        WHERE @CheckDate >= b.[StartDate] 
            AND @CheckDate <= ISNULL(b.[EndDate], @CheckDate)
        )
    -- Outer select from the CTE
    SELECT b.[ProductAssemblyID], b.[ComponentID], b.[ComponentDesc], SUM(b.[PerAssemblyQty]) AS [TotalQuantity] , b.[StandardCost], b.[ListPrice], b.[BOMLevel], b.[RecursionLevel]
    FROM [BOM_cte] b
    GROUP BY b.[ComponentID], b.[ComponentDesc], b.[ProductAssemblyID], b.[BOMLevel], b.[RecursionLevel], b.[StandardCost], b.[ListPrice]
    ORDER BY b.[BOMLevel], b.[ProductAssemblyID], b.[ComponentID]
    OPTION (MAXRECURSION 25) 
END;
";"<EVENT_INSTANCE><EventType>CREATE_PROCEDURE</EventType><PostTime>2005-10-14T02:00:01.803</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>uspGetBillOfMaterials</ObjectName><ObjectType>PROCEDURE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE PROCEDURE [dbo].[uspGetBillOfMaterials]&#x0D;
    @StartProductID [int],&#x0D;
    @CheckDate [datetime]&#x0D;
AS&#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    -- Use recursive query to generate a multi-level Bill of Material (i.e. all level 1 &#x0D;
    -- components of a level 0 assembly, all level 2 components of a level 1 assembly)&#x0D;
    -- The CheckDate eliminates any components that are no longer used in the product on this date.&#x0D;
    WITH [BOM_cte]([ProductAssemblyID], [ComponentID], [ComponentDesc], [PerAssemblyQty], [StandardCost], [ListPrice], [BOMLevel], [RecursionLevel]) -- CTE name and columns&#x0D;
    AS (&#x0D;
        SELECT b.[ProductAssemblyID], b.[ComponentID], p.[Name], b.[PerAssemblyQty], p.[StandardCost], p.[ListPrice], b.[BOMLevel], 0 -- Get the initial list of components for the bike assembly&#x0D;
        FROM [Production].[BillOfMaterials] b&#x0D;
            INNER JOIN [Production].[Product] p &#x0D;
            ON b.[ComponentID] = p.[ProductID] &#x0D;
        WHERE b.[ProductAssemblyID] = @StartProductID &#x0D;
            AND @CheckDate &gt;= b.[StartDate] &#x0D;
            AND @CheckDate &lt;= ISNULL(b.[EndDate], @CheckDate)&#x0D;
        UNION ALL&#x0D;
        SELECT b.[ProductAssemblyID], b.[ComponentID], p.[Name], b.[PerAssemblyQty], p.[StandardCost], p.[ListPrice], b.[BOMLevel], [RecursionLevel] + 1 -- Join recursive member to anchor&#x0D;
        FROM [BOM_cte] cte&#x0D;
            INNER JOIN [Production].[BillOfMaterials] b &#x0D;
            ON b.[ProductAssemblyID] = cte.[ComponentID]&#x0D;
            INNER JOIN [Production].[Product] p &#x0D;
            ON b.[ComponentID] = p.[ProductID] &#x0D;
        WHERE @CheckDate &gt;= b.[StartDate] &#x0D;
            AND @CheckDate &lt;= ISNULL(b.[EndDate], @CheckDate)&#x0D;
        )&#x0D;
    -- Outer select from the CTE&#x0D;
    SELECT b.[ProductAssemblyID], b.[ComponentID], b.[ComponentDesc], SUM(b.[PerAssemblyQty]) AS [TotalQuantity] , b.[StandardCost], b.[ListPrice], b.[BOMLevel], b.[RecursionLevel]&#x0D;
    FROM [BOM_cte] b&#x0D;
    GROUP BY b.[ComponentID], b.[ComponentDesc], b.[ProductAssemblyID], b.[BOMLevel], b.[RecursionLevel], b.[StandardCost], b.[ListPrice]&#x0D;
    ORDER BY b.[BOMLevel], b.[ProductAssemblyID], b.[ComponentID]&#x0D;
    OPTION (MAXRECURSION 25) &#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
446;14/10/2005 02:00:01;"dbo";"CREATE_PROCEDURE";"dbo";"uspGetEmployeeManagers";"
CREATE PROCEDURE [dbo].[uspGetEmployeeManagers]
    @EmployeeID [int]
AS
BEGIN
    SET NOCOUNT ON;

    -- Use recursive query to list out all Employees required for a particular Manager
    WITH [EMP_cte]([EmployeeID], [ManagerID], [FirstName], [LastName], [Title], [RecursionLevel]) -- CTE name and columns
    AS (
        SELECT e.[EmployeeID], e.[ManagerID], c.[FirstName], c.[LastName], e.[Title], 0 -- Get the initial Employee
        FROM [HumanResources].[Employee] e 
            INNER JOIN [Person].[Contact] c 
            ON e.[ContactID] = c.[ContactID]
        WHERE e.[EmployeeID] = @EmployeeID
        UNION ALL
        SELECT e.[EmployeeID], e.[ManagerID], c.[FirstName], c.[LastName], e.[Title], [RecursionLevel] + 1 -- Join recursive member to anchor
        FROM [HumanResources].[Employee] e 
            INNER JOIN [EMP_cte]
            ON e.[EmployeeID] = [EMP_cte].[ManagerID]
            INNER JOIN [Person].[Contact] c 
            ON e.[ContactID] = c.[ContactID]
    )
    -- Join back to Employee to return the manager name 
    SELECT [EMP_cte].[RecursionLevel], [EMP_cte].[EmployeeID], [EMP_cte].[FirstName], [EMP_cte].[LastName], 
        [EMP_cte].[ManagerID], c.[FirstName] AS 'ManagerFirstName', c.[LastName] AS 'ManagerLastName'  -- Outer select from the CTE
    FROM [EMP_cte] 
        INNER JOIN [HumanResources].[Employee] e 
        ON [EMP_cte].[ManagerID] = e.[EmployeeID]
        INNER JOIN [Person].[Contact] c 
        ON e.[ContactID] = c.[ContactID]
    ORDER BY [RecursionLevel], [ManagerID], [EmployeeID]
    OPTION (MAXRECURSION 25) 
END;
";"<EVENT_INSTANCE><EventType>CREATE_PROCEDURE</EventType><PostTime>2005-10-14T02:00:01.913</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>uspGetEmployeeManagers</ObjectName><ObjectType>PROCEDURE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE PROCEDURE [dbo].[uspGetEmployeeManagers]&#x0D;
    @EmployeeID [int]&#x0D;
AS&#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    -- Use recursive query to list out all Employees required for a particular Manager&#x0D;
    WITH [EMP_cte]([EmployeeID], [ManagerID], [FirstName], [LastName], [Title], [RecursionLevel]) -- CTE name and columns&#x0D;
    AS (&#x0D;
        SELECT e.[EmployeeID], e.[ManagerID], c.[FirstName], c.[LastName], e.[Title], 0 -- Get the initial Employee&#x0D;
        FROM [HumanResources].[Employee] e &#x0D;
            INNER JOIN [Person].[Contact] c &#x0D;
            ON e.[ContactID] = c.[ContactID]&#x0D;
        WHERE e.[EmployeeID] = @EmployeeID&#x0D;
        UNION ALL&#x0D;
        SELECT e.[EmployeeID], e.[ManagerID], c.[FirstName], c.[LastName], e.[Title], [RecursionLevel] + 1 -- Join recursive member to anchor&#x0D;
        FROM [HumanResources].[Employee] e &#x0D;
            INNER JOIN [EMP_cte]&#x0D;
            ON e.[EmployeeID] = [EMP_cte].[ManagerID]&#x0D;
            INNER JOIN [Person].[Contact] c &#x0D;
            ON e.[ContactID] = c.[ContactID]&#x0D;
    )&#x0D;
    -- Join back to Employee to return the manager name &#x0D;
    SELECT [EMP_cte].[RecursionLevel], [EMP_cte].[EmployeeID], [EMP_cte].[FirstName], [EMP_cte].[LastName], &#x0D;
        [EMP_cte].[ManagerID], c.[FirstName] AS 'ManagerFirstName', c.[LastName] AS 'ManagerLastName'  -- Outer select from the CTE&#x0D;
    FROM [EMP_cte] &#x0D;
        INNER JOIN [HumanResources].[Employee] e &#x0D;
        ON [EMP_cte].[ManagerID] = e.[EmployeeID]&#x0D;
        INNER JOIN [Person].[Contact] c &#x0D;
        ON e.[ContactID] = c.[ContactID]&#x0D;
    ORDER BY [RecursionLevel], [ManagerID], [EmployeeID]&#x0D;
    OPTION (MAXRECURSION 25) &#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
447;14/10/2005 02:00:02;"dbo";"CREATE_PROCEDURE";"dbo";"uspGetManagerEmployees";"
CREATE PROCEDURE [dbo].[uspGetManagerEmployees]
    @ManagerID [int]
AS
BEGIN
    SET NOCOUNT ON;

    -- Use recursive query to list out all Employees required for a particular Manager
    WITH [EMP_cte]([EmployeeID], [ManagerID], [FirstName], [LastName], [RecursionLevel]) -- CTE name and columns
    AS (
        SELECT e.[EmployeeID], e.[ManagerID], c.[FirstName], c.[LastName], 0 -- Get the initial list of Employees for Manager n
        FROM [HumanResources].[Employee] e 
            INNER JOIN [Person].[Contact] c 
            ON e.[ContactID] = c.[ContactID]
        WHERE [ManagerID] = @ManagerID
        UNION ALL
        SELECT e.[EmployeeID], e.[ManagerID], c.[FirstName], c.[LastName], [RecursionLevel] + 1 -- Join recursive member to anchor
        FROM [HumanResources].[Employee] e 
            INNER JOIN [EMP_cte]
            ON e.[ManagerID] = [EMP_cte].[EmployeeID]
            INNER JOIN [Person].[Contact] c 
            ON e.[ContactID] = c.[ContactID]
        )
    -- Join back to Employee to return the manager name 
    SELECT [EMP_cte].[RecursionLevel], [EMP_cte].[ManagerID], c.[FirstName] AS 'ManagerFirstName', c.[LastName] AS 'ManagerLastName',
        [EMP_cte].[EmployeeID], [EMP_cte].[FirstName], [EMP_cte].[LastName] -- Outer select from the CTE
    FROM [EMP_cte] 
        INNER JOIN [HumanResources].[Employee] e 
        ON [EMP_cte].[ManagerID] = e.[EmployeeID]
        INNER JOIN [Person].[Contact] c 
        ON e.[ContactID] = c.[ContactID]
    ORDER BY [RecursionLevel], [ManagerID], [EmployeeID]
    OPTION (MAXRECURSION 25) 
END;
";"<EVENT_INSTANCE><EventType>CREATE_PROCEDURE</EventType><PostTime>2005-10-14T02:00:02.023</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>uspGetManagerEmployees</ObjectName><ObjectType>PROCEDURE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE PROCEDURE [dbo].[uspGetManagerEmployees]&#x0D;
    @ManagerID [int]&#x0D;
AS&#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    -- Use recursive query to list out all Employees required for a particular Manager&#x0D;
    WITH [EMP_cte]([EmployeeID], [ManagerID], [FirstName], [LastName], [RecursionLevel]) -- CTE name and columns&#x0D;
    AS (&#x0D;
        SELECT e.[EmployeeID], e.[ManagerID], c.[FirstName], c.[LastName], 0 -- Get the initial list of Employees for Manager n&#x0D;
        FROM [HumanResources].[Employee] e &#x0D;
            INNER JOIN [Person].[Contact] c &#x0D;
            ON e.[ContactID] = c.[ContactID]&#x0D;
        WHERE [ManagerID] = @ManagerID&#x0D;
        UNION ALL&#x0D;
        SELECT e.[EmployeeID], e.[ManagerID], c.[FirstName], c.[LastName], [RecursionLevel] + 1 -- Join recursive member to anchor&#x0D;
        FROM [HumanResources].[Employee] e &#x0D;
            INNER JOIN [EMP_cte]&#x0D;
            ON e.[ManagerID] = [EMP_cte].[EmployeeID]&#x0D;
            INNER JOIN [Person].[Contact] c &#x0D;
            ON e.[ContactID] = c.[ContactID]&#x0D;
        )&#x0D;
    -- Join back to Employee to return the manager name &#x0D;
    SELECT [EMP_cte].[RecursionLevel], [EMP_cte].[ManagerID], c.[FirstName] AS 'ManagerFirstName', c.[LastName] AS 'ManagerLastName',&#x0D;
        [EMP_cte].[EmployeeID], [EMP_cte].[FirstName], [EMP_cte].[LastName] -- Outer select from the CTE&#x0D;
    FROM [EMP_cte] &#x0D;
        INNER JOIN [HumanResources].[Employee] e &#x0D;
        ON [EMP_cte].[ManagerID] = e.[EmployeeID]&#x0D;
        INNER JOIN [Person].[Contact] c &#x0D;
        ON e.[ContactID] = c.[ContactID]&#x0D;
    ORDER BY [RecursionLevel], [ManagerID], [EmployeeID]&#x0D;
    OPTION (MAXRECURSION 25) &#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
448;14/10/2005 02:00:02;"dbo";"CREATE_PROCEDURE";"dbo";"uspGetWhereUsedProductID";"
CREATE PROCEDURE [dbo].[uspGetWhereUsedProductID]
    @StartProductID [int],
    @CheckDate [datetime]
AS
BEGIN
    SET NOCOUNT ON;

    --Use recursive query to generate a multi-level Bill of Material (i.e. all level 1 components of a level 0 assembly, all level 2 components of a level 1 assembly)
    WITH [BOM_cte]([ProductAssemblyID], [ComponentID], [ComponentDesc], [PerAssemblyQty], [StandardCost], [ListPrice], [BOMLevel], [RecursionLevel]) -- CTE name and columns
    AS (
        SELECT b.[ProductAssemblyID], b.[ComponentID], p.[Name], b.[PerAssemblyQty], p.[StandardCost], p.[ListPrice], b.[BOMLevel], 0 -- Get the initial list of components for the bike assembly
        FROM [Production].[BillOfMaterials] b
            INNER JOIN [Production].[Product] p 
            ON b.[ProductAssemblyID] = p.[ProductID] 
        WHERE b.[ComponentID] = @StartProductID 
            AND @CheckDate >= b.[StartDate] 
            AND @CheckDate <= ISNULL(b.[EndDate], @CheckDate)
        UNION ALL
        SELECT b.[ProductAssemblyID], b.[ComponentID], p.[Name], b.[PerAssemblyQty], p.[StandardCost], p.[ListPrice], b.[BOMLevel], [RecursionLevel] + 1 -- Join recursive member to anchor
        FROM [BOM_cte] cte
            INNER JOIN [Production].[BillOfMaterials] b 
            ON cte.[ProductAssemblyID] = b.[ComponentID]
            INNER JOIN [Production].[Product] p 
            ON b.[ProductAssemblyID] = p.[ProductID] 
        WHERE @CheckDate >= b.[StartDate] 
            AND @CheckDate <= ISNULL(b.[EndDate], @CheckDate)
        )
    -- Outer select from the CTE
    SELECT b.[ProductAssemblyID], b.[ComponentID], b.[ComponentDesc], SUM(b.[PerAssemblyQty]) AS [TotalQuantity] , b.[StandardCost], b.[ListPrice], b.[BOMLevel], b.[RecursionLevel]
    FROM [BOM_cte] b
    GROUP BY b.[ComponentID], b.[ComponentDesc], b.[ProductAssemblyID], b.[BOMLevel], b.[RecursionLevel], b.[StandardCost], b.[ListPrice]
    ORDER BY b.[BOMLevel], b.[ProductAssemblyID], b.[ComponentID]
    OPTION (MAXRECURSION 25) 
END;
";"<EVENT_INSTANCE><EventType>CREATE_PROCEDURE</EventType><PostTime>2005-10-14T02:00:02.133</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>dbo</SchemaName><ObjectName>uspGetWhereUsedProductID</ObjectName><ObjectType>PROCEDURE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE PROCEDURE [dbo].[uspGetWhereUsedProductID]&#x0D;
    @StartProductID [int],&#x0D;
    @CheckDate [datetime]&#x0D;
AS&#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    --Use recursive query to generate a multi-level Bill of Material (i.e. all level 1 components of a level 0 assembly, all level 2 components of a level 1 assembly)&#x0D;
    WITH [BOM_cte]([ProductAssemblyID], [ComponentID], [ComponentDesc], [PerAssemblyQty], [StandardCost], [ListPrice], [BOMLevel], [RecursionLevel]) -- CTE name and columns&#x0D;
    AS (&#x0D;
        SELECT b.[ProductAssemblyID], b.[ComponentID], p.[Name], b.[PerAssemblyQty], p.[StandardCost], p.[ListPrice], b.[BOMLevel], 0 -- Get the initial list of components for the bike assembly&#x0D;
        FROM [Production].[BillOfMaterials] b&#x0D;
            INNER JOIN [Production].[Product] p &#x0D;
            ON b.[ProductAssemblyID] = p.[ProductID] &#x0D;
        WHERE b.[ComponentID] = @StartProductID &#x0D;
            AND @CheckDate &gt;= b.[StartDate] &#x0D;
            AND @CheckDate &lt;= ISNULL(b.[EndDate], @CheckDate)&#x0D;
        UNION ALL&#x0D;
        SELECT b.[ProductAssemblyID], b.[ComponentID], p.[Name], b.[PerAssemblyQty], p.[StandardCost], p.[ListPrice], b.[BOMLevel], [RecursionLevel] + 1 -- Join recursive member to anchor&#x0D;
        FROM [BOM_cte] cte&#x0D;
            INNER JOIN [Production].[BillOfMaterials] b &#x0D;
            ON cte.[ProductAssemblyID] = b.[ComponentID]&#x0D;
            INNER JOIN [Production].[Product] p &#x0D;
            ON b.[ProductAssemblyID] = p.[ProductID] &#x0D;
        WHERE @CheckDate &gt;= b.[StartDate] &#x0D;
            AND @CheckDate &lt;= ISNULL(b.[EndDate], @CheckDate)&#x0D;
        )&#x0D;
    -- Outer select from the CTE&#x0D;
    SELECT b.[ProductAssemblyID], b.[ComponentID], b.[ComponentDesc], SUM(b.[PerAssemblyQty]) AS [TotalQuantity] , b.[StandardCost], b.[ListPrice], b.[BOMLevel], b.[RecursionLevel]&#x0D;
    FROM [BOM_cte] b&#x0D;
    GROUP BY b.[ComponentID], b.[ComponentDesc], b.[ProductAssemblyID], b.[BOMLevel], b.[RecursionLevel], b.[StandardCost], b.[ListPrice]&#x0D;
    ORDER BY b.[BOMLevel], b.[ProductAssemblyID], b.[ComponentID]&#x0D;
    OPTION (MAXRECURSION 25) &#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
449;14/10/2005 02:00:02;"dbo";"CREATE_PROCEDURE";"HumanResources";"uspUpdateEmployeeHireInfo";"
CREATE PROCEDURE [HumanResources].[uspUpdateEmployeeHireInfo]
    @EmployeeID [int], 
    @Title [nvarchar](50), 
    @HireDate [datetime], 
    @RateChangeDate [datetime], 
    @Rate [money], 
    @PayFrequency [tinyint], 
    @CurrentFlag [dbo].[Flag] 
WITH EXECUTE AS CALLER
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        BEGIN TRANSACTION;

        UPDATE [HumanResources].[Employee] 
        SET [Title] = @Title 
            ,[HireDate] = @HireDate 
            ,[CurrentFlag] = @CurrentFlag 
        WHERE [EmployeeID] = @EmployeeID;

        INSERT INTO [HumanResources].[EmployeePayHistory] 
            ([EmployeeID]
            ,[RateChangeDate]
            ,[Rate]
            ,[PayFrequency]) 
        VALUES (@EmployeeID, @RateChangeDate, @Rate, @PayFrequency);

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        -- Rollback any active or uncommittable transactions before
        -- inserting information in the ErrorLog
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION;
        END

        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_PROCEDURE</EventType><PostTime>2005-10-14T02:00:02.240</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>uspUpdateEmployeeHireInfo</ObjectName><ObjectType>PROCEDURE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE PROCEDURE [HumanResources].[uspUpdateEmployeeHireInfo]&#x0D;
    @EmployeeID [int], &#x0D;
    @Title [nvarchar](50), &#x0D;
    @HireDate [datetime], &#x0D;
    @RateChangeDate [datetime], &#x0D;
    @Rate [money], &#x0D;
    @PayFrequency [tinyint], &#x0D;
    @CurrentFlag [dbo].[Flag] &#x0D;
WITH EXECUTE AS CALLER&#x0D;
AS&#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        BEGIN TRANSACTION;&#x0D;
&#x0D;
        UPDATE [HumanResources].[Employee] &#x0D;
        SET [Title] = @Title &#x0D;
            ,[HireDate] = @HireDate &#x0D;
            ,[CurrentFlag] = @CurrentFlag &#x0D;
        WHERE [EmployeeID] = @EmployeeID;&#x0D;
&#x0D;
        INSERT INTO [HumanResources].[EmployeePayHistory] &#x0D;
            ([EmployeeID]&#x0D;
            ,[RateChangeDate]&#x0D;
            ,[Rate]&#x0D;
            ,[PayFrequency]) &#x0D;
        VALUES (@EmployeeID, @RateChangeDate, @Rate, @PayFrequency);&#x0D;
&#x0D;
        COMMIT TRANSACTION;&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        -- Rollback any active or uncommittable transactions before&#x0D;
        -- inserting information in the ErrorLog&#x0D;
        IF @@TRANCOUNT &gt; 0&#x0D;
        BEGIN&#x0D;
            ROLLBACK TRANSACTION;&#x0D;
        END&#x0D;
&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
450;14/10/2005 02:00:02;"dbo";"CREATE_PROCEDURE";"HumanResources";"uspUpdateEmployeeLogin";"
CREATE PROCEDURE [HumanResources].[uspUpdateEmployeeLogin]
    @EmployeeID [int], 
    @ManagerID [int],
    @LoginID [nvarchar](256),
    @Title [nvarchar](50),
    @HireDate [datetime],
    @CurrentFlag [dbo].[Flag]
WITH EXECUTE AS CALLER
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [HumanResources].[Employee] 
        SET [ManagerID] = @ManagerID 
            ,[LoginID] = @LoginID 
            ,[Title] = @Title 
            ,[HireDate] = @HireDate 
            ,[CurrentFlag] = @CurrentFlag 
        WHERE [EmployeeID] = @EmployeeID;
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_PROCEDURE</EventType><PostTime>2005-10-14T02:00:02.350</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>uspUpdateEmployeeLogin</ObjectName><ObjectType>PROCEDURE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE PROCEDURE [HumanResources].[uspUpdateEmployeeLogin]&#x0D;
    @EmployeeID [int], &#x0D;
    @ManagerID [int],&#x0D;
    @LoginID [nvarchar](256),&#x0D;
    @Title [nvarchar](50),&#x0D;
    @HireDate [datetime],&#x0D;
    @CurrentFlag [dbo].[Flag]&#x0D;
WITH EXECUTE AS CALLER&#x0D;
AS&#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [HumanResources].[Employee] &#x0D;
        SET [ManagerID] = @ManagerID &#x0D;
            ,[LoginID] = @LoginID &#x0D;
            ,[Title] = @Title &#x0D;
            ,[HireDate] = @HireDate &#x0D;
            ,[CurrentFlag] = @CurrentFlag &#x0D;
        WHERE [EmployeeID] = @EmployeeID;&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
451;14/10/2005 02:00:02;"dbo";"CREATE_PROCEDURE";"HumanResources";"uspUpdateEmployeePersonalInfo";"
CREATE PROCEDURE [HumanResources].[uspUpdateEmployeePersonalInfo]
    @EmployeeID [int], 
    @NationalIDNumber [nvarchar](15), 
    @BirthDate [datetime], 
    @MaritalStatus [nchar](1), 
    @Gender [nchar](1)
WITH EXECUTE AS CALLER
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        UPDATE [HumanResources].[Employee] 
        SET [NationalIDNumber] = @NationalIDNumber 
            ,[BirthDate] = @BirthDate 
            ,[MaritalStatus] = @MaritalStatus 
            ,[Gender] = @Gender 
        WHERE [EmployeeID] = @EmployeeID;
    END TRY
    BEGIN CATCH
        EXECUTE [dbo].[uspLogError];
    END CATCH;
END;
";"<EVENT_INSTANCE><EventType>CREATE_PROCEDURE</EventType><PostTime>2005-10-14T02:00:02.460</PostTime><SPID>51</SPID><ServerName>SQLBLD162\MKMASTR</ServerName><LoginName>sa</LoginName><UserName>dbo</UserName><DatabaseName>adventureworks</DatabaseName><SchemaName>HumanResources</SchemaName><ObjectName>uspUpdateEmployeePersonalInfo</ObjectName><ObjectType>PROCEDURE</ObjectType><TSQLCommand><SetOptions ANSI_NULLS=""ON"" ANSI_NULL_DEFAULT=""ON"" ANSI_PADDING=""ON"" QUOTED_IDENTIFIER=""ON"" ENCRYPTED=""FALSE""/><CommandText>&#x0D;
CREATE PROCEDURE [HumanResources].[uspUpdateEmployeePersonalInfo]&#x0D;
    @EmployeeID [int], &#x0D;
    @NationalIDNumber [nvarchar](15), &#x0D;
    @BirthDate [datetime], &#x0D;
    @MaritalStatus [nchar](1), &#x0D;
    @Gender [nchar](1)&#x0D;
WITH EXECUTE AS CALLER&#x0D;
AS&#x0D;
BEGIN&#x0D;
    SET NOCOUNT ON;&#x0D;
&#x0D;
    BEGIN TRY&#x0D;
        UPDATE [HumanResources].[Employee] &#x0D;
        SET [NationalIDNumber] = @NationalIDNumber &#x0D;
            ,[BirthDate] = @BirthDate &#x0D;
            ,[MaritalStatus] = @MaritalStatus &#x0D;
            ,[Gender] = @Gender &#x0D;
        WHERE [EmployeeID] = @EmployeeID;&#x0D;
    END TRY&#x0D;
    BEGIN CATCH&#x0D;
        EXECUTE [dbo].[uspLogError];&#x0D;
    END CATCH;&#x0D;
END;&#x0D;
</CommandText></TSQLCommand></EVENT_INSTANCE>"
